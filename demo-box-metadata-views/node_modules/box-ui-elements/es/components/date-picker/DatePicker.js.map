{"version":3,"sources":["../../../src/components/date-picker/DatePicker.js"],"names":["React","defineMessages","injectIntl","FormattedMessage","classNames","Pikaday","range","uniqueId","RESIN_TAG_TARGET","IconAlert","IconCalendar","IconClear","Label","PlainButton","Tooltip","convertDateToUnixMidnightTime","messages","previousMonth","nextMonth","iconAlertText","dateClearButton","chooseDate","TOGGLE_DELAY_MS","ISO_STRING_DATE_FORMAT","UTC_TIME_DATE_FORMAT","UNIX_TIME_DATE_FORMAT","UTC_ISO_STRING_DATE_FORMAT","ENTER_KEY","ESCAPE_KEY","TAB_KEY","stub","convertUTCToLocal","date","dateString","toUTCString","dateStringWithoutTimeZone","slice","Date","getFormattedDate","format","utcDate","toISOString","getTime","localesWhereWeekStartsOnSunday","DatePicker","onChange","props","formattedDate","formatValue","dateInputEl","focus","event","isTextInputAllowed","datePicker","isVisible","stopPropagation","key","preventDefault","hide","onBlur","nextActiveElement","relatedTarget","document","activeElement","datePickerButtonEl","shouldStayClosed","setTimeout","inputDate","value","getDate","onSelectHandler","focusDatePicker","displayFormat","intl","formatDate","dateFormat","setDate","maxDate","minDate","yearRange","formatMessage","defaultValue","year","getFullYear","i18n","months","map","month","weekdays","weekday","weekdaysShort","blurFieldOnSelect","setDefaultDate","defaultDate","field","firstDay","includes","locale","position","showDaysInNextAndPreviousMonths","onSelect","toString","formatDisplay","updateDateInputValue","nextProps","nextValue","nextMinDate","nextMaxDate","setMinDate","gotoDate","setMaxDate","destroy","className","description","error","errorTooltipPosition","hideLabel","hideOptionalLabel","inputProps","isClearable","isDisabled","isRequired","label","name","onFocus","placeholder","resinTarget","classes","hasError","ariaAttrs","errorMessageID","descriptionID","undefined","resinTargetAttr","valueAttr","onChangeAttr","ref","handleInputBlur","handleInputKeyDown","clearDate","handleButtonClick","Component","DatePickerBase"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport classNames from 'classnames';\nimport Pikaday from 'pikaday';\nimport range from 'lodash/range';\nimport uniqueId from 'lodash/uniqueId';\n\nimport { RESIN_TAG_TARGET } from '../../common/variables';\nimport IconAlert from '../../icons/general/IconAlert';\nimport IconCalendar from '../../icons/general/IconCalendar';\nimport IconClear from '../../icons/general/IconClear';\n\nimport Label from '../label';\nimport PlainButton from '../plain-button';\nimport Tooltip from '../tooltip';\n\nimport { convertDateToUnixMidnightTime } from '../../utils/datetime';\n\nimport './DatePicker.scss';\n\nconst messages = defineMessages({\n    previousMonth: {\n        defaultMessage: 'Previous Month',\n        description: 'Previous month button for a date picker calendar',\n        id: 'boxui.base.previousMonth',\n    },\n    nextMonth: {\n        defaultMessage: 'Next Month',\n        description: 'Next month button for a date picker calendar',\n        id: 'boxui.base.nextMonth',\n    },\n    iconAlertText: {\n        defaultMessage: 'Invalid Date',\n        description: 'Date entered is invalid',\n        id: 'boxui.datePicker.iconAlertText',\n    },\n    dateClearButton: {\n        defaultMessage: 'Clear Date',\n        description: 'Button for clearing date picker',\n        id: 'boxui.datePicker.dateClearButton',\n    },\n    chooseDate: {\n        defaultMessage: 'Choose Date',\n        description: 'Button for opening date picker',\n        id: 'boxui.datePicker.chooseDate',\n    },\n});\n\nconst TOGGLE_DELAY_MS = 300;\nconst ISO_STRING_DATE_FORMAT = 'isoString';\nconst UTC_TIME_DATE_FORMAT = 'utcTime';\nconst UNIX_TIME_DATE_FORMAT = 'unixTime';\nconst UTC_ISO_STRING_DATE_FORMAT = 'utcISOString';\nconst ENTER_KEY = 'Enter';\nconst ESCAPE_KEY = 'Escape';\nconst TAB_KEY = 'Tab';\n\nconst stub = () => {};\n\n/**\n * Converts date from being relative to GMT, to being relative to browser\n * timezone. E.g., Thu Jun 29 2017 00:00:00 GMT =>\n * Thu Jun 29 2017 00:00:00 GMT-0700 (PDT)\n * @param {Date} date UTC date\n * @returns {Date} date Local date\n */\nfunction convertUTCToLocal(date: Date) {\n    const dateString = date.toUTCString();\n    // Remove ` GMT` from the timestamp string\n    const dateStringWithoutTimeZone = dateString.slice(0, -4);\n    return new Date(dateStringWithoutTimeZone);\n}\n\nfunction getFormattedDate(date, format) {\n    if (!date) {\n        return '';\n    }\n\n    let utcDate;\n\n    switch (format) {\n        case ISO_STRING_DATE_FORMAT:\n            return date.toISOString();\n        case UTC_TIME_DATE_FORMAT:\n            return convertDateToUnixMidnightTime(date);\n        case UTC_ISO_STRING_DATE_FORMAT:\n            utcDate = new Date(convertDateToUnixMidnightTime(date));\n            return utcDate.toISOString();\n        default:\n            return date.getTime();\n    }\n}\n\nconst localesWhereWeekStartsOnSunday = ['en-US', 'en-CA', 'jp-JP'];\n\ntype Props = {\n    /** Add a css class to the component */\n    className?: string,\n    /** The format of the date value for form submit */\n    dateFormat?: string,\n    /** Some optional description */\n    description?: React.Node,\n    /** The format of the date displayed in the input field */\n    displayFormat?: Object,\n    /** Error message */\n    error?: React.Node,\n    /** Position of error message tooltip */\n    errorTooltipPosition?:\n        | 'bottom-left'\n        | 'bottom-center'\n        | 'bottom-right'\n        | 'middle-left'\n        | 'middle-right'\n        | 'top-center'\n        | 'top-left'\n        | 'top-right',\n    /** Whether to show or hide the field's label */\n    hideLabel?: boolean,\n    /** Whether show or hide the 'Optional' label */\n    hideOptionalLabel?: boolean,\n    /** Props that will be applied on the input element */\n    inputProps?: Object,\n    /** Is input clearable */\n    isClearable?: boolean,\n    /** Is input disabled */\n    isDisabled?: boolean,\n    /** Is input required */\n    isRequired?: boolean,\n    /** Is user allowed to manually input a value (WARNING: this doesn't work with internationalization) */\n    isTextInputAllowed?: boolean,\n    /** Label displayed for the text input */\n    label: React.Node,\n    /** The maximum date allowed to be selected */\n    maxDate?: Date,\n    /** The minimum date allowed to be selected */\n    minDate?: Date,\n    /** Name of the text input */\n    name?: string,\n    /** Called when input lose focus */\n    onBlur?: Function,\n    /** Called when input is changed, passed the selected Date */\n    onChange?: Function,\n    /** Called when input receives focus */\n    onFocus?: Function,\n    /** Placeholder for the text input */\n    placeholder?: string,\n    /** Resin tag */\n    resinTarget?: string,\n    /** Date to set the input */\n    value?: Date,\n    yearRange?: number | Array<number>,\n} & InjectIntlProvidedProps;\n\nclass DatePicker extends React.Component<Props> {\n    static defaultProps = {\n        className: '',\n        dateFormat: UNIX_TIME_DATE_FORMAT,\n        displayFormat: {},\n        error: '',\n        errorTooltipPosition: 'bottom-left',\n        inputProps: {},\n        isClearable: true,\n        isTextInputAllowed: false,\n        yearRange: 10,\n    };\n\n    errorMessageID = uniqueId('errorMessage');\n\n    descriptionID = uniqueId('description');\n\n    componentDidMount() {\n        const { dateFormat, intl, maxDate, minDate, value, yearRange, isTextInputAllowed } = this.props;\n        const { formatDate, formatMessage } = intl;\n        const { nextMonth, previousMonth } = messages;\n        let defaultValue = value;\n        // When date format is utcTime, initial date needs to be converted from being relative to GMT to being\n        // relative to browser timezone\n        if (dateFormat === UTC_TIME_DATE_FORMAT && typeof value !== 'undefined') {\n            defaultValue = convertUTCToLocal(value);\n        }\n        // Make sure the DST detection algorithm in browsers is up-to-date\n        const year = new Date().getFullYear();\n\n        const i18n = {\n            previousMonth: formatMessage(previousMonth),\n            nextMonth: formatMessage(nextMonth),\n            months: range(12).map(month => formatDate(new Date(year, month, 15), { month: 'long' })),\n            // weekdays must start with Sunday, so array of dates below is May 1st-8th, 2016\n            weekdays: range(1, 8).map(date => formatDate(new Date(2016, 4, date), { weekday: 'long' })),\n            weekdaysShort: range(1, 8).map(date => formatDate(new Date(2016, 4, date), { weekday: 'narrow' })),\n        };\n\n        this.datePicker = new Pikaday({\n            blurFieldOnSelect: false, // Available in pikaday > 1.5.1\n            setDefaultDate: true,\n            defaultDate: defaultValue,\n            field: this.dateInputEl,\n            firstDay: localesWhereWeekStartsOnSunday.includes(intl.locale) ? 0 : 1,\n            maxDate,\n            minDate,\n            position: 'bottom left',\n            i18n,\n            showDaysInNextAndPreviousMonths: true,\n            onSelect: this.onSelectHandler,\n            yearRange,\n            toString: this.formatDisplay,\n        });\n\n        if (isTextInputAllowed) {\n            this.updateDateInputValue(this.formatDisplay(defaultValue));\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps: Props) {\n        const { value: nextValue, minDate: nextMinDate, maxDate: nextMaxDate } = nextProps;\n        const { value, minDate, maxDate, isTextInputAllowed } = this.props;\n\n        // only set date when props change\n        if (\n            (nextValue && !value) ||\n            (!nextValue && value) ||\n            (nextValue && value && nextValue.getTime() !== value.getTime())\n        ) {\n            this.datePicker.setDate(nextValue);\n        }\n        // If text input is allowed the dateInputEl will act as an uncontrolled input and\n        // we need to set formatted value manually.\n        if (isTextInputAllowed) {\n            this.updateDateInputValue(this.formatDisplay(nextValue));\n        }\n        if (\n            (nextMinDate && !minDate) ||\n            (!nextMinDate && minDate) ||\n            (nextMinDate && minDate && nextMinDate.getTime() !== minDate.getTime())\n        ) {\n            this.datePicker.setMinDate(nextMinDate);\n\n            if (this.datePicker.getDate() < nextMinDate) {\n                this.datePicker.gotoDate(nextMinDate);\n            }\n        }\n        if (\n            (nextMaxDate && !maxDate) ||\n            (!nextMaxDate && maxDate) ||\n            (nextMaxDate && maxDate && nextMaxDate.getTime() !== maxDate.getTime())\n        ) {\n            this.datePicker.setMaxDate(nextMaxDate);\n\n            if (this.datePicker.getDate() > nextMaxDate) {\n                this.datePicker.gotoDate(nextMaxDate);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        this.datePicker.destroy();\n    }\n\n    onSelectHandler = (date: ?Date) => {\n        const { onChange } = this.props;\n        if (onChange) {\n            const formattedDate = this.formatValue(date);\n            onChange(date, formattedDate);\n        }\n    };\n\n    updateDateInputValue(value: string) {\n        if (this.dateInputEl) {\n            this.dateInputEl.value = value;\n        }\n    }\n\n    dateInputEl: ?HTMLInputElement;\n\n    datePicker: Pikaday;\n\n    datePickerButtonEl: ?HTMLButtonElement;\n\n    // Used to prevent bad sequences of hide/show when toggling the datepicker button\n    shouldStayClosed = false;\n\n    focusDatePicker = () => {\n        // By default, this will open the datepicker too\n        if (this.dateInputEl) {\n            this.dateInputEl.focus();\n        }\n    };\n\n    handleInputKeyDown = (event: SyntheticKeyboardEvent<HTMLInputElement>) => {\n        const { isTextInputAllowed } = this.props;\n\n        if (this.datePicker.isVisible()) {\n            event.stopPropagation();\n        }\n\n        // Stops up/down arrow & spacebar from moving page scroll position since pikaday does not preventDefault correctly\n        if (!isTextInputAllowed && event.key !== TAB_KEY) {\n            event.preventDefault();\n        }\n\n        if (isTextInputAllowed && event.key === ENTER_KEY) {\n            event.preventDefault();\n        }\n\n        if (event.key === ENTER_KEY || event.key === ESCAPE_KEY || event.key === ' ') {\n            // Since pikaday auto-selects when you move the select box, enter/space don't do anything but close the date picker\n            if (this.datePicker.isVisible()) {\n                this.datePicker.hide();\n            }\n        }\n    };\n\n    handleInputBlur = (event: SyntheticFocusEvent<HTMLInputElement>) => {\n        const { onBlur, isTextInputAllowed } = this.props;\n\n        const nextActiveElement = event.relatedTarget || document.activeElement;\n\n        // This is mostly here to cancel out the pikaday hide() on blur\n        if (this.datePicker.isVisible() && nextActiveElement && nextActiveElement === this.datePickerButtonEl) {\n            this.shouldStayClosed = true;\n            setTimeout(() => {\n                this.shouldStayClosed = false;\n            }, TOGGLE_DELAY_MS);\n        }\n\n        if (onBlur) {\n            onBlur(event);\n        }\n\n        // Since we Fire parent onChange event if isTextInputAllowed\n        // fire it on blur if the user typed a correct date format\n        let inputDate: ?Date = null;\n\n        if (this.dateInputEl) {\n            inputDate = new Date(this.dateInputEl.value);\n        }\n\n        if (isTextInputAllowed && inputDate && inputDate.getDate()) {\n            this.onSelectHandler(inputDate);\n        }\n    };\n\n    handleButtonClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n\n        if (!this.shouldStayClosed) {\n            this.focusDatePicker();\n        }\n    };\n\n    formatDisplay = (date?: Date): string => {\n        const { displayFormat, intl } = this.props;\n        return date ? intl.formatDate(date, displayFormat) : '';\n    };\n\n    formatValue = (date: ?Date) => {\n        const { dateFormat } = this.props;\n        return getFormattedDate(date, dateFormat);\n    };\n\n    clearDate = (event: SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault(); // so datepicker doesn't open after clearing\n        this.datePicker.setDate(null);\n        this.onSelectHandler(null);\n    };\n\n    render() {\n        const {\n            className,\n            description,\n            error,\n            errorTooltipPosition,\n            hideLabel,\n            hideOptionalLabel,\n            inputProps,\n            intl,\n            isClearable,\n            isDisabled,\n            isRequired,\n            isTextInputAllowed,\n            label,\n            name,\n            onFocus,\n            placeholder,\n            resinTarget,\n            value,\n        } = this.props;\n\n        const { formatMessage } = intl;\n        const classes = classNames(className, 'date-picker-wrapper', {\n            'show-clear-btn': !!value,\n            'show-error': !!error,\n        });\n\n        const hasError = !!error;\n\n        const ariaAttrs = {\n            'aria-invalid': hasError,\n            'aria-required': isRequired,\n            'aria-errormessage': this.errorMessageID,\n            'aria-describedby': description ? this.descriptionID : undefined,\n        };\n\n        const resinTargetAttr = resinTarget ? { [RESIN_TAG_TARGET]: resinTarget } : {};\n\n        const valueAttr = isTextInputAllowed\n            ? { defaultValue: this.formatDisplay(value) }\n            : { value: this.formatDisplay(value) };\n\n        const onChangeAttr = isTextInputAllowed\n            ? {}\n            : {\n                  onChange: stub,\n              }; /* fixes proptype error about readonly field (not adding readonly so constraint validation works) */\n\n        return (\n            <div className={classes}>\n                <span className=\"date-picker-icon-holder\">\n                    <Label hideLabel={hideLabel} showOptionalText={!hideOptionalLabel && !isRequired} text={label}>\n                        {!!description && (\n                            <div id={this.descriptionID} className=\"date-picker-description\">\n                                {description}\n                            </div>\n                        )}\n                        <Tooltip\n                            className=\"date-picker-error-tooltip\"\n                            isShown={!!error}\n                            position={errorTooltipPosition}\n                            text={error || ''}\n                            theme=\"error\"\n                        >\n                            <input\n                                ref={ref => {\n                                    this.dateInputEl = ref;\n                                }}\n                                className=\"date-picker-input\"\n                                disabled={isDisabled}\n                                onBlur={this.handleInputBlur}\n                                placeholder={placeholder || formatMessage(messages.chooseDate)}\n                                required={isRequired}\n                                type=\"text\"\n                                {...onChangeAttr}\n                                onFocus={onFocus}\n                                onKeyDown={this.handleInputKeyDown}\n                                {...resinTargetAttr}\n                                {...ariaAttrs}\n                                {...inputProps}\n                                {...valueAttr}\n                            />\n                        </Tooltip>\n                        <span id={this.errorMessageID} className=\"accessibility-hidden\" role=\"alert\">\n                            {error}\n                        </span>\n                    </Label>\n                    {isClearable && !!value && !isDisabled ? (\n                        <PlainButton\n                            aria-label={formatMessage(messages.dateClearButton)}\n                            className=\"date-picker-clear-btn\"\n                            onClick={this.clearDate}\n                            type=\"button\"\n                        >\n                            <IconClear height={12} width={12} />\n                        </PlainButton>\n                    ) : null}\n                    {error ? (\n                        <IconAlert\n                            className=\"date-picker-icon-alert\"\n                            height={13}\n                            title={<FormattedMessage {...messages.iconAlertText} />}\n                            width={13}\n                        />\n                    ) : null}\n                    <PlainButton\n                        aria-label={formatMessage(messages.chooseDate)}\n                        className=\"date-picker-open-btn\"\n                        disabled={isDisabled}\n                        getDOMRef={ref => {\n                            this.datePickerButtonEl = ref;\n                        }}\n                        onClick={this.handleButtonClick}\n                        type=\"button\"\n                    >\n                        <IconCalendar height={17} width={16} />\n                    </PlainButton>\n                    <input\n                        className=\"date-picker-unix-time-input\"\n                        name={name}\n                        readOnly\n                        type=\"hidden\"\n                        value={this.formatValue(value)}\n                    />\n                </span>\n            </div>\n        );\n    }\n}\n\nexport { DatePicker as DatePickerBase };\nexport default injectIntl(DatePicker);\n"],"file":"DatePicker.js"}