{"version":3,"sources":["../../../src/elements/content-sharing/SharingModal.js"],"names":["React","noop","FormattedMessage","API","Internationalize","ErrorMask","LoadingIndicator","UnifiedShareModal","SharedLinkSettingsModal","SharingNotification","convertItemResponse","convertUserResponse","FIELD_ENTERPRISE","FIELD_HOSTNAME","TYPE_FILE","TYPE_FOLDER","CONTENT_SHARING_ERRORS","CONTENT_SHARING_ITEM_FIELDS","CONTENT_SHARING_VIEWS","INVITEE_PERMISSIONS","contentSharingMessages","SharingModal","api","config","displayInModal","itemID","itemType","language","messages","useState","item","setItem","sharedLink","setSharedLink","currentUserID","setCurrentUserID","componentErrorMessage","setComponentErrorMessage","collaboratorsList","setCollaboratorsList","onAddLink","setOnAddLink","onRemoveLink","setOnRemoveLink","changeSharedLinkAccessLevel","setChangeSharedLinkAccessLevel","changeSharedLinkPermissionLevel","setChangeSharedLinkPermissionLevel","onSubmitSettings","setOnSubmitSettings","UNIFIED_SHARE_MODAL","currentView","setCurrentView","getContacts","setGetContacts","sendInvites","setSendInvites","isLoading","setIsLoading","isOpen","setIsOpen","handleGetItemSuccess","useCallback","itemData","itemFromAPI","sharedLinkFromAPI","getError","error","errorObject","status","response","loadingError","useEffect","getItem","getFileAPI","getFile","fields","getFolderAPI","getFolderFields","getUserSuccess","userData","id","userEnterpriseData","prevSharedLink","getUserData","getUsersAPI","getUser","params","toString","serverURL","ownerEmail","ownerID","permissions","accessLevel","SHARED_LINK_SETTINGS","canInvite"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file SharingModal\n * @description This is the second-level component for the ContentSharing Element. It receives an API instance\n * from its parent component, ContentSharing, and then instantiates the UnifiedShareModal with API data.\n * @author Box\n */\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport type { $AxiosError } from 'axios';\nimport API from '../../api';\nimport Internationalize from '../common/Internationalize';\nimport ErrorMask from '../../components/error-mask/ErrorMask';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport UnifiedShareModal from '../../features/unified-share-modal';\nimport SharedLinkSettingsModal from '../../features/shared-link-settings-modal';\nimport SharingNotification from './SharingNotification';\nimport { convertItemResponse, convertUserResponse } from '../../features/unified-share-modal/utils/convertData';\nimport { FIELD_ENTERPRISE, FIELD_HOSTNAME, TYPE_FILE, TYPE_FOLDER } from '../../constants';\nimport { CONTENT_SHARING_ERRORS, CONTENT_SHARING_ITEM_FIELDS, CONTENT_SHARING_VIEWS } from './constants';\nimport { INVITEE_PERMISSIONS } from '../../features/unified-share-modal/constants';\nimport contentSharingMessages from './messages';\nimport type { ErrorResponseData } from '../../common/types/api';\nimport type { ItemType, StringMap } from '../../common/types/core';\nimport type {\n    collaboratorsListType,\n    item as itemFlowType,\n    USMConfig,\n} from '../../features/unified-share-modal/flowTypes';\nimport type {\n    ContentSharingItemAPIResponse,\n    ContentSharingSharedLinkType,\n    GetContactsFnType,\n    SendInvitesFnType,\n    SharedLinkUpdateLevelFnType,\n    SharedLinkUpdateSettingsFnType,\n} from './types';\n\ntype SharingModalProps = {\n    api: API,\n    config?: USMConfig,\n    displayInModal: boolean,\n    itemID: string,\n    itemType: ItemType,\n    language: string,\n    messages?: StringMap,\n};\n\nfunction SharingModal({ api, config, displayInModal, itemID, itemType, language, messages }: SharingModalProps) {\n    const [item, setItem] = React.useState<itemFlowType | null>(null);\n    const [sharedLink, setSharedLink] = React.useState<ContentSharingSharedLinkType | null>(null);\n    const [currentUserID, setCurrentUserID] = React.useState<string | null>(null);\n    const [componentErrorMessage, setComponentErrorMessage] = React.useState<Object | null>(null);\n    const [collaboratorsList, setCollaboratorsList] = React.useState<collaboratorsListType | null>(null);\n    const [onAddLink, setOnAddLink] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [onRemoveLink, setOnRemoveLink] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [\n        changeSharedLinkAccessLevel,\n        setChangeSharedLinkAccessLevel,\n    ] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [\n        changeSharedLinkPermissionLevel,\n        setChangeSharedLinkPermissionLevel,\n    ] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [onSubmitSettings, setOnSubmitSettings] = React.useState<null | SharedLinkUpdateSettingsFnType>(null);\n    const [currentView, setCurrentView] = React.useState<string>(CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL);\n    const [getContacts, setGetContacts] = React.useState<null | GetContactsFnType>(null);\n    const [sendInvites, setSendInvites] = React.useState<null | SendInvitesFnType>(null);\n    const [isLoading, setIsLoading] = React.useState<boolean>(true);\n    const [isOpen, setIsOpen] = React.useState<boolean>(true);\n\n    // Handle successful GET requests to /files or /folders\n    const handleGetItemSuccess = React.useCallback((itemData: ContentSharingItemAPIResponse) => {\n        const { item: itemFromAPI, sharedLink: sharedLinkFromAPI } = convertItemResponse(itemData);\n        setComponentErrorMessage(null);\n        setItem(itemFromAPI);\n        setSharedLink(sharedLinkFromAPI);\n        setIsLoading(false);\n    }, []);\n\n    // Handle component-level errors\n    const getError = React.useCallback(\n        (error: $AxiosError<Object> | ErrorResponseData) => {\n            let errorObject;\n            if (error.status) {\n                errorObject = contentSharingMessages[CONTENT_SHARING_ERRORS[error.status]];\n            } else if (error.response && error.response.status) {\n                errorObject = contentSharingMessages[CONTENT_SHARING_ERRORS[error.response.status]];\n            } else {\n                errorObject = contentSharingMessages.loadingError;\n            }\n\n            setComponentErrorMessage(errorObject);\n        },\n        [setComponentErrorMessage],\n    );\n\n    // Reset state if the API has changed\n    React.useEffect(() => {\n        setChangeSharedLinkAccessLevel(null);\n        setChangeSharedLinkPermissionLevel(null);\n        setCollaboratorsList(null);\n        setCurrentUserID(null);\n        setItem(null);\n        setOnAddLink(null);\n        setOnRemoveLink(null);\n        setSharedLink(null);\n        setIsLoading(true);\n    }, []);\n\n    // Get initial data for the item\n    React.useEffect(() => {\n        const getItem = () => {\n            if (itemType === TYPE_FILE) {\n                api.getFileAPI().getFile(itemID, handleGetItemSuccess, getError, {\n                    fields: CONTENT_SHARING_ITEM_FIELDS,\n                });\n            } else if (itemType === TYPE_FOLDER) {\n                api.getFolderAPI().getFolderFields(itemID, handleGetItemSuccess, getError, {\n                    fields: CONTENT_SHARING_ITEM_FIELDS,\n                });\n            }\n        };\n\n        if (!item && !sharedLink) {\n            getItem();\n        }\n    }, [api, getError, handleGetItemSuccess, item, itemID, itemType, sharedLink]);\n\n    // Get initial data for the user\n    React.useEffect(() => {\n        const getUserSuccess = userData => {\n            const { id, userEnterpriseData } = convertUserResponse(userData);\n            setCurrentUserID(id);\n            setSharedLink(prevSharedLink => ({ ...prevSharedLink, ...userEnterpriseData }));\n            setComponentErrorMessage(null);\n            setIsLoading(false);\n        };\n\n        const getUserData = () => {\n            api.getUsersAPI(false).getUser(itemID, getUserSuccess, getError, {\n                params: {\n                    fields: [FIELD_ENTERPRISE, FIELD_HOSTNAME].toString(),\n                },\n            });\n        };\n\n        if (item && sharedLink && !currentUserID) {\n            getUserData();\n        }\n    }, [getError, item, itemID, itemType, sharedLink, currentUserID, api]);\n\n    if (componentErrorMessage) {\n        return <ErrorMask errorHeader={<FormattedMessage {...componentErrorMessage} />} />;\n    }\n\n    // Ensure that all necessary data has been received before rendering child components\n    // \"serverURL\" is added to sharedLink after the call to the Users API\n    if (!item || !sharedLink || !currentUserID || !sharedLink.serverURL) {\n        return <LoadingIndicator />;\n    }\n\n    const { ownerEmail, ownerID, permissions } = item;\n    const { accessLevel = '', serverURL } = sharedLink;\n    return (\n        <Internationalize language={language} messages={messages}>\n            <div className=\"be\">\n                <SharingNotification\n                    accessLevel={accessLevel}\n                    api={api}\n                    closeComponent={displayInModal ? () => setIsOpen(false) : noop}\n                    closeSettings={() => setCurrentView(CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL)}\n                    collaboratorsList={collaboratorsList}\n                    currentUserID={currentUserID}\n                    getContacts={getContacts}\n                    itemID={itemID}\n                    itemType={itemType}\n                    onSubmitSettings={onSubmitSettings}\n                    ownerEmail={ownerEmail}\n                    ownerID={ownerID}\n                    permissions={permissions}\n                    sendInvites={sendInvites}\n                    serverURL={serverURL}\n                    setChangeSharedLinkAccessLevel={setChangeSharedLinkAccessLevel}\n                    setChangeSharedLinkPermissionLevel={setChangeSharedLinkPermissionLevel}\n                    setGetContacts={setGetContacts}\n                    setCollaboratorsList={setCollaboratorsList}\n                    setIsLoading={setIsLoading}\n                    setItem={setItem}\n                    setOnAddLink={setOnAddLink}\n                    setOnRemoveLink={setOnRemoveLink}\n                    setOnSubmitSettings={setOnSubmitSettings}\n                    setSendInvites={setSendInvites}\n                    setSharedLink={setSharedLink}\n                />\n                {isOpen && currentView === CONTENT_SHARING_VIEWS.SHARED_LINK_SETTINGS && (\n                    <SharedLinkSettingsModal\n                        isDirectLinkUnavailableDueToDownloadSettings={false}\n                        isDirectLinkUnavailableDueToAccessPolicy={false}\n                        isDirectLinkUnavailableDueToMaliciousContent={false}\n                        isOpen\n                        item={item}\n                        onRequestClose={() => setCurrentView(CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL)}\n                        onSubmit={onSubmitSettings}\n                        submitting={isLoading}\n                        {...sharedLink}\n                    />\n                )}\n                {isOpen && currentView === CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL && (\n                    <UnifiedShareModal\n                        canInvite={sharedLink.canInvite}\n                        config={config}\n                        changeSharedLinkAccessLevel={changeSharedLinkAccessLevel}\n                        changeSharedLinkPermissionLevel={changeSharedLinkPermissionLevel}\n                        collaboratorsList={collaboratorsList}\n                        currentUserID={currentUserID}\n                        displayInModal={displayInModal}\n                        getCollaboratorContacts={getContacts}\n                        initialDataReceived\n                        inviteePermissions={INVITEE_PERMISSIONS}\n                        isOpen\n                        item={item}\n                        onAddLink={onAddLink}\n                        onRequestClose={displayInModal ? () => setIsOpen(false) : noop}\n                        onRemoveLink={onRemoveLink}\n                        onSettingsClick={() => setCurrentView(CONTENT_SHARING_VIEWS.SHARED_LINK_SETTINGS)}\n                        sendInvites={sendInvites}\n                        sharedLink={sharedLink}\n                        submitting={isLoading}\n                    />\n                )}\n            </div>\n        </Internationalize>\n    );\n}\n\nexport default SharingModal;\n"],"file":"SharingModal.js"}