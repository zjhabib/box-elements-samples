{"version":3,"sources":["../../../../src/elements/common/header/Header.js"],"names":["React","injectIntl","Logo","messages","VIEW_FOLDER","VIEW_SEARCH","Header","view","isSmall","searchQuery","onSearch","logoUrl","intl","search","currentTarget","value","isFolder","isSearch","formatMessage","searchPlaceholder"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,oBAAzC;AAGA,OAAO,eAAP;;AAWA;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAoE;AAAA,MAAjEC,IAAiE,QAAjEA,IAAiE;AAAA,MAA3DC,OAA2D,QAA3DA,OAA2D;AAAA,MAAlDC,WAAkD,QAAlDA,WAAkD;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;;AAC/E,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,QAAGC,aAAH,SAAGA,aAAH;AAAA,WAA4DJ,QAAQ,CAACI,aAAa,CAACC,KAAf,CAApE;AAAA,GAAf;;AACA,MAAMC,QAAQ,GAAGT,IAAI,KAAKH,WAA1B;AACA,MAAMa,QAAQ,GAAGV,IAAI,KAAKF,WAA1B;AACA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEG,OAAf;AAAwB,IAAA,GAAG,EAAEG;AAA7B,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AACI,kBAAW,QADf;AAEI,IAAA,QAAQ,EAAE,CAACK,QAAD,IAAa,CAACC,QAF5B;AAGI,IAAA,QAAQ,EAAEJ,MAHd;AAII,IAAA,WAAW,EAAED,IAAI,CAACM,aAAL,CAAmBf,QAAQ,CAACgB,iBAA5B,CAJjB;AAKI,IAAA,IAAI,EAAC,QALT;AAMI,IAAA,KAAK,EAAEV;AANX,IADJ,CAFJ,CADJ;AAeH,CAnBD;;AAqBA,eAAeR,UAAU,CAACK,MAAD,CAAzB","sourcesContent":["/**\n * @flow\n * @file Header bar\n * @author Box\n */\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport Logo from './Logo';\nimport messages from '../messages';\nimport { VIEW_FOLDER, VIEW_SEARCH } from '../../../constants';\nimport type { View } from '../../../common/types/core';\n\nimport './Header.scss';\n\ntype Props = {\n    intl: any,\n    isSmall: boolean,\n    logoUrl?: string,\n    onSearch: Function,\n    searchQuery: string,\n    view: View,\n};\n\n// eslint-disable-next-line react/prop-types\nconst Header = ({ view, isSmall, searchQuery, onSearch, logoUrl, intl }: Props) => {\n    const search = ({ currentTarget }: { currentTarget: HTMLInputElement }) => onSearch(currentTarget.value);\n    const isFolder = view === VIEW_FOLDER;\n    const isSearch = view === VIEW_SEARCH;\n    return (\n        <div className=\"be-header\">\n            <Logo isSmall={isSmall} url={logoUrl} />\n            <div className=\"be-search\">\n                <input\n                    aria-label=\"search\"\n                    disabled={!isFolder && !isSearch}\n                    onChange={search}\n                    placeholder={intl.formatMessage(messages.searchPlaceholder)}\n                    type=\"search\"\n                    value={searchQuery}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default injectIntl(Header);\n"],"file":"Header.js"}