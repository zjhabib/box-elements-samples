{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/task-new/TaskDueDate.js"],"names":["React","FormattedMessage","messages","LabelPill","ReadableTime","TASK_NEW_NOT_STARTED","TaskDueDate","dueDate","status","isOverdue","Date","now","fullDueDate","pillProps","type","taskFeedStatusDue","dateTime","getTime"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,oBAAT,QAAqC,uBAArC;;AAUA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA4C;AAAA,MAAzCC,OAAyC,QAAzCA,OAAyC;AAAA,MAAhCC,MAAgC,QAAhCA,MAAgC;AAC5D,MAAMC,SAAS,GAAGF,OAAO,GAAGC,MAAM,KAAKH,oBAAX,IAAmC,IAAIK,IAAJ,CAASH,OAAT,IAAoBG,IAAI,CAACC,GAAL,EAA1D,GAAuE,KAAhG;AACA,MAAMC,WAAW,GAAG,IAAIF,IAAJ,CAASH,OAAT,CAApB;AACA,MAAMM,SAAS,GAAGJ,SAAS,GAAG;AAAE,mBAAe,mBAAjB;AAAsCK,IAAAA,IAAI,EAAE;AAA5C,GAAH,GAA2D;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAtF;AACA,SACI;AAAK,mBAAY;AAAjB,KACI,oBAAC,SAAD,CAAW,IAAX,EAAoBD,SAApB,EACI,oBAAC,SAAD,CAAW,IAAX,QACI,oBAAC,gBAAD,eACQX,QAAQ,CAACa,iBADjB;AAEI,IAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE,oBAAC,YAAD;AAAc,QAAA,cAAc,MAA5B;AAA6B,QAAA,SAAS,MAAtC;AAAuC,QAAA,SAAS,EAAEJ,WAAW,CAACK,OAAZ;AAAlD;AADN;AAFZ,KADJ,CADJ,CADJ,CADJ;AAcH,CAlBD;;AAoBA,eAAeX,WAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\n// $FlowFixMe LabelPill is in typescript\nimport LabelPill from '../../../../components/label-pill';\nimport { ReadableTime } from '../../../../components/time';\nimport { TASK_NEW_NOT_STARTED } from '../../../../constants';\n\nimport type { TaskStatus } from '../../../../common/types/tasks';\nimport type { ISODate } from '../../../../common/types/core';\n\ntype Props = {\n    dueDate: ISODate,\n    status: TaskStatus,\n};\n\nconst TaskDueDate = ({ dueDate, status }: Props): React.Node => {\n    const isOverdue = dueDate ? status === TASK_NEW_NOT_STARTED && new Date(dueDate) < Date.now() : false;\n    const fullDueDate = new Date(dueDate);\n    const pillProps = isOverdue ? { 'data-testid': 'task-overdue-date', type: 'error' } : { type: 'default' };\n    return (\n        <div data-testid=\"task-due-date\">\n            <LabelPill.Pill {...pillProps}>\n                <LabelPill.Text>\n                    <FormattedMessage\n                        {...messages.taskFeedStatusDue}\n                        values={{\n                            dateTime: <ReadableTime alwaysShowTime uppercase timestamp={fullDueDate.getTime()} />,\n                        }}\n                    />\n                </LabelPill.Text>\n            </LabelPill.Pill>\n        </div>\n    );\n};\n\nexport default TaskDueDate;\n"],"file":"TaskDueDate.js"}