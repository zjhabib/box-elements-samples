{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/annotations/AnnotationActivityLink.tsx"],"names":["React","noop","FormattedMessage","PlainButton","ButtonType","AnnotationActivityLink","id","isDisabled","message","onClick","rest","handleClick","event","preventDefault","stopPropagation","currentTarget","focus","handleMouseDown","nativeEvent","stopImmediatePropagation","BUTTON"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,gBAAT,QAAoD,YAApD;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,SAASC,UAAT,QAA2B,+BAA3B;;AASA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAMiB;AAAA,MAL5CC,EAK4C,QAL5CA,EAK4C;AAAA,6BAJ5CC,UAI4C;AAAA,MAJ5CA,UAI4C,gCAJ/B,KAI+B;AAAA,MAH5CC,OAG4C,QAH5CA,OAG4C;AAAA,0BAF5CC,OAE4C;AAAA,MAF5CA,OAE4C,6BAFlCR,IAEkC;AAAA,MADzCS,IACyC;;AAC5C,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAoD;AACpEA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,eAAN;AACAF,IAAAA,KAAK,CAACG,aAAN,CAAoBC,KAApB,GAHoE,CAGvC;;AAE7BP,IAAAA,OAAO,CAACH,EAAD,CAAP;AACH,GAND;;AAQA,MAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD,EAAgD;AACpE,QAAIL,UAAJ,EAAgB;AACZ;AACH,KAHmE,CAKpE;AACA;AACA;;;AACAK,IAAAA,KAAK,CAACM,WAAN,CAAkBC,wBAAlB;AACH,GATD;;AAWA,SACI,oBAAC,WAAD;AACI,IAAA,SAAS,EAAC,6BADd;AAEI,IAAA,UAAU,EAAEZ,UAFhB;AAGI,IAAA,OAAO,EAAEI,WAHb;AAII,IAAA,WAAW,EAAEM,eAJjB;AAKI,IAAA,IAAI,EAAEb,UAAU,CAACgB;AALrB,KAMQV,IANR,GAQI,oBAAC,gBAAD,EAAsBF,OAAtB,CARJ,CADJ;AAYH,CAtCD;;AAwCA,eAAeH,sBAAf","sourcesContent":["import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { FormattedMessage, MessageDescriptor } from 'react-intl';\nimport PlainButton from '../../../../components/plain-button';\nimport { ButtonType } from '../../../../components/button';\n\nexport interface AnnotationActivityLinkProps {\n    id: string;\n    isDisabled: boolean;\n    message: MessageDescriptor;\n    onClick: (id: string) => void;\n}\n\nconst AnnotationActivityLink = ({\n    id,\n    isDisabled = false,\n    message,\n    onClick = noop,\n    ...rest\n}: AnnotationActivityLinkProps): JSX.Element => {\n    const handleClick = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.currentTarget.focus(); // Buttons do not receive focus in Firefox and Safari on MacOS\n\n        onClick(id);\n    };\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (isDisabled) {\n            return;\n        }\n\n        // Prevents document event handlers from executing because box-annotations relies on\n        // detecting mouse events on the document outside of annotation targets to determine when to\n        // deselect annotations. This link also may represent that annotation target in the sidebar.\n        event.nativeEvent.stopImmediatePropagation();\n    };\n\n    return (\n        <PlainButton\n            className=\"bcs-AnnotationActivity-link\"\n            isDisabled={isDisabled}\n            onClick={handleClick}\n            onMouseDown={handleMouseDown}\n            type={ButtonType.BUTTON}\n            {...rest}\n        >\n            <FormattedMessage {...message} />\n        </PlainButton>\n    );\n};\n\nexport default AnnotationActivityLink;\n"],"file":"AnnotationActivityLink.js"}