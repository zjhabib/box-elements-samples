{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarNavButton.js"],"names":["React","Route","NavButton","Tooltip","SidebarNavButton","forwardRef","props","ref","dataResinTarget","dataTestId","children","elementId","isOpen","sidebarView","tooltip","sidebarPath","match","isMatch","isActive","isActiveValue","isExactMatch","isExact","id","pathname","state","open"],"mappings":"AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAO,yBAAP;AAYA,IAAMC,gBAAgB,GAAGJ,KAAK,CAACK,UAAN,CAAwC,UAACC,KAAD,EAAeC,GAAf,EAAuC;AAAA,MAE3EC,eAF2E,GAShGF,KATgG,CAEhG,mBAFgG;AAAA,MAGjFG,UAHiF,GAShGH,KATgG,CAGhG,aAHgG;AAAA,MAIhGI,QAJgG,GAShGJ,KATgG,CAIhGI,QAJgG;AAAA,yBAShGJ,KATgG,CAKhGK,SALgG;AAAA,MAKhGA,SALgG,iCAKpF,EALoF;AAAA,MAMhGC,MANgG,GAShGN,KATgG,CAMhGM,MANgG;AAAA,MAOhGC,WAPgG,GAShGP,KATgG,CAOhGO,WAPgG;AAAA,MAQhGC,OARgG,GAShGR,KATgG,CAQhGQ,OARgG;AAUpG,MAAMC,WAAW,cAAOF,WAAP,CAAjB;AAEA,SACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEE;AAAb,KACK,gBAAe;AAAA,QAAZC,KAAY,QAAZA,KAAY;AACZ,QAAMC,OAAO,GAAG,CAAC,CAACD,KAAlB;;AACA,QAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA,aAAMD,OAAO,IAAI,CAAC,CAACL,MAAnB;AAAA,KAAjB;;AACA,QAAMO,aAAa,GAAGD,QAAQ,EAA9B;AACA,QAAME,YAAY,GAAGH,OAAO,IAAID,KAAK,CAACK,OAAtC;AACA,QAAMC,EAAE,aAAMX,SAAN,SAAkBA,SAAS,KAAK,EAAd,GAAmB,EAAnB,GAAwB,GAA1C,SAAgDE,WAAhD,CAAR;AAEA,WACI,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAC,aAAlB;AAAgC,MAAA,IAAI,EAAEC,OAAtC;AAA+C,MAAA,UAAU,EAAE;AAA3D,OACI,oBAAC,SAAD;AACI,MAAA,eAAe,EAAC,iBADpB;AAEI,uBAAeK,aAFnB;AAGI,iCAAkBG,EAAlB,aAHJ;AAII,MAAA,SAAS,EAAC,eAJd;AAKI,2BAAmBd,eALvB;AAMI,qBAAaC,UANjB;AAOI,MAAA,SAAS,EAAEF,GAPf;AAQI,MAAA,EAAE,EAAEe,EARR;AASI,MAAA,QAAQ,EAAEJ,QATd;AAUI,MAAA,OAAO,EAAEE,YAVb;AAWI,MAAA,IAAI,EAAC,KAXT;AAYI,MAAA,QAAQ,EAAED,aAAa,GAAG,GAAH,GAAS,IAZpC;AAaI,MAAA,EAAE,EAAE;AACAI,QAAAA,QAAQ,EAAER,WADV;AAEAS,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AAFP,OAbR;AAiBI,MAAA,IAAI,EAAC;AAjBT,OAmBKf,QAnBL,CADJ,CADJ;AAyBH,GAjCL,CADJ;AAqCH,CAjDwB,CAAzB;AAmDA,eAAeN,gBAAf","sourcesContent":["/**\n * @flow\n * @file Preview sidebar nav button component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport NavButton from '../common/nav-button';\nimport Tooltip from '../../components/tooltip/Tooltip';\nimport './SidebarNavButton.scss';\n\ntype Props = {\n    'data-resin-target'?: string,\n    'data-testid'?: string,\n    children: React.Node,\n    elementId?: string,\n    isOpen?: boolean,\n    sidebarView: string,\n    tooltip: React.Node,\n};\n\nconst SidebarNavButton = React.forwardRef<Props, React.Ref<any>>((props: Props, ref: React.Ref<any>) => {\n    const {\n        'data-resin-target': dataResinTarget,\n        'data-testid': dataTestId,\n        children,\n        elementId = '',\n        isOpen,\n        sidebarView,\n        tooltip,\n    } = props;\n    const sidebarPath = `/${sidebarView}`;\n\n    return (\n        <Route path={sidebarPath}>\n            {({ match }) => {\n                const isMatch = !!match;\n                const isActive = () => isMatch && !!isOpen;\n                const isActiveValue = isActive();\n                const isExactMatch = isMatch && match.isExact;\n                const id = `${elementId}${elementId === '' ? '' : '_'}${sidebarView}`;\n\n                return (\n                    <Tooltip position=\"middle-left\" text={tooltip} isTabbable={false}>\n                        <NavButton\n                            activeClassName=\"bcs-is-selected\"\n                            aria-selected={isActiveValue}\n                            aria-controls={`${id}-content`}\n                            className=\"bcs-NavButton\"\n                            data-resin-target={dataResinTarget}\n                            data-testid={dataTestId}\n                            getDOMRef={ref}\n                            id={id}\n                            isActive={isActive}\n                            replace={isExactMatch}\n                            role=\"tab\"\n                            tabIndex={isActiveValue ? '0' : '-1'}\n                            to={{\n                                pathname: sidebarPath,\n                                state: { open: true },\n                            }}\n                            type=\"button\"\n                        >\n                            {children}\n                        </NavButton>\n                    </Tooltip>\n                );\n            }}\n        </Route>\n    );\n});\n\nexport default SidebarNavButton;\n"],"file":"SidebarNavButton.js"}