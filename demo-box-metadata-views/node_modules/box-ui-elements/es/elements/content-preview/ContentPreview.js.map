{"version":3,"sources":["../../../src/elements/content-preview/ContentPreview.js"],"names":["React","classNames","uniqueid","throttle","cloneDeep","omit","getProp","flow","noop","setProp","Measure","withRouter","decode","makeResponsive","withNavRouter","Internationalize","AsyncLoad","TokenService","isInputElement","focus","getTypedFileId","withErrorBoundary","withLogger","PREVIEW_FIELDS_TO_FETCH","mark","withFeatureProvider","EVENT_JS_READY","ReloadNotification","API","PreviewHeader","PreviewNavigation","PreviewLoading","withAnnotations","WithAnnotationsProps","withAnnotatorContext","WithAnnotatorContextProps","DEFAULT_HOSTNAME_API","DEFAULT_HOSTNAME_APP","DEFAULT_HOSTNAME_STATIC","DEFAULT_PREVIEW_VERSION","DEFAULT_LOCALE","DEFAULT_PATH_STATIC_PREVIEW","CLIENT_NAME_CONTENT_PREVIEW","ORIGIN_PREVIEW","ORIGIN_CONTENT_PREVIEW","ERROR_CODE_UNKNOWN","startAtTypes","page","InvalidIdError","Error","PREVIEW_LOAD_METRIC_EVENT","MARK_NAME_JS_READY","LoadableSidebar","loader","ContentPreview","props","createRef","canPrint","error","undefined","isReloadNotificationVisible","isThumbnailSidebarOpen","rest","code","onError","setState","previewMetrics","logger","event_name","metrics","totalFetchFileTime","getTotalFileFetchTime","totalTime","value","file_info_time","onPreviewMetric","data","onLoad","collection","currentIndex","getFileIndex","filesToPrefetch","slice","previewTimeMetrics","loadData","totalPreviewMetrics","addFetchFileTimeToPreviewMetrics","time","focusPreview","preview","length","prefetch","handleCanPrint","annotatorState","activeAnnotationId","enableThumbnailsSidebar","fileOptions","onAnnotatorEvent","onAnnotator","showAnnotationsControls","tokenOrTokenFunction","token","state","file","selectedVersion","startAt","isPreviewLibraryLoaded","fileId","getFileId","currentFileId","fileOpts","typedId","getReadTokens","id","previewOptions","container","header","headerElement","showAnnotations","canViewAnnotations","showDownload","canDownload","skipServerUpdate","useHotkeys","Preview","global","Box","addListener","onPreviewLoad","onPreviewError","updateFileCache","show","Object","keys","stagedFile","initialState","getCurrentViewer","resize","fetchFileEndTime","performance","now","currentFile","isExistingFile","isWatermarked","file_version","sha1","fileError","errorCode","message","getPreview","viewer","isLoaded","isDestroyed","newIndex","navigateToIndex","onDownload","download","print","getViewer","isPreviewing","CLASS_NAVIGATION_VISIBILITY","clearTimeout","mouseMoveTimeoutID","previewContainer","classList","remove","allowNavigationArrows","add","setTimeout","event","consumed","key","target","onKeydown","nativeEvent","navigateLeft","navigateRight","preventDefault","stopPropagation","version","additionalVersionInfo","onVersionChange","updateVersionToCurrent","location","annotationFileVersionId","currentFileVersionId","currentPreviewFileVersionId","unit","type","emit","apiHost","cache","language","requestInterceptor","responseInterceptor","sharedLink","sharedLinkPassword","api","clientName","prevFileIdProp","onReadyMetric","endMarkName","destroy","destroyPreview","shouldReset","onPreviewDestroy","removeAllListeners","loadStylesheet","loadScript","fetchFile","prevProps","prevState","prevToken","hasFileIdChanged","hasTokenChanged","shouldLoadPreview","loadPreview","updatePreviewToken","shouldReload","updateToken","prevFile","prevSelectedVersion","prevSelectedVersionId","selectedVersionId","prevFileVersionId","fileVersionId","isPreviousCurrent","isSelectedCurrent","asset","staticHost","staticPath","previewLibraryVersion","path","suffix","endsWith","document","head","url","getBasePath","querySelector","link","createElement","rel","href","appendChild","previewScript","script","src","addEventListener","autoFocus","getInnerRef","activeElement","files","typedIds","map","cacheTokens","forEach","refreshCache","fetchFileStartTime","Math","round","rendering","conversion","preload","totalConversion","totalRendering","totalPreload","total","isFileDownloadable","isFileAnnotatable","hasViewAllPermissions","hasViewSelfPermissions","canAnnotate","successCallback","errorCallback","fetchOptions","getFileAPI","getFile","fetchFileSuccessCallback","fetchFileErrorCallback","fields","findIndex","item","index","onNavigate","fileOrId","contentSidebar","current","refresh","messages","className","contentSidebarProps","contentOpenWithProps","hasHeader","history","isLarge","isVeryLarge","logoUrl","onClose","measureRef","styleClassName","currentVersionId","onHeaderClose","onKeyDown","onMouseMove","containerRef","onResize","previewRef","size","getCache","handleAnnotationSelect","closeReloadNotification","loadFileFromStage","PureComponent","appHost","ContentPreviewComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Preview Component\n * @author Box\n */\n\nimport 'regenerator-runtime/runtime';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueid from 'lodash/uniqueId';\nimport throttle from 'lodash/throttle';\nimport cloneDeep from 'lodash/cloneDeep';\nimport omit from 'lodash/omit';\nimport getProp from 'lodash/get';\nimport flow from 'lodash/flow';\nimport noop from 'lodash/noop';\nimport setProp from 'lodash/set';\nimport Measure from 'react-measure';\nimport { withRouter } from 'react-router-dom';\nimport type { ContextRouter } from 'react-router-dom';\nimport { decode } from '../../utils/keys';\nimport makeResponsive from '../common/makeResponsive';\nimport { withNavRouter } from '../common/nav-router';\nimport Internationalize from '../common/Internationalize';\nimport AsyncLoad from '../common/async-load';\nimport TokenService from '../../utils/TokenService';\nimport { isInputElement, focus } from '../../utils/dom';\nimport { getTypedFileId } from '../../utils/file';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport { PREVIEW_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { mark } from '../../utils/performance';\nimport { withFeatureProvider } from '../common/feature-checking';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport ReloadNotification from './ReloadNotification';\nimport API from '../../api';\nimport PreviewHeader from './preview-header';\nimport PreviewNavigation from './PreviewNavigation';\nimport PreviewLoading from './PreviewLoading';\nimport {\n    withAnnotations,\n    WithAnnotationsProps,\n    withAnnotatorContext,\n    WithAnnotatorContextProps,\n} from '../common/annotator-context';\nimport {\n    DEFAULT_HOSTNAME_API,\n    DEFAULT_HOSTNAME_APP,\n    DEFAULT_HOSTNAME_STATIC,\n    DEFAULT_PREVIEW_VERSION,\n    DEFAULT_LOCALE,\n    DEFAULT_PATH_STATIC_PREVIEW,\n    CLIENT_NAME_CONTENT_PREVIEW,\n    ORIGIN_PREVIEW,\n    ORIGIN_CONTENT_PREVIEW,\n    ERROR_CODE_UNKNOWN,\n} from '../../constants';\nimport type { Annotation } from '../../common/types/feed';\nimport type { ErrorType, AdditionalVersionInfo } from '../common/flowTypes';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { RequestOptions, ErrorContextProps, ElementsXhrError } from '../../common/types/api';\nimport type { StringMap, Token, BoxItem, BoxItemVersion } from '../../common/types/core';\nimport type { VersionChangeCallback } from '../content-sidebar/versions';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport type APICache from '../../utils/Cache';\n\nimport '../common/fonts.scss';\nimport '../common/base.scss';\nimport './ContentPreview.scss';\n\ntype StartAt = {\n    unit: 'pages' | 'seconds',\n    value: number,\n};\n\ntype Props = {\n    apiHost: string,\n    appHost: string,\n    autoFocus: boolean,\n    boxAnnotations?: Object,\n    cache?: APICache,\n    canDownload?: boolean,\n    className: string,\n    collection: Array<string | BoxItem>,\n    contentOpenWithProps: ContentOpenWithProps,\n    contentSidebarProps: ContentSidebarProps,\n    enableThumbnailsSidebar: boolean,\n    features?: FeatureConfig,\n    fileId?: string,\n    fileOptions?: Object,\n    getInnerRef: () => ?HTMLElement,\n    hasHeader?: boolean,\n    isLarge: boolean,\n    isVeryLarge?: boolean,\n    language: string,\n    logoUrl?: string,\n    measureRef: Function,\n    messages?: StringMap,\n    onAnnotator: Function,\n    onAnnotatorEvent: Function,\n    onClose?: Function,\n    onDownload: Function,\n    onLoad: Function,\n    onNavigate: Function,\n    onVersionChange: VersionChangeCallback,\n    previewLibraryVersion: string,\n    requestInterceptor?: Function,\n    responseInterceptor?: Function,\n    sharedLink?: string,\n    sharedLinkPassword?: string,\n    showAnnotations?: boolean,\n    showAnnotationsControls?: boolean,\n    staticHost: string,\n    staticPath: string,\n    token: Token,\n    useHotkeys: boolean,\n} & ErrorContextProps &\n    WithLoggerProps &\n    WithAnnotationsProps &\n    WithAnnotatorContextProps &\n    ContextRouter;\n\ntype State = {\n    canPrint?: boolean,\n    currentFileId?: string,\n    error?: ErrorType,\n    file?: BoxItem,\n    isReloadNotificationVisible: boolean,\n    isThumbnailSidebarOpen: boolean,\n    prevFileIdProp?: string, // the previous value of the \"fileId\" prop. Needed to implement getDerivedStateFromProps\n    selectedVersion?: BoxItemVersion,\n    startAt?: StartAt,\n};\n\n// Emitted by preview's 'load' event\ntype PreviewTimeMetrics = {\n    conversion: number,\n    preload?: number,\n    rendering: number,\n    total: number,\n};\n\n// Emitted by preview's 'preview_metric' event\ntype PreviewMetrics = {\n    browser_name: string,\n    client_version: string,\n    content_type: string, // Sum of all available load times.\n    convert_time: number,\n    download_response_time: number,\n    error?: Object,\n    event_name?: string,\n    extension: string,\n    file_id: string,\n    file_info_time: number,\n    file_version_id: string,\n    full_document_load_time: number,\n    locale: string,\n    logger_session_id: string,\n    rep_type: string,\n    timestamp: string,\n    value: number,\n};\n\ntype PreviewLibraryError = {\n    error: ErrorType,\n};\n\nconst startAtTypes = {\n    page: 'pages',\n};\nconst InvalidIdError = new Error('Invalid id for Preview!');\nconst PREVIEW_LOAD_METRIC_EVENT = 'load';\nconst MARK_NAME_JS_READY = `${ORIGIN_CONTENT_PREVIEW}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nconst LoadableSidebar = AsyncLoad({\n    loader: () => import(/* webpackMode: \"lazy\", webpackChunkName: \"content-sidebar\" */ '../content-sidebar'),\n});\n\nclass ContentPreview extends React.PureComponent<Props, State> {\n    id: string;\n\n    props: Props;\n\n    state: State;\n\n    preview: any;\n\n    api: API;\n\n    // Defines a generic type for ContentSidebar, since an import would interfere with code splitting\n    contentSidebar: { current: null | { refresh: Function } } = React.createRef();\n\n    previewContainer: ?HTMLDivElement;\n\n    mouseMoveTimeoutID: TimeoutID;\n\n    rootElement: HTMLElement;\n\n    stagedFile: ?BoxItem;\n\n    updateVersionToCurrent: ?() => void;\n\n    initialState: State = {\n        canPrint: false,\n        error: undefined,\n        isReloadNotificationVisible: false,\n        isThumbnailSidebarOpen: false,\n    };\n\n    static defaultProps = {\n        apiHost: DEFAULT_HOSTNAME_API,\n        appHost: DEFAULT_HOSTNAME_APP,\n        autoFocus: false,\n        canDownload: true,\n        className: '',\n        collection: [],\n        contentOpenWithProps: {},\n        contentSidebarProps: {},\n        enableThumbnailsSidebar: false,\n        hasHeader: false,\n        language: DEFAULT_LOCALE,\n        onAnnotator: noop,\n        onAnnotatorEvent: noop,\n        onDownload: noop,\n        onError: noop,\n        onLoad: noop,\n        onNavigate: noop,\n        onPreviewDestroy: noop,\n        onVersionChange: noop,\n        previewLibraryVersion: DEFAULT_PREVIEW_VERSION,\n        showAnnotations: false,\n        staticHost: DEFAULT_HOSTNAME_STATIC,\n        staticPath: DEFAULT_PATH_STATIC_PREVIEW,\n        useHotkeys: true,\n    };\n\n    /**\n     * @property {number}\n     */\n    fetchFileEndTime: ?number;\n\n    /**\n     * @property {number}\n     */\n    fetchFileStartTime: ?number;\n\n    /**\n     * [constructor]\n     *\n     * @return {ContentPreview}\n     */\n    constructor(props: Props) {\n        super(props);\n        const {\n            apiHost,\n            cache,\n            fileId,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n        } = props;\n\n        this.id = uniqueid('bcpr_');\n        this.api = new API({\n            apiHost,\n            cache,\n            clientName: CLIENT_NAME_CONTENT_PREVIEW,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n        });\n        this.state = {\n            ...this.initialState,\n            currentFileId: fileId,\n            // eslint-disable-next-line react/no-unused-state\n            prevFileIdProp: fileId,\n        };\n        const { logger } = props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n    }\n\n    /**\n     * Cleanup\n     *\n     * @return {void}\n     */\n    componentWillUnmount(): void {\n        // Don't destroy the cache while unmounting\n        this.api.destroy(false);\n        this.destroyPreview();\n    }\n\n    /**\n     * Cleans up the preview instance\n     */\n    destroyPreview(shouldReset: boolean = true) {\n        const { onPreviewDestroy } = this.props;\n        if (this.preview) {\n            this.preview.destroy();\n            this.preview.removeAllListeners();\n            this.preview = undefined;\n\n            onPreviewDestroy(shouldReset);\n        }\n    }\n\n    /**\n     * Destroys api instances with caches\n     *\n     * @private\n     * @return {void}\n     */\n    clearCache(): void {\n        this.api.destroy(true);\n    }\n\n    /**\n     * Once the component mounts, load Preview assets and fetch file info.\n     *\n     * @return {void}\n     */\n    componentDidMount(): void {\n        this.loadStylesheet();\n        this.loadScript();\n\n        this.fetchFile(this.state.currentFileId);\n        this.focusPreview();\n    }\n\n    static getDerivedStateFromProps(props: Props, state: State) {\n        const { fileId } = props;\n\n        if (fileId !== state.prevFileIdProp) {\n            return {\n                currentFileId: fileId,\n                prevFileIdProp: fileId,\n            };\n        }\n\n        return null;\n    }\n\n    /**\n     * After component updates, load Preview if appropriate.\n     *\n     * @return {void}\n     */\n    componentDidUpdate(prevProps: Props, prevState: State): void {\n        const { token } = this.props;\n        const { token: prevToken } = prevProps;\n        const { currentFileId } = this.state;\n        const hasFileIdChanged = prevState.currentFileId !== currentFileId;\n        const hasTokenChanged = prevToken !== token;\n\n        if (hasFileIdChanged) {\n            this.destroyPreview();\n            this.setState({ selectedVersion: undefined });\n            this.fetchFile(currentFileId);\n        } else if (this.shouldLoadPreview(prevState)) {\n            this.destroyPreview(false);\n            this.loadPreview();\n        } else if (hasTokenChanged) {\n            this.updatePreviewToken();\n        }\n    }\n\n    /**\n     * Updates the access token used by preview library\n     *\n     * @param {boolean} shouldReload - true if preview should be reloaded\n     */\n    updatePreviewToken(shouldReload: boolean = false) {\n        if (this.preview) {\n            this.preview.updateToken(this.props.token, shouldReload);\n        }\n    }\n\n    /**\n     * Returns whether or not preview should be loaded.\n     *\n     * @param {State} prevState - Previous state\n     * @return {boolean}\n     */\n    shouldLoadPreview(prevState: State): boolean {\n        const { file, selectedVersion }: State = this.state;\n        const { file: prevFile, selectedVersion: prevSelectedVersion }: State = prevState;\n        const prevSelectedVersionId = getProp(prevSelectedVersion, 'id');\n        const selectedVersionId = getProp(selectedVersion, 'id');\n        const prevFileVersionId = getProp(prevFile, 'file_version.id');\n        const fileVersionId = getProp(file, 'file_version.id');\n        let loadPreview = false;\n\n        if (selectedVersionId !== prevSelectedVersionId) {\n            const isPreviousCurrent = fileVersionId === prevSelectedVersionId || !prevSelectedVersionId;\n            const isSelectedCurrent = fileVersionId === selectedVersionId || !selectedVersionId;\n\n            // Load preview if the user has selected a non-current version of the file\n            loadPreview = !isPreviousCurrent || !isSelectedCurrent;\n        } else if (fileVersionId && prevFileVersionId) {\n            // Load preview if the file's current version ID has changed\n            loadPreview = fileVersionId !== prevFileVersionId;\n        } else {\n            // Load preview if file object has newly been populated in state\n            loadPreview = !prevFile && !!file;\n        }\n\n        return loadPreview;\n    }\n\n    /**\n     * Returns preview asset urls\n     *\n     * @return {string} base url\n     */\n    getBasePath(asset: string): string {\n        const { staticHost, staticPath, language, previewLibraryVersion }: Props = this.props;\n        const path: string = `${staticPath}/${previewLibraryVersion}/${language}/${asset}`;\n        const suffix: string = staticHost.endsWith('/') ? path : `/${path}`;\n        return `${staticHost}${suffix}`;\n    }\n\n    /**\n     * Determines if preview assets are loaded\n     *\n     * @return {boolean} true if preview is loaded\n     */\n    isPreviewLibraryLoaded(): boolean {\n        return !!global.Box && !!global.Box.Preview;\n    }\n\n    /**\n     * Loads external css by appending a <link> element\n     *\n     * @return {void}\n     */\n    loadStylesheet(): void {\n        const { head } = document;\n        const url: string = this.getBasePath('preview.css');\n\n        if (!head || head.querySelector(`link[rel=\"stylesheet\"][href=\"${url}\"]`)) {\n            return;\n        }\n\n        const link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.type = 'text/css';\n        link.href = url;\n        head.appendChild(link);\n    }\n\n    /**\n     * Loads external script by appending a <script> element\n     *\n     * @return {void}\n     */\n    loadScript(): void {\n        const { head } = document;\n        const url: string = this.getBasePath('preview.js');\n\n        if (!head || this.isPreviewLibraryLoaded()) {\n            return;\n        }\n\n        const previewScript = head.querySelector(`script[src=\"${url}\"]`);\n        if (previewScript) {\n            return;\n        }\n\n        const script = document.createElement('script');\n        script.src = url;\n        script.addEventListener('load', this.loadPreview);\n        head.appendChild(script);\n    }\n\n    /**\n     * Focuses the preview on load.\n     *\n     * @return {void}\n     */\n    focusPreview() {\n        const { autoFocus, getInnerRef }: Props = this.props;\n        if (autoFocus && !isInputElement(document.activeElement)) {\n            focus(getInnerRef());\n        }\n    }\n\n    /**\n     * Updates preview cache and prefetches a file\n     *\n     * @param {BoxItem} file - file to prefetch\n     * @return {void}\n     */\n    updatePreviewCacheAndPrefetch(file: BoxItem, token: Token): void {\n        if (!this.preview || !file || !file.id) {\n            return;\n        }\n\n        this.preview.updateFileCache([file]);\n        this.preview.prefetch({ fileId: file.id, token });\n    }\n\n    /**\n     * Gets the file id\n     *\n     * @param {string|BoxItem} file - box file or file id\n     * @return {string} file id\n     */\n    getFileId(file?: string | BoxItem): string {\n        if (typeof file === 'string') {\n            return file;\n        }\n\n        if (typeof file === 'object' && !!file.id) {\n            return file.id;\n        }\n\n        throw InvalidIdError;\n    }\n\n    /**\n     * Prefetches the next few preview files if any\n     *\n     * @param {Array<string|BoxItem>} files - files to prefetch\n     * @return {void}\n     */\n    async prefetch(files: Array<string | BoxItem>): Promise<void> {\n        const { token }: Props = this.props;\n        const typedIds: string[] = files.map(file => getTypedFileId(this.getFileId(file)));\n        await TokenService.cacheTokens(typedIds, token);\n        files.forEach(file => {\n            const fileId = this.getFileId(file);\n            this.fetchFile(fileId, noop, noop, {\n                refreshCache: false,\n            });\n        });\n    }\n\n    /**\n     * Calculates the total file fetch time\n     *\n     * @return {number} the total fetch time\n     */\n    getTotalFileFetchTime(): number {\n        if (!this.fetchFileStartTime || !this.fetchFileEndTime) {\n            return 0;\n        }\n\n        return Math.round(this.fetchFileEndTime - this.fetchFileStartTime);\n    }\n\n    /**\n     * Handler for 'preview_error' preview event\n     *\n     * @param {PreviewLibraryError} previewError - the error data emitted from preview\n     * @return {void}\n     */\n    onPreviewError = ({ error, ...rest }: PreviewLibraryError): void => {\n        const { code = ERROR_CODE_UNKNOWN } = error;\n        const { onError } = this.props;\n\n        // In case of error, there should be no thumbnail sidebar to account for\n        this.setState({ isThumbnailSidebarOpen: false });\n\n        onError(\n            error,\n            code,\n            {\n                ...rest,\n                error,\n            },\n            ORIGIN_PREVIEW,\n        );\n    };\n\n    /**\n     * Event handler 'preview_metric' which also adds in the file fetch time if it's a load event\n     *\n     * @param {Object} previewMetrics - the object emitted by 'preview_metric'\n     * @return {void}\n     */\n    onPreviewMetric = (previewMetrics: PreviewMetrics): void => {\n        const { logger } = this.props;\n        const { event_name } = previewMetrics;\n        let metrics = {\n            ...previewMetrics,\n        };\n\n        // We need to add in the total file fetch time to the file_info_time and value (total)\n        // as preview does not do the files call\n        if (event_name === PREVIEW_LOAD_METRIC_EVENT) {\n            const totalFetchFileTime = this.getTotalFileFetchTime();\n            const totalTime = (previewMetrics.value || 0) + totalFetchFileTime;\n\n            // If an unnatural load time occurs or is invalid, don't log a load event\n            if (!totalTime) {\n                return;\n            }\n\n            metrics = {\n                ...previewMetrics,\n                file_info_time: totalFetchFileTime,\n                value: totalTime,\n            };\n        }\n\n        logger.onPreviewMetric(metrics);\n    };\n\n    /**\n     * Adds in the file fetch time to the preview metrics\n     *\n     * @param {Object} previewTimeMetrics - the preview time metrics\n     * @return {Object} the preview time metrics merged with the files call time\n     */\n    addFetchFileTimeToPreviewMetrics(previewTimeMetrics: PreviewTimeMetrics): PreviewTimeMetrics {\n        const totalFetchFileTime = this.getTotalFileFetchTime();\n        const { rendering, conversion, preload } = previewTimeMetrics;\n\n        // We need to add in the total file fetch time to the rendering and total as preview\n        // does not do the files call. In the case the file is in the process of\n        // being converted, we need to add to conversion instead of the render\n        let totalConversion = conversion;\n        let totalRendering = rendering;\n        let totalPreload = preload;\n        if (conversion) {\n            totalConversion += totalFetchFileTime;\n        } else {\n            totalRendering += totalFetchFileTime;\n        }\n\n        if (totalPreload) {\n            // Preload is optional, depending on file type\n            totalPreload += totalFetchFileTime;\n        }\n\n        const previewMetrics = {\n            conversion: totalConversion,\n            rendering: totalRendering,\n            total: totalRendering + totalConversion,\n            preload: totalPreload,\n        };\n\n        return previewMetrics;\n    }\n\n    /**\n     * onLoad function for preview\n     *\n     * @return {void}\n     */\n    onPreviewLoad = (data: Object): void => {\n        const { onLoad, collection }: Props = this.props;\n        const currentIndex = this.getFileIndex();\n        const filesToPrefetch = collection.slice(currentIndex + 1, currentIndex + 5);\n        const previewTimeMetrics = getProp(data, 'metrics.time');\n        let loadData = data;\n\n        if (previewTimeMetrics) {\n            const totalPreviewMetrics = this.addFetchFileTimeToPreviewMetrics(previewTimeMetrics);\n            loadData = {\n                ...loadData,\n                metrics: {\n                    ...loadData.metrics,\n                    time: totalPreviewMetrics,\n                },\n            };\n        }\n\n        onLoad(loadData);\n        this.focusPreview();\n        if (this.preview && filesToPrefetch.length) {\n            this.prefetch(filesToPrefetch);\n        }\n\n        this.handleCanPrint();\n    };\n\n    /**\n     * Returns whether file can be downloaded based on file properties, permissions, and user-defined options.\n     *\n     * @return {boolean}\n     */\n    canDownload(): boolean {\n        const { canDownload }: Props = this.props;\n        const { file }: State = this.state;\n        const isFileDownloadable =\n            getProp(file, 'permissions.can_download', false) && getProp(file, 'is_download_available', false);\n        return isFileDownloadable && !!canDownload;\n    }\n\n    /**\n     * Returns whether file can be annotated based on permissions\n     *\n     * @return {boolean}\n     */\n    canAnnotate(): boolean {\n        const { showAnnotations }: Props = this.props;\n        const { file }: State = this.state;\n        const isFileAnnotatable = getProp(file, 'permissions.can_annotate', false);\n        return !!showAnnotations && isFileAnnotatable;\n    }\n\n    /**\n     * Returns whether a preview should render annotations based on permissions\n     *\n     * @return {boolean}\n     */\n    canViewAnnotations(): boolean {\n        const { showAnnotations }: Props = this.props;\n        const { file }: State = this.state;\n        const hasViewAllPermissions = getProp(file, 'permissions.can_view_annotations_all', false);\n        const hasViewSelfPermissions = getProp(file, 'permissions.can_view_annotations_self', false);\n        return !!showAnnotations && (this.canAnnotate() || hasViewAllPermissions || hasViewSelfPermissions);\n    }\n\n    handleCanPrint() {\n        const preview = this.getPreview();\n        this.setState({ canPrint: !!preview && (!preview.canPrint || preview.canPrint()) });\n    }\n\n    /**\n     * Loads preview in the component using the preview library.\n     *\n     * @return {void}\n     */\n    loadPreview = async (): Promise<void> => {\n        const {\n            annotatorState: { activeAnnotationId } = {},\n            enableThumbnailsSidebar,\n            fileOptions,\n            onAnnotatorEvent,\n            onAnnotator,\n            showAnnotationsControls,\n            token: tokenOrTokenFunction,\n            ...rest\n        }: Props = this.props;\n        const { file, selectedVersion, startAt }: State = this.state;\n\n        if (!this.isPreviewLibraryLoaded() || !file || !tokenOrTokenFunction) {\n            return;\n        }\n\n        const fileId = this.getFileId(file);\n\n        if (fileId !== this.state.currentFileId) {\n            return;\n        }\n\n        const fileOpts = { ...fileOptions };\n        const token = typedId => TokenService.getReadTokens(typedId, tokenOrTokenFunction);\n\n        if (selectedVersion) {\n            setProp(fileOpts, [fileId, 'fileVersionId'], selectedVersion.id);\n            setProp(fileOpts, [fileId, 'currentFileVersionId'], getProp(file, 'file_version.id'));\n        }\n\n        if (activeAnnotationId) {\n            setProp(fileOpts, [fileId, 'annotations', 'activeId'], activeAnnotationId);\n        }\n\n        if (startAt) {\n            setProp(fileOpts, [fileId, 'startAt'], startAt);\n        }\n\n        const previewOptions = {\n            container: `#${this.id} .bcpr-content`,\n            enableThumbnailsSidebar,\n            fileOptions: fileOpts,\n            header: 'none',\n            headerElement: `#${this.id} .bcpr-PreviewHeader`,\n            showAnnotations: this.canViewAnnotations(),\n            showAnnotationsControls,\n            showDownload: this.canDownload(),\n            skipServerUpdate: true,\n            useHotkeys: false,\n        };\n        const { Preview } = global.Box;\n        this.preview = new Preview();\n        this.preview.addListener('load', this.onPreviewLoad);\n        this.preview.addListener('preview_error', this.onPreviewError);\n        this.preview.addListener('preview_metric', this.onPreviewMetric);\n        this.preview.addListener('thumbnailsOpen', () => this.setState({ isThumbnailSidebarOpen: true }));\n        this.preview.addListener('thumbnailsClose', () => this.setState({ isThumbnailSidebarOpen: false }));\n\n        if (showAnnotationsControls) {\n            this.preview.addListener('annotator_create', onAnnotator);\n        }\n\n        this.preview.updateFileCache([file]);\n        this.preview.show(file.id, token, {\n            ...previewOptions,\n            ...omit(rest, Object.keys(previewOptions)),\n        });\n    };\n\n    /**\n     * Updates preview file from temporary staged file.\n     *\n     * @return {void}\n     */\n    loadFileFromStage = () => {\n        if (this.stagedFile) {\n            this.setState({ ...this.initialState, file: this.stagedFile }, () => {\n                this.stagedFile = undefined;\n            });\n        }\n    };\n\n    /**\n     * Removes the reload notification\n     *\n     * @return {void}\n     */\n    closeReloadNotification = () => {\n        this.setState({ isReloadNotificationVisible: false });\n    };\n\n    /**\n     * Tells the preview to resize\n     *\n     * @return {void}\n     */\n    onResize = (): void => {\n        if (this.preview && this.preview.getCurrentViewer()) {\n            this.preview.resize();\n        }\n    };\n\n    /**\n     * File fetch success callback\n     *\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem): void => {\n        this.fetchFileEndTime = performance.now();\n\n        const { file: currentFile }: State = this.state;\n        const isExistingFile = currentFile ? currentFile.id === file.id : false;\n        const isWatermarked = getProp(file, 'watermark_info.is_watermarked', false);\n\n        // If the file is watermarked or if its a new file, then update the state\n        // In this case preview should reload without prompting the user\n        if (isWatermarked || !isExistingFile) {\n            this.setState({ ...this.initialState, file });\n            // $FlowFixMe file version and sha1 should exist at this point\n        } else if (currentFile.file_version.sha1 !== file.file_version.sha1) {\n            // If we are already prevewing the file that got updated then show the\n            // user a notification to reload the file only if its sha1 changed\n            this.stagedFile = file;\n            this.setState({\n                ...this.initialState,\n                isReloadNotificationVisible: true,\n            });\n        }\n    };\n\n    /**\n     * File fetch error callback\n     *\n     * @return {void}\n     */\n    fetchFileErrorCallback = (fileError: ElementsXhrError, code: string): void => {\n        const { onError } = this.props;\n        const errorCode = fileError.code || code;\n        const error = {\n            code: errorCode,\n            message: fileError.message,\n        };\n        this.setState({ error, file: undefined });\n        onError(fileError, errorCode, {\n            error: fileError,\n        });\n    };\n\n    /**\n     * Fetches a file\n     *\n     * @param {string} id file id\n     * @param {Function|void} [successCallback] - Callback after file is fetched\n     * @param {Function|void} [errorCallback] - Callback after error\n     * @param {Object|void} [fetchOptions] - Fetch options\n     * @return {void}\n     */\n    fetchFile(\n        id: ?string,\n        successCallback?: Function,\n        errorCallback?: Function,\n        fetchOptions: RequestOptions = {},\n    ): void {\n        if (!id) {\n            return;\n        }\n\n        this.fetchFileStartTime = performance.now();\n        this.fetchFileEndTime = null;\n\n        this.api\n            .getFileAPI()\n            .getFile(\n                id,\n                successCallback || this.fetchFileSuccessCallback,\n                errorCallback || this.fetchFileErrorCallback,\n                {\n                    ...fetchOptions,\n                    fields: PREVIEW_FIELDS_TO_FETCH,\n                },\n            );\n    }\n\n    /**\n     * Returns the preview instance\n     *\n     * @return {Preview} current instance of preview\n     */\n    getPreview = (): any => {\n        const { file }: State = this.state;\n        if (!this.preview || !file) {\n            return null;\n        }\n\n        return this.preview;\n    };\n\n    /**\n     * Returns the viewer instance being used by preview.\n     * This will let child components access the viewers.\n     *\n     * @return {Viewer} current instance of the preview viewer\n     */\n    getViewer = (): any => {\n        const preview = this.getPreview();\n        const viewer = preview ? preview.getCurrentViewer() : null;\n        return viewer && viewer.isLoaded() && !viewer.isDestroyed() ? viewer : null;\n    };\n\n    /**\n     * Finds the index of current file inside the collection\n     *\n     * @return {number} -1 if not indexed\n     */\n    getFileIndex() {\n        const { currentFileId }: State = this.state;\n        const { collection }: Props = this.props;\n        if (!currentFileId || collection.length < 2) {\n            return -1;\n        }\n\n        return collection.findIndex(item => {\n            if (typeof item === 'string') {\n                return item === currentFileId;\n            }\n\n            return item.id === currentFileId;\n        });\n    }\n\n    /**\n     * Shows a preview of a file at the specified index in the current collection.\n     *\n     * @public\n     * @param {number} index - Index of file to preview\n     * @return {void}\n     */\n    navigateToIndex(index: number) {\n        const { collection, onNavigate }: Props = this.props;\n        const { length } = collection;\n        if (length < 2 || index < 0 || index > length - 1) {\n            return;\n        }\n\n        const fileOrId = collection[index];\n        const fileId = typeof fileOrId === 'object' ? fileOrId.id || '' : fileOrId;\n\n        this.setState(\n            {\n                currentFileId: fileId,\n            },\n            () => {\n                // Execute navigation callback\n                onNavigate(fileId);\n            },\n        );\n    }\n\n    /**\n     * Shows a preview of the previous file.\n     *\n     * @public\n     * @return {void}\n     */\n    navigateLeft = () => {\n        const currentIndex = this.getFileIndex();\n        const newIndex = currentIndex === 0 ? 0 : currentIndex - 1;\n        if (newIndex !== currentIndex) {\n            this.navigateToIndex(newIndex);\n        }\n    };\n\n    /**\n     * Shows a preview of the next file.\n     *\n     * @public\n     * @return {void}\n     */\n    navigateRight = () => {\n        const { collection }: Props = this.props;\n        const currentIndex = this.getFileIndex();\n        const newIndex = currentIndex === collection.length - 1 ? collection.length - 1 : currentIndex + 1;\n        if (newIndex !== currentIndex) {\n            this.navigateToIndex(newIndex);\n        }\n    };\n\n    /**\n     * Downloads file.\n     *\n     * @public\n     * @return {void}\n     */\n    download = () => {\n        const { onDownload }: Props = this.props;\n        const { file }: State = this.state;\n        if (this.preview) {\n            this.preview.download();\n            onDownload(cloneDeep(file));\n        }\n    };\n\n    /**\n     * Prints file.\n     *\n     * @public\n     * @return {void}\n     */\n    print = () => {\n        if (this.preview) {\n            this.preview.print();\n        }\n    };\n\n    /**\n     * Mouse move handler that is throttled and show\n     * the navigation arrows if applicable.\n     *\n     * @return {void}\n     */\n    onMouseMove = throttle(() => {\n        const viewer = this.getViewer();\n        const isPreviewing = !!viewer;\n        const CLASS_NAVIGATION_VISIBILITY = 'bcpr-nav-is-visible';\n\n        clearTimeout(this.mouseMoveTimeoutID);\n\n        if (!this.previewContainer) {\n            return;\n        }\n\n        // Always assume that navigation arrows will be hidden\n        this.previewContainer.classList.remove(CLASS_NAVIGATION_VISIBILITY);\n\n        // Only show it if either we aren't previewing or if we are then the viewer\n        // is not blocking the show. If we are previewing then the viewer may choose\n        // to not allow navigation arrows. This is mostly useful for videos since the\n        // navigation arrows may interfere with the settings menu inside video player.\n        if (this.previewContainer && (!isPreviewing || viewer.allowNavigationArrows())) {\n            this.previewContainer.classList.add(CLASS_NAVIGATION_VISIBILITY);\n        }\n\n        this.mouseMoveTimeoutID = setTimeout(() => {\n            if (this.previewContainer) {\n                this.previewContainer.classList.remove(CLASS_NAVIGATION_VISIBILITY);\n            }\n        }, 1500);\n    }, 1000);\n\n    /**\n     * Keyboard events\n     *\n     * @return {void}\n     */\n    onKeyDown = (event: SyntheticKeyboardEvent<HTMLElement>) => {\n        const { useHotkeys }: Props = this.props;\n        if (!useHotkeys) {\n            return;\n        }\n\n        let consumed = false;\n        const key = decode(event);\n        const viewer = this.getViewer();\n\n        // If focus was on an input or if the viewer doesn't exist\n        // then don't bother doing anything further\n        if (!key || !viewer || isInputElement(event.target)) {\n            return;\n        }\n\n        if (typeof viewer.onKeydown === 'function') {\n            consumed = !!viewer.onKeydown(key, event.nativeEvent);\n        }\n\n        if (!consumed) {\n            switch (key) {\n                case 'ArrowLeft':\n                    this.navigateLeft();\n                    consumed = true;\n                    break;\n                case 'ArrowRight':\n                    this.navigateRight();\n                    consumed = true;\n                    break;\n                default:\n                // no-op\n            }\n        }\n\n        if (consumed) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    /**\n     * Handles version change events\n     *\n     * @param {string} [version] - The version that is now previewed\n     * @param {object} [additionalVersionInfo] - extra info about the version\n     */\n    onVersionChange = (version?: BoxItemVersion, additionalVersionInfo: AdditionalVersionInfo = {}): void => {\n        const { onVersionChange }: Props = this.props;\n        this.updateVersionToCurrent = additionalVersionInfo.updateVersionToCurrent;\n\n        onVersionChange(version, additionalVersionInfo);\n        this.setState({\n            selectedVersion: version,\n        });\n    };\n\n    handleAnnotationSelect = ({ file_version, id, target }: Annotation) => {\n        const { location = {} } = target;\n        const { file, selectedVersion } = this.state;\n        const annotationFileVersionId = getProp(file_version, 'id');\n        const currentFileVersionId = getProp(file, 'file_version.id');\n        const currentPreviewFileVersionId = getProp(selectedVersion, 'id', currentFileVersionId);\n        const unit = startAtTypes[location.type];\n        const viewer = this.getViewer();\n\n        if (unit && annotationFileVersionId && annotationFileVersionId !== currentPreviewFileVersionId) {\n            this.setState({\n                startAt: {\n                    unit,\n                    value: location.value,\n                },\n            });\n        }\n\n        if (viewer) {\n            viewer.emit('scrolltoannotation', { id, target });\n        }\n    };\n\n    /**\n     * Holds the reference the preview container\n     *\n     * @return {void}\n     */\n    containerRef = (container: ?HTMLDivElement) => {\n        this.previewContainer = container;\n    };\n\n    /**\n     * Refreshes the content sidebar panel\n     *\n     * @return {void}\n     */\n    refreshSidebar(): void {\n        const { current: contentSidebar } = this.contentSidebar;\n\n        if (contentSidebar) {\n            contentSidebar.refresh();\n        }\n    }\n\n    /**\n     * Renders the file preview\n     *\n     * @inheritdoc\n     * @return {Element}\n     */\n    render() {\n        const {\n            apiHost,\n            collection,\n            token,\n            language,\n            messages,\n            className,\n            contentSidebarProps,\n            contentOpenWithProps,\n            hasHeader,\n            history,\n            isLarge,\n            isVeryLarge,\n            logoUrl,\n            onClose,\n            measureRef,\n            sharedLink,\n            sharedLinkPassword,\n            requestInterceptor,\n            responseInterceptor,\n        }: Props = this.props;\n\n        const {\n            canPrint,\n            error,\n            file,\n            isReloadNotificationVisible,\n            currentFileId,\n            isThumbnailSidebarOpen,\n            selectedVersion,\n        }: State = this.state;\n\n        const styleClassName = classNames(\n            'be bcpr',\n            {\n                'bcpr-thumbnails-open': isThumbnailSidebarOpen,\n            },\n            className,\n        );\n\n        if (!currentFileId) {\n            return null;\n        }\n\n        const errorCode = getProp(error, 'code');\n        const currentVersionId = getProp(file, 'file_version.id');\n        const selectedVersionId = getProp(selectedVersion, 'id', currentVersionId);\n        const onHeaderClose = currentVersionId === selectedVersionId ? onClose : this.updateVersionToCurrent;\n\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n        /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n        return (\n            <Internationalize language={language} messages={messages}>\n                <div id={this.id} className={styleClassName} ref={measureRef} onKeyDown={this.onKeyDown} tabIndex={0}>\n                    {hasHeader && (\n                        <PreviewHeader\n                            file={file}\n                            logoUrl={logoUrl}\n                            token={token}\n                            onClose={onHeaderClose}\n                            onPrint={this.print}\n                            canDownload={this.canDownload()}\n                            canPrint={canPrint}\n                            onDownload={this.download}\n                            contentOpenWithProps={contentOpenWithProps}\n                            canAnnotate={this.canAnnotate()}\n                            selectedVersion={selectedVersion}\n                        />\n                    )}\n                    <div className=\"bcpr-body\">\n                        <div className=\"bcpr-container\" onMouseMove={this.onMouseMove} ref={this.containerRef}>\n                            {file ? (\n                                <Measure bounds onResize={this.onResize}>\n                                    {({ measureRef: previewRef }) => <div ref={previewRef} className=\"bcpr-content\" />}\n                                </Measure>\n                            ) : (\n                                <div className=\"bcpr-loading-wrapper\">\n                                    <PreviewLoading\n                                        errorCode={errorCode}\n                                        isLoading={!errorCode}\n                                        loadingIndicatorProps={{\n                                            size: 'large',\n                                        }}\n                                    />\n                                </div>\n                            )}\n                            <PreviewNavigation\n                                collection={collection}\n                                currentIndex={this.getFileIndex()}\n                                onNavigateLeft={this.navigateLeft}\n                                onNavigateRight={this.navigateRight}\n                            />\n                        </div>\n                        {file && (\n                            <LoadableSidebar\n                                {...contentSidebarProps}\n                                apiHost={apiHost}\n                                token={token}\n                                cache={this.api.getCache()}\n                                fileId={currentFileId}\n                                getPreview={this.getPreview}\n                                getViewer={this.getViewer}\n                                history={history}\n                                isDefaultOpen={isLarge || isVeryLarge}\n                                language={language}\n                                ref={this.contentSidebar}\n                                sharedLink={sharedLink}\n                                sharedLinkPassword={sharedLinkPassword}\n                                requestInterceptor={requestInterceptor}\n                                responseInterceptor={responseInterceptor}\n                                onAnnotationSelect={this.handleAnnotationSelect}\n                                onVersionChange={this.onVersionChange}\n                            />\n                        )}\n                    </div>\n                    {isReloadNotificationVisible && (\n                        <ReloadNotification onClose={this.closeReloadNotification} onClick={this.loadFileFromStage} />\n                    )}\n                </div>\n            </Internationalize>\n        );\n        /* eslint-enable jsx-a11y/no-static-element-interactions */\n        /* eslint-enable jsx-a11y/no-noninteractive-tabindex */\n    }\n}\n\nexport type ContentPreviewProps = Props;\nexport { ContentPreview as ContentPreviewComponent };\nexport default flow([\n    makeResponsive,\n    withAnnotatorContext,\n    withAnnotations,\n    withRouter,\n    withNavRouter,\n    withFeatureProvider,\n    withLogger(ORIGIN_CONTENT_PREVIEW),\n    withErrorBoundary(ORIGIN_CONTENT_PREVIEW),\n])(ContentPreview);\n"],"file":"ContentPreview.js"}