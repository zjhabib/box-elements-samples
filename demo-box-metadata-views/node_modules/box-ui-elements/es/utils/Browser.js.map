{"version":3,"sources":["../../src/utils/Browser.js"],"names":["isDashSupported","Browser","global","navigator","userAgent","test","getUserAgent","recheck","mse","MediaSource","isTypeSupported","clipboard","writeText","readText"],"mappings":";;;;;;AAAA;;;;;AAMA,IAAIA,eAAJ;;IAEMC,O;;;;;;;;;;AACF;;;;;;mCAM8B;AAC1B,aAAOC,MAAM,CAACC,SAAP,CAAiBC,SAAxB;AACH;AAED;;;;;;;;+BAK2B;AACvB;AACA,aAAO,kEAAkEC,IAAlE,CAAuEJ,OAAO,CAACK,YAAR,EAAvE,CAAP;AACH;AAED;;;;;;;;2BAKc;AACV,aAAO,WAAWD,IAAX,CAAgBJ,OAAO,CAACK,YAAR,EAAhB,CAAP;AACH;AAED;;;;;;;;;;;;kCAS6C;AAAA,UAA1BC,OAA0B,uEAAP,KAAO;;AACzC,UAAI,OAAOP,eAAP,KAA2B,WAA3B,IAA0CO,OAA9C,EAAuD;AACnD,YAAMC,GAAG,GAAGN,MAAM,CAACO,WAAnB;AACAT,QAAAA,eAAe,GACX,CAAC,CAACQ,GAAF,IACA,OAAOA,GAAG,CAACE,eAAX,KAA+B,UAD/B,IAEAF,GAAG,CAACE,eAAJ,CAAoB,iCAApB,CAHJ;AAIH;;AAED,aAAOV,eAAP;AACH;AAED;;;;;;;;;;;;;0CAU6B;AACzB,aAAO,CAAC,EAAEE,MAAM,CAACC,SAAP,CAAiBQ,SAAjB,IAA8BT,MAAM,CAACC,SAAP,CAAiBQ,SAAjB,CAA2BC,SAA3D,CAAR;AACH;AAED;;;;;;;;;;;;;2CAU8B;AAC1B,aAAO,CAAC,EAAEV,MAAM,CAACC,SAAP,CAAiBQ,SAAjB,IAA8BT,MAAM,CAACC,SAAP,CAAiBQ,SAAjB,CAA2BE,QAA3D,CAAR;AACH;;;;;;AAGL,eAAeZ,OAAf","sourcesContent":["/**\n * @flow\n * @file Helper for some browser utilities\n * @author Box\n */\n\nlet isDashSupported;\n\nclass Browser {\n    /**\n     * Returns the user agent.\n     * Helps in mocking out.\n     *\n     * @return {String} navigator userAgent\n     */\n    static getUserAgent(): string {\n        return global.navigator.userAgent;\n    }\n\n    /**\n     * Returns whether browser is mobile.\n     *\n     * @return {boolean} Whether browser is mobile\n     */\n    static isMobile(): boolean {\n        // Relying on the user agent to avoid desktop browsers on machines with touch screens.\n        return /iphone|ipad|ipod|android|blackberry|bb10|mini|windows\\sce|palm/i.test(Browser.getUserAgent());\n    }\n\n    /**\n     * Returns whether browser is IE.\n     *\n     * @return {boolena} Whether browser is IE\n     */\n    static isIE() {\n        return /Trident/i.test(Browser.getUserAgent());\n    }\n\n    /**\n     * Checks the browser for Dash support using H264 high.\n     * Dash requires MediaSource extensions to exist and be applicable\n     * to the H264 container (since we use H264 and not webm)\n     *\n     * @public\n     * @param {boolean} recheck - recheck support\n     * @return {boolean} true if dash is usable\n     */\n    static canPlayDash(recheck: boolean = false) {\n        if (typeof isDashSupported === 'undefined' || recheck) {\n            const mse = global.MediaSource;\n            isDashSupported =\n                !!mse &&\n                typeof mse.isTypeSupported === 'function' &&\n                mse.isTypeSupported('video/mp4; codecs=\"avc1.64001E\"');\n        }\n\n        return isDashSupported;\n    }\n\n    /**\n     * Checks whether the browser has support for the Clipboard API. This new API supercedes\n     * the `execCommand`-based API and uses Promises for detecting whether it works or not.\n     *\n     * This check determines if the browser can support writing to the clipboard.\n     * @see https://www.w3.org/TR/clipboard-apis/#async-clipboard-api\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Clipboard\n     *\n     * @return {boolean} whether writing to the clipboard is possible\n     */\n    static canWriteToClipboard() {\n        return !!(global.navigator.clipboard && global.navigator.clipboard.writeText);\n    }\n\n    /**\n     * Checks whether the browser has support for the Clipboard API. This new API supercedes\n     * the `execCommand`-based API and uses Promises for detecting whether it works or not.\n     *\n     * This check determines if the browser can support reading from the clipboard.\n     * @see https://www.w3.org/TR/clipboard-apis/#async-clipboard-api\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Clipboard\n     *\n     * @return {boolean} whether reading from the clipboard is possible\n     */\n    static canReadFromClipboard() {\n        return !!(global.navigator.clipboard && global.navigator.clipboard.readText);\n    }\n}\n\nexport default Browser;\n"],"file":"Browser.js"}