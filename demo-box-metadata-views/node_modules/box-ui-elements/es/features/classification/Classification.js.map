{"version":3,"sources":["../../../src/features/classification/Classification.js"],"names":["React","FormattedDate","FormattedMessage","isValidDate","Label","LoadingIndicator","ClassifiedBadge","SecurityControls","messages","STYLE_INLINE","STYLE_TOOLTIP","Classification","definition","className","controls","controlsFormat","isLoadingControls","maxAppCount","messageStyle","modifiedAt","modifiedBy","name","itemName","color","onClick","isClassified","hasDefinition","hasModifiedAt","hasModifiedBy","hasSecurityControls","isTooltipMessageEnabled","isInlineMessageEnabled","isNotClassifiedMessageVisible","isControlsIndicatorEnabled","isSecurityControlsEnabled","modifiedDate","Date","isModifiedMessageVisible","formattedModifiedAt","undefined","missing","modifiedByLabel"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport { isValidDate } from '../../utils/datetime';\nimport Label from '../../components/label/Label';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport ClassifiedBadge from './ClassifiedBadge';\nimport SecurityControls from './security-controls';\nimport messages from './messages';\nimport './Classification.scss';\n\nimport type { Controls, ControlsFormat } from './flowTypes';\n\nconst STYLE_INLINE: 'inline' = 'inline';\nconst STYLE_TOOLTIP: 'tooltip' = 'tooltip';\ntype Props = {\n    className?: string,\n    color?: string,\n    controls?: Controls,\n    controlsFormat?: ControlsFormat,\n    definition?: string,\n    isLoadingControls?: boolean,\n    itemName?: string,\n    maxAppCount?: number,\n    messageStyle?: typeof STYLE_INLINE | typeof STYLE_TOOLTIP,\n    modifiedAt?: string,\n    modifiedBy?: string,\n    name?: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst Classification = ({\n    definition,\n    className = '',\n    controls,\n    controlsFormat,\n    isLoadingControls,\n    maxAppCount,\n    messageStyle,\n    modifiedAt,\n    modifiedBy,\n    name,\n    itemName = '',\n    color,\n    onClick,\n}: Props) => {\n    const isClassified = !!name;\n    const hasDefinition = !!definition;\n    const hasModifiedAt = !!modifiedAt;\n    const hasModifiedBy = !!modifiedBy;\n    const hasSecurityControls = !!controls;\n    const isTooltipMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_TOOLTIP;\n    const isInlineMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_INLINE;\n    const isNotClassifiedMessageVisible = !isClassified && messageStyle === STYLE_INLINE;\n    const isControlsIndicatorEnabled = isClassified && isLoadingControls && messageStyle === STYLE_INLINE;\n    const isSecurityControlsEnabled =\n        isClassified && !isLoadingControls && hasSecurityControls && messageStyle === STYLE_INLINE;\n    const modifiedDate = new Date(modifiedAt || 0);\n    const isModifiedMessageVisible =\n        isClassified && hasModifiedAt && isValidDate(modifiedDate) && hasModifiedBy && messageStyle === STYLE_INLINE;\n\n    const formattedModifiedAt = isModifiedMessageVisible && (\n        <FormattedDate value={modifiedDate} month=\"long\" year=\"numeric\" day=\"numeric\" />\n    );\n\n    return (\n        <article className={`bdl-Classification ${className}`}>\n            {isClassified && (\n                <ClassifiedBadge\n                    color={color}\n                    name={((name: any): string)}\n                    onClick={onClick}\n                    tooltipText={isTooltipMessageEnabled ? definition : undefined}\n                />\n            )}\n            {isInlineMessageEnabled && (\n                <Label text={<FormattedMessage {...messages.definition} />}>\n                    <p className=\"bdl-Classification-definition\">{definition}</p>\n                </Label>\n            )}\n            {isNotClassifiedMessageVisible && (\n                <span className=\"bdl-Classification-missingMessage\">\n                    <FormattedMessage {...messages.missing} />\n                </span>\n            )}\n            {isModifiedMessageVisible && (\n                <Label text={<FormattedMessage {...messages.modifiedByLabel} />}>\n                    <p className=\"bdl-Classification-modifiedBy\" data-testid=\"classification-modifiedby\">\n                        <FormattedMessage\n                            {...messages.modifiedBy}\n                            values={{ modifiedAt: formattedModifiedAt, modifiedBy }}\n                        />\n                    </p>\n                </Label>\n            )}\n\n            {isSecurityControlsEnabled && (\n                <SecurityControls\n                    classificationColor={color}\n                    classificationName={name}\n                    controls={controls}\n                    controlsFormat={controlsFormat}\n                    definition={definition}\n                    itemName={itemName}\n                    maxAppCount={maxAppCount}\n                    shouldRenderLabel\n                />\n            )}\n            {isControlsIndicatorEnabled && <LoadingIndicator />}\n        </article>\n    );\n};\n\nexport { STYLE_INLINE, STYLE_TOOLTIP };\nexport default Classification;\n"],"file":"Classification.js"}