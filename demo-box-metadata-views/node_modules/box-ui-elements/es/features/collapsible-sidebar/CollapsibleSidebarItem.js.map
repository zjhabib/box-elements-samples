{"version":3,"sources":["../../../src/features/collapsible-sidebar/CollapsibleSidebarItem.js"],"names":["React","Tooltip","LeftSidebarLinkCallout","CollapsibleSidebarItem","props","callout","collapsedElement","expanded","expandedElement","tooltipMessage","calloutChildren","wrappedCollapsedElement"],"mappings":"AAAA;;;;;;;AAOA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAOC,sBAAP,MAAmC,wCAAnC;;AAoBA,SAASC,sBAAT,CAAgCC,KAAhC,EAA8C;AAAA,MAClCC,OADkC,GACuCD,KADvC,CAClCC,OADkC;AAAA,MACzBC,gBADyB,GACuCF,KADvC,CACzBE,gBADyB;AAAA,MACPC,QADO,GACuCH,KADvC,CACPG,QADO;AAAA,MACGC,eADH,GACuCJ,KADvC,CACGI,eADH;AAAA,MACoBC,cADpB,GACuCL,KADvC,CACoBK,cADpB;;AAG1C,MAAIJ,OAAJ,EAAa;AACT,QAAMK,eAAe,GAAGH,QAAQ,GAAGC,eAAH,GAAqBF,gBAArD;AACA,WACI,oBAAC,sBAAD;AACI,MAAA,kBAAkB,EAAC,aADvB;AAEI,MAAA,OAAO,EAAED,OAFb;AAGI,MAAA,wBAAwB,EAAC;AAH7B,OAKKK,eALL,CADJ;AASH;;AAED,MAAMC,uBAAuB,GACzB,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAE,KAArB;AAA4B,IAAA,QAAQ,EAAC,cAArC;AAAoD,IAAA,IAAI,EAAEF,cAA1D;AAA0E,IAAA,UAAU,EAAE,CAACA;AAAvF,KACKH,gBADL,CADJ;AAMA,SAAOC,QAAQ,GAAGC,eAAH,GAAqBG,uBAApC;AACH;;AAED,eAAeR,sBAAf","sourcesContent":["/**\n * @flow\n * @file CollapsibleSidebar item component that will render stylized collapsedElement or expanded depending on the expanded prop.\n * @author Box\n *\n * CollapsibleSidebar item component that will render stylized collapsedElement or expanded depending on the expanded prop.\n */\nimport * as React from 'react';\n\nimport Tooltip from '../../components/tooltip';\n\nimport LeftSidebarLinkCallout from '../left-sidebar/LeftSidebarLinkCallout';\nimport type { Callout } from '../left-sidebar/Callout';\n\ntype Props = {\n    /** Callout element used in the menu. */\n    callout?: Callout,\n\n    /** Element to be shown when component is collapsed */\n    collapsedElement: React.Node,\n\n    /** Controls whether or not the sidebar is expanded on the page */\n    expanded: boolean,\n\n    /** Element to be shown when component is expanded */\n    expandedElement: React.Node,\n\n    /** Tooltip message to show for collapsed item */\n    tooltipMessage?: string,\n};\n\nfunction CollapsibleSidebarItem(props: Props) {\n    const { callout, collapsedElement, expanded, expandedElement, tooltipMessage } = props;\n\n    if (callout) {\n        const calloutChildren = expanded ? expandedElement : collapsedElement;\n        return (\n            <LeftSidebarLinkCallout\n                attachmentPosition=\"bottom left\"\n                callout={callout}\n                targetAttachmentPosition=\"bottom right\"\n            >\n                {calloutChildren}\n            </LeftSidebarLinkCallout>\n        );\n    }\n\n    const wrappedCollapsedElement = (\n        <Tooltip isTabbable={false} position=\"middle-right\" text={tooltipMessage} isDisabled={!tooltipMessage}>\n            {collapsedElement}\n        </Tooltip>\n    );\n\n    return expanded ? expandedElement : wrappedCollapsedElement;\n}\n\nexport default CollapsibleSidebarItem;\n"],"file":"CollapsibleSidebarItem.js"}