{"version":3,"sources":["../../../../src/features/content-explorer/content-explorer-modal-container/ContentExplorerModalContainer.js"],"names":["PropTypes","React","Component","classNames","ContentExplorerModePropType","FoldersPathPropType","ItemsPropType","ContentExplorerModal","NewFolderModal","ContentExplorerModalContainer","props","enteredFolder","newFoldersPath","onEnterFolder","setState","foldersPath","onNewFolderModalShown","isNewFolderModalOpen","onNewFolderModalClosed","state","initialFoldersPath","prevInitialFoldersPath","className","headerActionsAccessory","modalTitle","modalDescription","onRequestClose","onCreateFolderSubmit","onCreateFolderInput","isCreatingFolder","createFolderError","contentExplorerMode","onChooseItems","onMoveItem","onCopyItem","isCreateNewFolderAllowed","onSearchSubmit","onExitSearch","onSelectedClick","onSelectItem","items","numItemsPerPage","numTotalItems","onLoadMoreItems","itemIconRenderer","itemNameLinkRenderer","itemButtonRenderer","showCreateNewFolderButton","searchInputProps","chooseButtonText","currentFolder","length","handleEnterFolder","handleCreateNewFolderButtonClick","name","handleNewFolderModalClose","string","node","func","isRequired","bool","number","object"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\n\nimport { ContentExplorerModePropType, FoldersPathPropType, ItemsPropType } from '../prop-types';\nimport ContentExplorerModal from '../content-explorer-modal';\nimport NewFolderModal from '../new-folder-modal';\n\nclass ContentExplorerModalContainer extends Component {\n    static propTypes = {\n        /** Adds class name. */\n        className: PropTypes.string,\n        /** Any extra items in the header to the right of the search input (and new folder button) */\n        headerActionsAccessory: PropTypes.node,\n        /** Title shown in the ContentExplorerModal. */\n        modalTitle: PropTypes.string,\n        /** Description text shown in the ContentExplorerModal. */\n        modalDescription: PropTypes.string,\n        /** Called when the ContentExplorerModal is closed. */\n        onRequestClose: PropTypes.func.isRequired,\n        /**\n         * Called when the folder creation is submitted.\n         *\n         * @param {string} folderName\n         */\n        onCreateFolderSubmit: PropTypes.func,\n        /**\n         * Called with the latest folder name input.\n         *\n         * @param {string} folderName\n         */\n        onCreateFolderInput: PropTypes.func,\n        /** Called when the NewFolderModal is shown. */\n        onNewFolderModalShown: PropTypes.func,\n        /** Called when the NewFolderModal is closed. */\n        onNewFolderModalClosed: PropTypes.func,\n        /** Called when selected button is clicked */\n        onSelectedClick: PropTypes.func,\n        /**\n         * Called when an item is selected\n         *\n         * @param {Object} selectedItem\n         * @param {number} selectedItemIndex\n         */\n        onSelectItem: PropTypes.func,\n        /** Folder is in the process of being created. */\n        isCreatingFolder: PropTypes.bool,\n        /** Message that will be shown when there was an error creating the folder. */\n        createFolderError: PropTypes.string,\n        /** Configures the content explorer based on the user's intended action (ex. select file or move/copy) */\n        contentExplorerMode: ContentExplorerModePropType.isRequired,\n        /** Initial path of folders. The last folder in the array is the current folder. */\n        initialFoldersPath: FoldersPathPropType.isRequired,\n        /**\n         * Called when the current folder changes\n         *\n         * @param {Object} enteredFolder\n         * @param {Array} newFoldersPath\n         */\n        onEnterFolder: PropTypes.func.isRequired,\n        /**\n         * Called when items are chosen.\n         *\n         * @param {Object[]} chosenItems In non-multi select mode, the chosenItems will be a 1 element array contain the one chosen item\n         */\n        onChooseItems: PropTypes.func,\n        /**\n         * Called when a destination folder has been selected for moving an item to\n         *\n         * @param {Object} destFolder destination folder\n         */\n        onMoveItem: PropTypes.func,\n        /**\n         * Called when a destination folder has been selected for copying an item to\n         *\n         * @param {Object} destFolder destination folder\n         */\n        onCopyItem: PropTypes.func,\n        /** Whether the user has permission to create a new folder */\n        isCreateNewFolderAllowed: PropTypes.bool,\n        /**\n         * Called when a search query is submitted.\n         *\n         * @param {string} searchQuery\n         */\n        onSearchSubmit: PropTypes.func.isRequired,\n        /**\n         * Called when search mode is exited. An updated items list should now be passed in to display the user's file tree.\n         *\n         * @param {Object} folderBeforeSearch the previous folder object before entering search mode\n         */\n        onExitSearch: PropTypes.func.isRequired,\n        /** List of items to display */\n        items: ItemsPropType.isRequired,\n        /** Number of items to load per page as the user scrolls */\n        numItemsPerPage: PropTypes.number,\n        /** Total number of items across all pages */\n        numTotalItems: PropTypes.number,\n        /** Called to load more items */\n        onLoadMoreItems: PropTypes.func,\n        /** Used to render item icons in the list. Overrides the default icons. */\n        itemIconRenderer: PropTypes.func,\n        /** Used to render item name links in the list. Overrides the default links. */\n        itemNameLinkRenderer: PropTypes.func,\n        /** Used to render item buttons in the list. Overrides the default buttons. */\n        itemButtonRenderer: PropTypes.func,\n        /** Whether the new folder button should be shown */\n        showCreateNewFolderButton: PropTypes.bool,\n        /** Props for the search input */\n        searchInputProps: PropTypes.object,\n        /** Custom text for the choose button */\n        chooseButtonText: PropTypes.node,\n    };\n\n    static defaultProps = {\n        onCreateFolderSubmit: () => {},\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            foldersPath: props.initialFoldersPath,\n            isNewFolderModalOpen: false,\n        };\n    }\n\n    componentDidUpdate({ initialFoldersPath: prevInitialFoldersPath }) {\n        const { initialFoldersPath } = this.props;\n\n        if (prevInitialFoldersPath !== initialFoldersPath) {\n            // Close the new folder modal when the folders path has changed\n            this.setState({\n                foldersPath: initialFoldersPath,\n                isNewFolderModalOpen: false,\n            });\n        }\n    }\n\n    handleEnterFolder = (enteredFolder, newFoldersPath) => {\n        const { onEnterFolder } = this.props;\n\n        this.setState({ foldersPath: newFoldersPath });\n        onEnterFolder(enteredFolder, newFoldersPath);\n    };\n\n    handleCreateNewFolderButtonClick = () => {\n        const { onNewFolderModalShown } = this.props;\n\n        this.setState({ isNewFolderModalOpen: true }, () => onNewFolderModalShown && onNewFolderModalShown());\n    };\n\n    handleNewFolderModalClose = () => {\n        const { onNewFolderModalClosed } = this.props;\n\n        this.setState({ isNewFolderModalOpen: false }, () => onNewFolderModalClosed && onNewFolderModalClosed());\n    };\n\n    render() {\n        const {\n            className,\n            headerActionsAccessory,\n            modalTitle,\n            modalDescription,\n            onRequestClose,\n            onCreateFolderSubmit,\n            onCreateFolderInput,\n            isCreatingFolder,\n            createFolderError,\n            contentExplorerMode,\n            initialFoldersPath,\n            onChooseItems,\n            onMoveItem,\n            onCopyItem,\n            isCreateNewFolderAllowed,\n            onSearchSubmit,\n            onExitSearch,\n            onSelectedClick,\n            onSelectItem,\n            items,\n            numItemsPerPage,\n            numTotalItems,\n            onLoadMoreItems,\n            itemIconRenderer,\n            itemNameLinkRenderer,\n            itemButtonRenderer,\n            showCreateNewFolderButton,\n            searchInputProps,\n            chooseButtonText,\n        } = this.props;\n        const { foldersPath, isNewFolderModalOpen } = this.state;\n        const currentFolder = foldersPath[foldersPath.length - 1];\n\n        return (\n            <div className={classNames('content-explorer-modal-container', className)}>\n                <ContentExplorerModal\n                    className={isNewFolderModalOpen ? 'hidden' : ''}\n                    headerActionsAccessory={headerActionsAccessory}\n                    title={modalTitle}\n                    description={modalDescription}\n                    isOpen\n                    onRequestClose={onRequestClose}\n                    contentExplorerMode={contentExplorerMode}\n                    initialFoldersPath={initialFoldersPath}\n                    onEnterFolder={this.handleEnterFolder}\n                    onChooseItems={onChooseItems}\n                    onMoveItem={onMoveItem}\n                    onCopyItem={onCopyItem}\n                    onSelectedClick={onSelectedClick}\n                    onSelectItem={onSelectItem}\n                    onCreateNewFolderButtonClick={this.handleCreateNewFolderButtonClick}\n                    isCreateNewFolderAllowed={isCreateNewFolderAllowed}\n                    onSearchSubmit={onSearchSubmit}\n                    onExitSearch={onExitSearch}\n                    items={items}\n                    numItemsPerPage={numItemsPerPage}\n                    numTotalItems={numTotalItems}\n                    onLoadMoreItems={onLoadMoreItems}\n                    itemIconRenderer={itemIconRenderer}\n                    itemNameLinkRenderer={itemNameLinkRenderer}\n                    itemButtonRenderer={itemButtonRenderer}\n                    showCreateNewFolderButton={showCreateNewFolderButton}\n                    searchInputProps={searchInputProps}\n                    chooseButtonText={chooseButtonText}\n                />\n                {isNewFolderModalOpen && (\n                    <NewFolderModal\n                        isOpen\n                        parentFolderName={currentFolder.name}\n                        onRequestClose={this.handleNewFolderModalClose}\n                        onCreateFolderSubmit={onCreateFolderSubmit}\n                        onCreateFolderInput={onCreateFolderInput}\n                        isCreatingFolder={isCreatingFolder}\n                        createFolderError={createFolderError}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ContentExplorerModalContainer;\n"],"file":"ContentExplorerModalContainer.js"}