{"version":3,"sources":["../../../src/features/unified-share-modal/SharedLinkSection.js"],"names":["React","FormattedMessage","PlainButton","Button","TextInputWithCopyButton","Toggle","Tooltip","convertToMs","IconMail","IconClock","IconGlobe","bdlWatermelonRed","isBoxNote","Browser","convertToBoxItem","SharedLinkAccessMenu","SharedLinkPermissionMenu","messages","PEOPLE_IN_ITEM","ANYONE_WITH_LINK","CAN_VIEW_DOWNLOAD","CAN_VIEW_ONLY","SharedLinkSection","props","isSharedLinkEnabled","canAddLink","canRemoveLink","state","isAutoCreatingSharedLink","isCopySuccessful","sharedLink","autoCreateSharedLink","addSharedLink","submitting","url","isNewSharedLink","setState","prevProps","triggerCopyOnLoad","onCopyError","onCopySuccess","onCopyInit","canWriteToClipboard","navigator","clipboard","writeText","then","catch","autofocusSharedLink","changeSharedLinkAccessLevel","changeSharedLinkPermissionLevel","config","item","itemType","intl","onDismissTooltip","onEmailSharedLinkClick","trackingProps","tooltips","accessLevel","accessLevelsDisabledReason","allowedAccessLevels","canChangeAccessLevel","enterpriseName","isEditAllowed","isDownloadSettingAvailable","permissionLevel","copyButtonProps","onChangeSharedLinkAccessLevel","onChangeSharedLinkPermissionLevel","onSharedLinkAccessMenuOpen","onSharedLinkCopy","sendSharedLinkButtonProps","sharedLinkAccessMenuButtonProps","sharedLinkPermissionsMenuButtonProps","shouldTriggerCopyOnLoad","hideEmailButton","showEmailSharedLinkForm","isEditableBoxNote","allowedPermissionLevels","filter","level","formatMessage","sharedLinkURLLabel","sendSharedLink","sharedLinkPermissionsEditTooltip","sharedLinkPermissionsEdit","sharedLinkPubliclyAvailable","onSettingsClick","showSharedLinkSettingsCallout","sharedLinkSettingsButtonProps","sharedLinkSettingsCalloutText","settingsButtonLabel","sharedLinkSettings","onToggleSharedLink","expirationTimestamp","canAddSharedLink","grantedPermissions","itemShare","canRemoveSharedLink","isToggleEnabled","linkText","linkShareOn","sharedLinkExpirationTooltip","expiration","linkShareOff","toggleComponent","sharedLinkToggleTooltip","sharedLinkDisabledTooltipCopy","tooltipDisabledMessage","removeLinkTooltip","disabledCreateLinkTooltip","sharedLinkSectionLabel","renderToggle","renderSharedLinkSettingsLink","renderSharedLink","Component"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\nimport Button from '../../components/button';\nimport TextInputWithCopyButton from '../../components/text-input-with-copy-button';\nimport Toggle from '../../components/toggle/Toggle';\nimport Tooltip from '../../components/tooltip';\nimport { convertToMs } from '../../utils/datetime';\nimport IconMail from '../../icons/general/IconMail';\nimport IconClock from '../../icons/general/IconClock';\nimport IconGlobe from '../../icons/general/IconGlobe';\nimport { bdlWatermelonRed } from '../../styles/variables';\nimport type { ItemType } from '../../common/types/core';\nimport { isBoxNote } from '../../utils/file';\nimport Browser from '../../utils/Browser';\n\nimport convertToBoxItem from './utils/item';\nimport SharedLinkAccessMenu from './SharedLinkAccessMenu';\nimport SharedLinkPermissionMenu from './SharedLinkPermissionMenu';\nimport messages from './messages';\nimport type {\n    accessLevelType,\n    item as itemtype,\n    permissionLevelType,\n    sharedLinkType,\n    sharedLinkTrackingType,\n    tooltipComponentIdentifierType,\n    USMConfig,\n} from './flowTypes';\nimport { PEOPLE_IN_ITEM, ANYONE_WITH_LINK, CAN_VIEW_DOWNLOAD, CAN_VIEW_ONLY } from './constants';\n\ntype Props = {\n    addSharedLink: () => void,\n    autoCreateSharedLink?: boolean,\n    autofocusSharedLink?: boolean,\n    changeSharedLinkAccessLevel: (newAccessLevel: accessLevelType) => Promise<{ accessLevel: accessLevelType }>,\n    changeSharedLinkPermissionLevel: (\n        newPermissionLevel: permissionLevelType,\n    ) => Promise<{ permissionLevel: permissionLevelType }>,\n    config?: USMConfig,\n    intl: any,\n    item: itemtype,\n    itemType: ItemType,\n    onCopyError?: () => void,\n    onCopyInit?: () => void,\n    onCopySuccess?: () => void,\n    onDismissTooltip: (componentIdentifier: tooltipComponentIdentifierType) => void,\n    onEmailSharedLinkClick: Function,\n    onSettingsClick?: Function,\n    onToggleSharedLink: Function,\n    sharedLink: sharedLinkType,\n    showSharedLinkSettingsCallout: boolean,\n    submitting: boolean,\n    tooltips: { [componentIdentifier: tooltipComponentIdentifierType]: React.Node },\n    trackingProps: sharedLinkTrackingType,\n    triggerCopyOnLoad?: boolean,\n};\n\ntype State = {\n    isAutoCreatingSharedLink: boolean,\n    isCopySuccessful: ?boolean,\n};\n\nclass SharedLinkSection extends React.Component<Props, State> {\n    static defaultProps = {\n        trackingProps: {},\n        autoCreateSharedLink: false,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            isAutoCreatingSharedLink: false,\n            isCopySuccessful: null,\n        };\n    }\n\n    componentDidMount() {\n        const { sharedLink, autoCreateSharedLink, addSharedLink, submitting } = this.props;\n\n        if (\n            autoCreateSharedLink &&\n            !this.state.isAutoCreatingSharedLink &&\n            sharedLink &&\n            !sharedLink.url &&\n            !submitting &&\n            !sharedLink.isNewSharedLink\n        ) {\n            this.setState({ isAutoCreatingSharedLink: true });\n            addSharedLink();\n        }\n    }\n\n    // We handle didUpdate but not didMount because\n    // the component initially renders with empty data\n    // in order to start showing UI components.\n    // When getInitialData completes in the parent we\n    // rerender with correct sharedLink data and can\n    // check whether to auto create a new one.\n    // Note: we are assuming the 2nd render is safe\n    // to start doing this check.\n    componentDidUpdate(prevProps: Props) {\n        const {\n            sharedLink,\n            autoCreateSharedLink,\n            addSharedLink,\n            submitting,\n            triggerCopyOnLoad,\n            onCopyError = () => {},\n            onCopySuccess = () => {},\n            onCopyInit = () => {},\n        } = this.props;\n\n        const { isAutoCreatingSharedLink, isCopySuccessful } = this.state;\n\n        if (\n            autoCreateSharedLink &&\n            !isAutoCreatingSharedLink &&\n            !sharedLink.url &&\n            !submitting &&\n            !sharedLink.isNewSharedLink\n        ) {\n            this.setState({ isAutoCreatingSharedLink: true });\n            addSharedLink();\n        }\n\n        if (!prevProps.sharedLink.url && sharedLink.url) {\n            this.setState({ isAutoCreatingSharedLink: false });\n        }\n\n        if (\n            Browser.canWriteToClipboard() &&\n            triggerCopyOnLoad &&\n            !isAutoCreatingSharedLink &&\n            sharedLink.url &&\n            isCopySuccessful === null\n        ) {\n            onCopyInit();\n            navigator.clipboard\n                .writeText(sharedLink.url)\n                .then(() => {\n                    this.setState({ isCopySuccessful: true });\n                    onCopySuccess();\n                })\n                .catch(() => {\n                    this.setState({ isCopySuccessful: false });\n                    onCopyError();\n                });\n        }\n    }\n\n    canAddSharedLink = (isSharedLinkEnabled: boolean, canAddLink: boolean) => {\n        return !isSharedLinkEnabled && canAddLink;\n    };\n\n    canRemoveSharedLink = (isSharedLinkEnabled: boolean, canRemoveLink: boolean) => {\n        return isSharedLinkEnabled && canRemoveLink;\n    };\n\n    renderSharedLink() {\n        const {\n            autofocusSharedLink,\n            changeSharedLinkAccessLevel,\n            changeSharedLinkPermissionLevel,\n            config,\n            item,\n            itemType,\n            intl,\n            onDismissTooltip,\n            onEmailSharedLinkClick,\n            sharedLink,\n            submitting,\n            trackingProps,\n            triggerCopyOnLoad,\n            tooltips,\n        } = this.props;\n\n        const { isCopySuccessful } = this.state;\n\n        const {\n            accessLevel,\n            accessLevelsDisabledReason,\n            allowedAccessLevels,\n            canChangeAccessLevel,\n            enterpriseName,\n            isEditAllowed,\n            isDownloadSettingAvailable,\n            permissionLevel,\n            url,\n        } = sharedLink;\n\n        const {\n            copyButtonProps,\n            onChangeSharedLinkAccessLevel,\n            onChangeSharedLinkPermissionLevel,\n            onSharedLinkAccessMenuOpen,\n            onSharedLinkCopy,\n            sendSharedLinkButtonProps,\n            sharedLinkAccessMenuButtonProps,\n            sharedLinkPermissionsMenuButtonProps,\n        } = trackingProps;\n\n        const shouldTriggerCopyOnLoad = !!triggerCopyOnLoad && !!isCopySuccessful;\n\n        /**\n         * The email button should be rendered by default.\n         * Only hide the button if there is a config prop that declares showEmailSharedLinkForm to be false.\n         */\n        const hideEmailButton = config && config.showEmailSharedLinkForm === false;\n\n        const isEditableBoxNote = isBoxNote(convertToBoxItem(item)) && isEditAllowed;\n        let allowedPermissionLevels = [CAN_VIEW_DOWNLOAD, CAN_VIEW_ONLY];\n\n        if (!canChangeAccessLevel) {\n            // remove all but current level\n            allowedPermissionLevels = allowedPermissionLevels.filter(level => level === permissionLevel);\n        }\n\n        // if we cannot set the download value, we remove this option from the dropdown\n        if (!isDownloadSettingAvailable) {\n            allowedPermissionLevels = allowedPermissionLevels.filter(level => level !== CAN_VIEW_DOWNLOAD);\n        }\n\n        return (\n            <>\n                <div className=\"shared-link-field-row\">\n                    <Tooltip\n                        className=\"usm-ftux-tooltip\"\n                        isShown={!!tooltips['shared-link-copy-button']}\n                        onDismiss={() => onDismissTooltip('shared-link-copy-button')}\n                        position=\"middle-right\"\n                        showCloseButton\n                        text={tooltips['shared-link-copy-button']}\n                        theme=\"callout\"\n                    >\n                        <TextInputWithCopyButton\n                            aria-label={intl.formatMessage(messages.sharedLinkURLLabel)}\n                            autofocus={autofocusSharedLink}\n                            buttonProps={copyButtonProps}\n                            className=\"shared-link-field-container\"\n                            disabled={submitting}\n                            label=\"\"\n                            onCopySuccess={onSharedLinkCopy}\n                            triggerCopyOnLoad={shouldTriggerCopyOnLoad}\n                            type=\"url\"\n                            value={url}\n                        />\n                    </Tooltip>\n                    {!hideEmailButton && (\n                        <Tooltip position=\"top-left\" text={<FormattedMessage {...messages.sendSharedLink} />}>\n                            <Button\n                                aria-label={intl.formatMessage(messages.sendSharedLink)}\n                                className=\"email-shared-link-btn\"\n                                isDisabled={submitting}\n                                onClick={onEmailSharedLinkClick}\n                                type=\"button\"\n                                {...sendSharedLinkButtonProps}\n                            >\n                                <IconMail />\n                            </Button>\n                        </Tooltip>\n                    )}\n                </div>\n\n                <div className=\"shared-link-access-row\">\n                    <SharedLinkAccessMenu\n                        accessLevel={accessLevel}\n                        accessLevelsDisabledReason={accessLevelsDisabledReason}\n                        allowedAccessLevels={allowedAccessLevels}\n                        changeAccessLevel={changeSharedLinkAccessLevel}\n                        enterpriseName={enterpriseName}\n                        itemType={itemType}\n                        onDismissTooltip={() => onDismissTooltip('shared-link-access-menu')}\n                        tooltipContent={tooltips['shared-link-access-menu'] || null}\n                        submitting={submitting}\n                        trackingProps={{\n                            onChangeSharedLinkAccessLevel,\n                            onSharedLinkAccessMenuOpen,\n                            sharedLinkAccessMenuButtonProps,\n                        }}\n                    />\n                    {!isEditableBoxNote && accessLevel !== PEOPLE_IN_ITEM && (\n                        <SharedLinkPermissionMenu\n                            allowedPermissionLevels={allowedPermissionLevels}\n                            canChangePermissionLevel={canChangeAccessLevel}\n                            changePermissionLevel={changeSharedLinkPermissionLevel}\n                            permissionLevel={permissionLevel}\n                            submitting={submitting}\n                            trackingProps={{\n                                onChangeSharedLinkPermissionLevel,\n                                sharedLinkPermissionsMenuButtonProps,\n                            }}\n                        />\n                    )}\n                    {isEditableBoxNote && (\n                        <Tooltip text={<FormattedMessage {...messages.sharedLinkPermissionsEditTooltip} />}>\n                            <PlainButton isDisabled className=\"can-edit-btn\">\n                                <FormattedMessage {...messages.sharedLinkPermissionsEdit} />\n                            </PlainButton>\n                        </Tooltip>\n                    )}\n                </div>\n                {accessLevel === ANYONE_WITH_LINK && (\n                    <div className=\"security-indicator-note\">\n                        <span className=\"security-indicator-icon-globe\">\n                            <IconGlobe height={12} width={12} />\n                        </span>\n                        <FormattedMessage {...messages.sharedLinkPubliclyAvailable} />\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    renderSharedLinkSettingsLink() {\n        const {\n            intl,\n            onDismissTooltip,\n            onSettingsClick,\n            showSharedLinkSettingsCallout,\n            trackingProps,\n            tooltips,\n        } = this.props;\n        const { sharedLinkSettingsButtonProps } = trackingProps;\n\n        return (\n            <div className=\"shared-link-settings-btn-container\">\n                <Tooltip\n                    className=\"usm-ftux-tooltip\"\n                    isShown={!!tooltips['shared-link-settings'] || showSharedLinkSettingsCallout}\n                    onDismiss={() => onDismissTooltip('shared-link-settings')}\n                    position=\"middle-right\"\n                    showCloseButton\n                    text={\n                        tooltips['shared-link-settings'] || (\n                            <FormattedMessage {...messages.sharedLinkSettingsCalloutText} />\n                        )\n                    }\n                    theme=\"callout\"\n                >\n                    <PlainButton\n                        {...sharedLinkSettingsButtonProps}\n                        aria-label={intl.formatMessage(messages.settingsButtonLabel)}\n                        className=\"shared-link-settings-btn\"\n                        onClick={onSettingsClick}\n                        type=\"button\"\n                    >\n                        <FormattedMessage {...messages.sharedLinkSettings} />\n                    </PlainButton>\n                </Tooltip>\n            </div>\n        );\n    }\n\n    renderToggle() {\n        const { item, onDismissTooltip, onToggleSharedLink, sharedLink, submitting, tooltips } = this.props;\n        const { canChangeAccessLevel, expirationTimestamp, url } = sharedLink;\n        const isSharedLinkEnabled = !!url;\n        const canAddSharedLink = this.canAddSharedLink(isSharedLinkEnabled, item.grantedPermissions.itemShare);\n        const canRemoveSharedLink = this.canRemoveSharedLink(isSharedLinkEnabled, canChangeAccessLevel);\n        const isToggleEnabled = (canAddSharedLink || canRemoveSharedLink) && !submitting;\n\n        let linkText;\n\n        if (isSharedLinkEnabled) {\n            linkText = <FormattedMessage {...messages.linkShareOn} />;\n            if (expirationTimestamp && expirationTimestamp !== 0) {\n                linkText = (\n                    <span>\n                        <FormattedMessage {...messages.linkShareOn} />\n                        <Tooltip\n                            position=\"top-center\"\n                            text={\n                                <FormattedMessage\n                                    {...messages.sharedLinkExpirationTooltip}\n                                    values={{\n                                        expiration: convertToMs(expirationTimestamp),\n                                    }}\n                                />\n                            }\n                        >\n                            <span className=\"shared-link-expiration-badge\">\n                                <IconClock color={bdlWatermelonRed} />\n                            </span>\n                        </Tooltip>\n                    </span>\n                );\n            }\n        } else {\n            linkText = <FormattedMessage {...messages.linkShareOff} />;\n        }\n\n        const toggleComponent = (\n            <div className=\"share-toggle-container\">\n                <Toggle\n                    isDisabled={!isToggleEnabled}\n                    isOn={isSharedLinkEnabled}\n                    label={linkText}\n                    name=\"toggle\"\n                    onChange={onToggleSharedLink}\n                />\n            </div>\n        );\n\n        if (!submitting) {\n            if (canAddSharedLink) {\n                const sharedLinkToggleTooltip = tooltips['shared-link-toggle'];\n                if (sharedLinkToggleTooltip) {\n                    return (\n                        <Tooltip\n                            className=\"usm-ftux-tooltip\"\n                            isShown\n                            onDismiss={() => onDismissTooltip('shared-link-toggle')}\n                            position=\"middle-left\"\n                            showCloseButton\n                            text={sharedLinkToggleTooltip}\n                            theme=\"callout\"\n                        >\n                            {toggleComponent}\n                        </Tooltip>\n                    );\n                }\n                return (\n                    <Tooltip\n                        position=\"top-right\"\n                        text={<FormattedMessage {...messages.sharedLinkDisabledTooltipCopy} />}\n                    >\n                        {toggleComponent}\n                    </Tooltip>\n                );\n            }\n\n            if (!isToggleEnabled) {\n                const tooltipDisabledMessage = isSharedLinkEnabled\n                    ? messages.removeLinkTooltip\n                    : messages.disabledCreateLinkTooltip;\n\n                return (\n                    <Tooltip\n                        className=\"usm-disabled-message-tooltip\"\n                        position=\"top-right\"\n                        text={<FormattedMessage {...tooltipDisabledMessage} />}\n                    >\n                        {toggleComponent}\n                    </Tooltip>\n                );\n            }\n        }\n\n        return toggleComponent;\n    }\n\n    render() {\n        const { sharedLink, onSettingsClick } = this.props;\n        const isSharedLinkEnabled = !!sharedLink.url;\n\n        return (\n            <div>\n                <hr className=\"bdl-SharedLinkSection-separator\" />\n                {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n                <label>\n                    <span className=\"label bdl-Label\">\n                        <FormattedMessage {...messages.sharedLinkSectionLabel} />\n                    </span>\n                </label>\n                <div className=\"shared-link-toggle-row\">\n                    {this.renderToggle()}\n                    {isSharedLinkEnabled && onSettingsClick && this.renderSharedLinkSettingsLink()}\n                </div>\n                {isSharedLinkEnabled && this.renderSharedLink()}\n            </div>\n        );\n    }\n}\n\nexport default SharedLinkSection;\n"],"file":"SharedLinkSection.js"}