{"version":3,"sources":["../../../src/features/unified-share-modal/UnifiedShareForm.js"],"names":["React","FormattedMessage","injectIntl","LoadingIndicatorWrapper","Link","Button","UpgradeBadge","ITEM_TYPE_WEBLINK","Tooltip","CollaboratorAvatars","CollaboratorList","InviteePermissionsMenu","messages","SharedLinkSection","EmailForm","getDefaultPermissionLevel","mergeContacts","SHARED_LINKS_COMMUNITY_URL","INVITE_COLLABS_CONTACTS_TYPE","EMAIL_SHARED_LINK_CONTACTS_TYPE","UnifiedShareForm","props","pills","onPillCreate","event","target","handleFtuxCloseClick","onAddLink","openConfirmModal","shouldRenderFTUXTooltip","trackingProps","sharedLinkTracking","onToggleLink","type","checked","setState","showCollaboratorList","data","inviteePermissions","sendInvites","inviteCollabsEmailTracking","onSendClick","inviteePermissionLevel","state","defaultPermissionLevel","selectedPermissionLevel","emails","groupIDs","message","params","join","emailMessage","permission","numsOfInvitees","length","numOfInviteeGroups","sendSharedLink","sharedLinkEmailTracking","numsOfRecipients","numOfRecipientGroups","permissionLevel","inviteCollabTracking","onInviteePermissionChange","selectOptionPills","filter","pill","id","getContactsByEmail","map","value","then","contacts","prevState","inviteCollabsContacts","emailSharedLinkContacts","isInviteSectionExpanded","onEnterInviteCollabs","isEmailLinkSectionExpanded","some","contact","isExternalUser","setUpdatedContacts","focusSharedLinkOnLoad","sharedLink","sharedLinkLoaded","isNewSharedLink","initiallySelectedContacts","canInvite","collaborationRestrictionWarning","contactLimit","getCollaboratorContacts","getContactAvatarUrl","item","recommendedSharingTooltipCalloutName","sendInvitesError","showEnterEmailsCallout","showCalloutForUser","showUpgradeOptions","submitting","suggestedCollaborators","modalTracking","contactsFieldDisabledTooltip","inviteDisabledWeblinkTooltip","inviteDisabledTooltip","inlineNotice","content","avatars","renderCollaboratorAvatars","ftuxConfirmButtonProps","ftuxTooltipText","ftuxNewUSMUserTitle","ftuxNewUSMUserBody","ftuxLinkText","ftuxConfirmLabel","ftuxTooltipProps","className","isShown","position","showCloseButton","text","theme","inviteFieldLabel","hasExternalContact","openInviteCollaborators","handleInviteCollabPillCreate","closeInviteCollaborators","handleSendInvites","openInviteCollaboratorsSection","updateInviteCollabsContacts","renderInviteePermissionsDropdown","renderUpgradeLinkDescription","collaboratorsList","currentUserID","avatarsContent","collaborators","hideCollaborators","canShowCollaboratorAvatars","collaborator","String","userID","collaboratorAvatarsProps","upgradeLinkProps","upgradeGetMoreAccessControlsLink","upgradeGetMoreAccessControlsDescription","inviteePermissionsButtonProps","handleInviteePermissionChange","name","collaboratorListTracking","listContent","closeCollaboratorList","allShareRestrictionWarning","changeSharedLinkAccessLevel","createSharedLinkOnLoad","changeSharedLinkPermissionLevel","config","displayInModal","getSharedLinkContacts","intl","isFetching","onCopyError","onCopyInit","onCopySuccess","onDismissTooltip","onSettingsClick","sendSharedLinkError","showSharedLinkSettingsCallout","tooltips","showShareRestrictionWarning","renderInviteSection","shouldAutoFocusSharedLink","openEmailSharedLinkForm","onToggleSharedLink","sendSharedLinkFieldLabel","handleEmailSharedLinkPillCreate","closeEmailSharedLinkForm","handleSendSharedLink","updateEmailSharedLinkContacts","renderCollaboratorList","Component","removeLinkConfirmModalTracking","UnifiedShareFormBase"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport LoadingIndicatorWrapper from '../../components/loading-indicator/LoadingIndicatorWrapper';\nimport { Link } from '../../components/link';\nimport Button from '../../components/button';\nimport { UpgradeBadge } from '../../components/badge';\nimport { ITEM_TYPE_WEBLINK } from '../../common/constants';\nimport Tooltip from '../../components/tooltip';\nimport { CollaboratorAvatars, CollaboratorList } from '../collaborator-avatars';\n\nimport InviteePermissionsMenu from './InviteePermissionsMenu';\nimport messages from './messages';\nimport SharedLinkSection from './SharedLinkSection';\nimport EmailForm from './EmailForm';\nimport getDefaultPermissionLevel from './utils/defaultPermissionLevel';\nimport mergeContacts from './utils/mergeContacts';\nimport type { contactType as Contact, USFProps } from './flowTypes';\nimport type { SelectOptionProp } from '../../components/select-field/props';\n\nconst SHARED_LINKS_COMMUNITY_URL = 'https://community.box.com/t5/Using-Shared-Links/Creating-Shared-Links/ta-p/19523';\nconst INVITE_COLLABS_CONTACTS_TYPE = 'inviteCollabsContacts';\nconst EMAIL_SHARED_LINK_CONTACTS_TYPE = 'emailSharedLinkContacts';\n\ntype State = {\n    emailSharedLinkContacts: Array<Contact>,\n    inviteCollabsContacts: Array<Contact>,\n    inviteePermissionLevel: string,\n    isEmailLinkSectionExpanded: boolean,\n    isInviteSectionExpanded: boolean,\n    showCollaboratorList: boolean,\n};\n\nclass UnifiedShareForm extends React.Component<USFProps, State> {\n    static defaultProps = {\n        displayInModal: true,\n        initiallySelectedContacts: [],\n        createSharedLinkOnLoad: false,\n        focusSharedLinkOnLoad: false,\n        trackingProps: {\n            collaboratorListTracking: {},\n            inviteCollabsEmailTracking: {},\n            inviteCollabTracking: {},\n            modalTracking: {},\n            removeLinkConfirmModalTracking: {},\n            sharedLinkEmailTracking: {},\n            sharedLinkTracking: {},\n        },\n    };\n\n    constructor(props: USFProps) {\n        super(props);\n\n        this.state = {\n            emailSharedLinkContacts: [],\n            inviteCollabsContacts: props.initiallySelectedContacts,\n            inviteePermissionLevel: '',\n            isEmailLinkSectionExpanded: false,\n            isInviteSectionExpanded: !!props.initiallySelectedContacts.length,\n            showCollaboratorList: false,\n        };\n    }\n\n    handleInviteCollabPillCreate = (pills: Array<SelectOptionProp | Contact>) => {\n        return this.onPillCreate(INVITE_COLLABS_CONTACTS_TYPE, pills);\n    };\n\n    handleEmailSharedLinkPillCreate = (pills: Array<SelectOptionProp | Contact>) => {\n        return this.onPillCreate(EMAIL_SHARED_LINK_CONTACTS_TYPE, pills);\n    };\n\n    onToggleSharedLink = (event: SyntheticInputEvent<HTMLInputElement>) => {\n        const { target } = event;\n        const {\n            handleFtuxCloseClick,\n            onAddLink,\n            openConfirmModal,\n            shouldRenderFTUXTooltip,\n            trackingProps,\n        } = this.props;\n        const { sharedLinkTracking } = trackingProps;\n        const { onToggleLink } = sharedLinkTracking;\n\n        if (shouldRenderFTUXTooltip) {\n            handleFtuxCloseClick();\n        }\n\n        if (target.type === 'checkbox') {\n            if (target.checked === false) {\n                openConfirmModal();\n            } else {\n                onAddLink();\n            }\n\n            if (onToggleLink) {\n                onToggleLink(target.checked);\n            }\n        }\n    };\n\n    showCollaboratorList = () => {\n        this.setState({ showCollaboratorList: true });\n    };\n\n    closeCollaboratorList = () => {\n        this.setState({ showCollaboratorList: false });\n    };\n\n    handleSendInvites = (data: Object) => {\n        const { inviteePermissions, sendInvites, trackingProps } = this.props;\n        const { inviteCollabsEmailTracking } = trackingProps;\n        const { onSendClick } = inviteCollabsEmailTracking;\n        const { inviteePermissionLevel } = this.state;\n        const defaultPermissionLevel = getDefaultPermissionLevel(inviteePermissions);\n        const selectedPermissionLevel = inviteePermissionLevel || defaultPermissionLevel;\n        const { emails, groupIDs, message } = data;\n        const params = {\n            emails: emails.join(','),\n            groupIDs: groupIDs.join(','),\n            emailMessage: message,\n            permission: selectedPermissionLevel,\n            numsOfInvitees: emails.length,\n            numOfInviteeGroups: groupIDs.length,\n        };\n\n        if (onSendClick) {\n            onSendClick(params);\n        }\n\n        return sendInvites(params);\n    };\n\n    handleSendSharedLink = (data: Object) => {\n        const { sendSharedLink, trackingProps } = this.props;\n        const { sharedLinkEmailTracking } = trackingProps;\n        const { onSendClick } = sharedLinkEmailTracking;\n\n        const { emails, groupIDs } = data;\n\n        if (onSendClick) {\n            const params = {\n                ...data,\n                numsOfRecipients: emails.length,\n                numOfRecipientGroups: groupIDs.length,\n            };\n            onSendClick(params);\n        }\n\n        return sendSharedLink(data);\n    };\n\n    // TODO-AH: Change permission level to use the appropriate flow type\n    handleInviteePermissionChange = (permissionLevel: string) => {\n        const { trackingProps } = this.props;\n        const { inviteCollabTracking } = trackingProps;\n        const { onInviteePermissionChange } = inviteCollabTracking;\n\n        this.setState({ inviteePermissionLevel: permissionLevel });\n\n        if (onInviteePermissionChange) {\n            onInviteePermissionChange(permissionLevel);\n        }\n    };\n\n    onPillCreate = (type: string, pills: Array<SelectOptionProp | Contact>) => {\n        // If this is a dropdown select event, we ignore it\n        // $FlowFixMe\n        const selectOptionPills = pills.filter(pill => !pill.id);\n        if (selectOptionPills.length === 0) {\n            return;\n        }\n\n        const { getContactsByEmail } = this.props;\n\n        if (getContactsByEmail) {\n            const emails = pills.map(pill => pill.value);\n            // $FlowFixMe\n            getContactsByEmail({ emails }).then((contacts: Object) => {\n                if (type === INVITE_COLLABS_CONTACTS_TYPE) {\n                    this.setState(prevState => ({\n                        inviteCollabsContacts: mergeContacts(prevState.inviteCollabsContacts, contacts),\n                    }));\n                } else if (type === EMAIL_SHARED_LINK_CONTACTS_TYPE) {\n                    this.setState(prevState => ({\n                        emailSharedLinkContacts: mergeContacts(prevState.emailSharedLinkContacts, contacts),\n                    }));\n                }\n            });\n        }\n    };\n\n    openInviteCollaborators = (value: string) => {\n        const { handleFtuxCloseClick } = this.props;\n        if (this.state.isInviteSectionExpanded) {\n            return;\n        }\n\n        // checking the value because IE seems to trigger onInput immediately\n        // on focus of the contacts field\n        if (value !== '') {\n            handleFtuxCloseClick();\n            this.setState(\n                {\n                    isInviteSectionExpanded: true,\n                },\n                () => {\n                    const {\n                        trackingProps: {\n                            inviteCollabTracking: { onEnterInviteCollabs },\n                        },\n                    } = this.props;\n\n                    if (onEnterInviteCollabs) {\n                        onEnterInviteCollabs();\n                    }\n                },\n            );\n        }\n    };\n\n    openInviteCollaboratorsSection = () => {\n        this.setState({\n            isInviteSectionExpanded: true,\n        });\n    };\n\n    closeInviteCollaborators = () => {\n        this.setState({\n            isInviteSectionExpanded: false,\n        });\n    };\n\n    openEmailSharedLinkForm = () => {\n        const { handleFtuxCloseClick } = this.props;\n        handleFtuxCloseClick();\n        this.setState({\n            isEmailLinkSectionExpanded: true,\n        });\n    };\n\n    closeEmailSharedLinkForm = () => {\n        this.setState({ isEmailLinkSectionExpanded: false });\n    };\n\n    hasExternalContact = (type: string): boolean => {\n        const { inviteCollabsContacts, emailSharedLinkContacts } = this.state;\n        if (type === INVITE_COLLABS_CONTACTS_TYPE) {\n            return inviteCollabsContacts.some(contact => contact.isExternalUser);\n        }\n        if (type === EMAIL_SHARED_LINK_CONTACTS_TYPE) {\n            return emailSharedLinkContacts.some(contact => contact.isExternalUser);\n        }\n        return false;\n    };\n\n    updateInviteCollabsContacts = (inviteCollabsContacts: Array<Contact>) => {\n        const { setUpdatedContacts } = this.props;\n        this.setState({\n            inviteCollabsContacts,\n        });\n        if (setUpdatedContacts) {\n            setUpdatedContacts(inviteCollabsContacts);\n        }\n    };\n\n    updateEmailSharedLinkContacts = (emailSharedLinkContacts: Array<Contact>) => {\n        this.setState({\n            emailSharedLinkContacts,\n        });\n    };\n\n    shouldAutoFocusSharedLink = () => {\n        const { focusSharedLinkOnLoad, sharedLink, sharedLinkLoaded } = this.props;\n        // if not forcing focus or not a newly added shared link, return false\n        if (!(focusSharedLinkOnLoad || sharedLink.isNewSharedLink)) {\n            return false;\n        }\n        // otherwise wait until the link data is loaded before focusing\n        if (!sharedLinkLoaded) {\n            return false;\n        }\n        return true;\n    };\n\n    renderInviteSection() {\n        const {\n            canInvite,\n            collaborationRestrictionWarning,\n            contactLimit,\n            getCollaboratorContacts,\n            getContactAvatarUrl,\n            handleFtuxCloseClick,\n            item,\n            recommendedSharingTooltipCalloutName = null,\n            sendInvitesError,\n            shouldRenderFTUXTooltip,\n            showEnterEmailsCallout = false,\n            showCalloutForUser = false,\n            showUpgradeOptions,\n            submitting,\n            suggestedCollaborators,\n            trackingProps,\n        } = this.props;\n        const { type } = item;\n        const { isInviteSectionExpanded } = this.state;\n        const { inviteCollabsEmailTracking, modalTracking } = trackingProps;\n        const contactsFieldDisabledTooltip =\n            type === ITEM_TYPE_WEBLINK ? (\n                <FormattedMessage {...messages.inviteDisabledWeblinkTooltip} />\n            ) : (\n                <FormattedMessage {...messages.inviteDisabledTooltip} />\n            );\n        const inlineNotice = sendInvitesError\n            ? {\n                  type: 'error',\n                  content: sendInvitesError,\n              }\n            : {\n                  type: 'warning',\n                  content: collaborationRestrictionWarning,\n              };\n        const avatars = this.renderCollaboratorAvatars();\n        const { ftuxConfirmButtonProps } = modalTracking;\n        const ftuxTooltipText = (\n            <div>\n                <h4 className=\"ftux-tooltip-title\">\n                    <FormattedMessage {...messages.ftuxNewUSMUserTitle} />\n                </h4>\n                <p className=\"ftux-tooltip-body\">\n                    <FormattedMessage {...messages.ftuxNewUSMUserBody} />{' '}\n                    <Link className=\"ftux-tooltip-link\" href={SHARED_LINKS_COMMUNITY_URL} target=\"_blank\">\n                        <FormattedMessage {...messages.ftuxLinkText} />\n                    </Link>\n                </p>\n                <div className=\"ftux-tooltip-controls\">\n                    <Button className=\"ftux-tooltip-button\" onClick={handleFtuxCloseClick} {...ftuxConfirmButtonProps}>\n                        <FormattedMessage {...messages.ftuxConfirmLabel} />\n                    </Button>\n                </div>\n            </div>\n        );\n        const ftuxTooltipProps = {\n            className: 'usm-ftux-tooltip',\n            // don't want ftux tooltip to show if the recommended sharing tooltip callout is showing\n            isShown: !recommendedSharingTooltipCalloutName && shouldRenderFTUXTooltip && showCalloutForUser,\n            position: 'middle-left',\n            showCloseButton: true,\n            text: ftuxTooltipText,\n            theme: 'callout',\n        };\n\n        return (\n            <>\n                <Tooltip {...ftuxTooltipProps}>\n                    <div className=\"invite-collaborator-container\">\n                        <EmailForm\n                            contactLimit={contactLimit}\n                            contactsFieldAvatars={avatars}\n                            contactsFieldDisabledTooltip={contactsFieldDisabledTooltip}\n                            contactsFieldLabel={<FormattedMessage {...messages.inviteFieldLabel} />}\n                            getContacts={getCollaboratorContacts}\n                            getContactAvatarUrl={getContactAvatarUrl}\n                            inlineNotice={inlineNotice}\n                            isContactsFieldEnabled={canInvite}\n                            isExpanded={isInviteSectionExpanded}\n                            isExternalUserSelected={this.hasExternalContact(INVITE_COLLABS_CONTACTS_TYPE)}\n                            onContactInput={this.openInviteCollaborators}\n                            onPillCreate={this.handleInviteCollabPillCreate}\n                            onRequestClose={this.closeInviteCollaborators}\n                            onSubmit={this.handleSendInvites}\n                            openInviteCollaboratorsSection={this.openInviteCollaboratorsSection}\n                            recommendedSharingTooltipCalloutName={recommendedSharingTooltipCalloutName}\n                            showEnterEmailsCallout={showEnterEmailsCallout}\n                            submitting={submitting}\n                            selectedContacts={this.state.inviteCollabsContacts}\n                            suggestedCollaborators={suggestedCollaborators}\n                            updateSelectedContacts={this.updateInviteCollabsContacts}\n                            {...inviteCollabsEmailTracking}\n                        >\n                            {this.renderInviteePermissionsDropdown()}\n                            {isInviteSectionExpanded && showUpgradeOptions && this.renderUpgradeLinkDescription()}\n                        </EmailForm>\n                    </div>\n                </Tooltip>\n            </>\n        );\n    }\n\n    renderCollaboratorAvatars() {\n        const { collaboratorsList, canInvite, currentUserID, item, trackingProps } = this.props;\n        const { modalTracking } = trackingProps;\n        let avatarsContent = null;\n\n        if (collaboratorsList) {\n            const { collaborators } = collaboratorsList;\n            const { hideCollaborators = true } = item;\n            const canShowCollaboratorAvatars = hideCollaborators ? canInvite : true;\n\n            // filter out the current user by comparing to the ItemCollabRecord ID field\n            avatarsContent = canShowCollaboratorAvatars && (\n                <CollaboratorAvatars\n                    collaborators={collaborators.filter(collaborator => String(collaborator.userID) !== currentUserID)}\n                    onClick={this.showCollaboratorList}\n                    containerAttributes={modalTracking.collaboratorAvatarsProps}\n                />\n            );\n        }\n\n        return avatarsContent;\n    }\n\n    renderUpgradeLinkDescription() {\n        const { trackingProps = {} } = this.props;\n        const { inviteCollabsEmailTracking = {} } = trackingProps;\n        const { upgradeLinkProps = {} } = inviteCollabsEmailTracking;\n\n        return (\n            <div className=\"upgrade-description\">\n                <UpgradeBadge type=\"warning\" />\n                <FormattedMessage\n                    values={{\n                        upgradeGetMoreAccessControlsLink: (\n                            <Link className=\"upgrade-link\" href=\"/upgrade\" {...upgradeLinkProps}>\n                                <FormattedMessage {...messages.upgradeGetMoreAccessControlsLink} />\n                            </Link>\n                        ),\n                    }}\n                    {...messages.upgradeGetMoreAccessControlsDescription}\n                />\n            </div>\n        );\n    }\n\n    renderInviteePermissionsDropdown() {\n        const { inviteePermissions, item, submitting, canInvite, trackingProps } = this.props;\n        const { type } = item;\n        const { inviteCollabTracking } = trackingProps;\n\n        return (\n            inviteePermissions && (\n                <InviteePermissionsMenu\n                    disabled={!canInvite || submitting}\n                    inviteePermissionsButtonProps={inviteCollabTracking.inviteePermissionsButtonProps}\n                    inviteePermissionLevel={this.state.inviteePermissionLevel}\n                    inviteePermissions={inviteePermissions}\n                    changeInviteePermissionLevel={this.handleInviteePermissionChange}\n                    itemType={type}\n                />\n            )\n        );\n    }\n\n    renderCollaboratorList() {\n        const { item, collaboratorsList, trackingProps } = this.props;\n        const { name, type } = item;\n        const { collaboratorListTracking } = trackingProps;\n        let listContent = null;\n\n        if (collaboratorsList) {\n            const { collaborators } = collaboratorsList;\n\n            listContent = (\n                <CollaboratorList\n                    itemName={name}\n                    itemType={type}\n                    onDoneClick={this.closeCollaboratorList}\n                    item={item}\n                    collaborators={collaborators}\n                    trackingProps={collaboratorListTracking}\n                />\n            );\n        }\n\n        return listContent;\n    }\n\n    render() {\n        // Shared link section props\n        const {\n            allShareRestrictionWarning,\n            changeSharedLinkAccessLevel,\n            createSharedLinkOnLoad,\n            changeSharedLinkPermissionLevel,\n            config,\n            displayInModal,\n            focusSharedLinkOnLoad,\n            getSharedLinkContacts,\n            getContactAvatarUrl,\n            intl,\n            isFetching,\n            item,\n            onAddLink,\n            onCopyError,\n            onCopyInit,\n            onCopySuccess,\n            onDismissTooltip = () => {},\n            onSettingsClick,\n            sendSharedLinkError,\n            sharedLink,\n            showEnterEmailsCallout = false,\n            showSharedLinkSettingsCallout = false,\n            submitting,\n            tooltips = {},\n            trackingProps,\n        } = this.props;\n        const { sharedLinkTracking, sharedLinkEmailTracking } = trackingProps;\n        const { isEmailLinkSectionExpanded, isInviteSectionExpanded, showCollaboratorList } = this.state;\n\n        // Only show the restriction warning on the main page of the USM where the email and share link option is available\n        const showShareRestrictionWarning =\n            !isEmailLinkSectionExpanded &&\n            !isInviteSectionExpanded &&\n            !showCollaboratorList &&\n            allShareRestrictionWarning;\n\n        return (\n            <div className={displayInModal ? '' : 'bdl-UnifiedShareForm'}>\n                <LoadingIndicatorWrapper isLoading={isFetching} hideContent>\n                    {showShareRestrictionWarning && allShareRestrictionWarning}\n\n                    {!isEmailLinkSectionExpanded && !showCollaboratorList && this.renderInviteSection()}\n\n                    {!isEmailLinkSectionExpanded && !isInviteSectionExpanded && !showCollaboratorList && (\n                        <SharedLinkSection\n                            addSharedLink={onAddLink}\n                            autofocusSharedLink={this.shouldAutoFocusSharedLink()}\n                            autoCreateSharedLink={createSharedLinkOnLoad}\n                            config={config}\n                            triggerCopyOnLoad={createSharedLinkOnLoad && focusSharedLinkOnLoad}\n                            changeSharedLinkAccessLevel={changeSharedLinkAccessLevel}\n                            changeSharedLinkPermissionLevel={changeSharedLinkPermissionLevel}\n                            intl={intl}\n                            item={item}\n                            itemType={item.type}\n                            onDismissTooltip={onDismissTooltip}\n                            onEmailSharedLinkClick={this.openEmailSharedLinkForm}\n                            onSettingsClick={onSettingsClick}\n                            onToggleSharedLink={this.onToggleSharedLink}\n                            onCopyInit={onCopyInit}\n                            onCopySuccess={onCopySuccess}\n                            onCopyError={onCopyError}\n                            sharedLink={sharedLink}\n                            showSharedLinkSettingsCallout={showSharedLinkSettingsCallout}\n                            submitting={submitting || isFetching}\n                            trackingProps={sharedLinkTracking}\n                            tooltips={tooltips}\n                        />\n                    )}\n\n                    {isEmailLinkSectionExpanded && !showCollaboratorList && (\n                        <EmailForm\n                            contactsFieldLabel={<FormattedMessage {...messages.sendSharedLinkFieldLabel} />}\n                            getContactAvatarUrl={getContactAvatarUrl}\n                            getContacts={getSharedLinkContacts}\n                            inlineNotice={{\n                                type: 'error',\n                                content: sendSharedLinkError,\n                            }}\n                            isContactsFieldEnabled\n                            isExpanded\n                            isExternalUserSelected={this.hasExternalContact(EMAIL_SHARED_LINK_CONTACTS_TYPE)}\n                            onPillCreate={this.handleEmailSharedLinkPillCreate}\n                            onRequestClose={this.closeEmailSharedLinkForm}\n                            onSubmit={this.handleSendSharedLink}\n                            showEnterEmailsCallout={showEnterEmailsCallout}\n                            submitting={submitting}\n                            selectedContacts={this.state.emailSharedLinkContacts}\n                            updateSelectedContacts={this.updateEmailSharedLinkContacts}\n                            {...sharedLinkEmailTracking}\n                        />\n                    )}\n                    {showCollaboratorList && this.renderCollaboratorList()}\n                </LoadingIndicatorWrapper>\n            </div>\n        );\n    }\n}\n\nexport { UnifiedShareForm as UnifiedShareFormBase };\nexport default injectIntl(UnifiedShareForm);\n"],"file":"UnifiedShareForm.js"}