{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Sidebar file properties component\n * @author Box\n */\nimport React from 'react';\nimport getProp from 'lodash/get';\nimport { injectIntl } from 'react-intl';\nimport ItemProperties from '../../features/item-details/ItemProperties';\nimport LoadingIndicatorWrapper from '../../components/loading-indicator/LoadingIndicatorWrapper';\nimport getFileSize from '../../utils/getFileSize';\nimport { INTERACTION_TARGET, DETAILS_TARGETS } from '../common/interactionTargets';\nimport withErrorHandling from './withErrorHandling';\nimport { PLACEHOLDER_USER } from '../../constants';\nvar SidebarFileProperties = function SidebarFileProperties(_ref) {\n  var file = _ref.file,\n    onDescriptionChange = _ref.onDescriptionChange,\n    hasRetentionPolicy = _ref.hasRetentionPolicy,\n    retentionPolicy = _ref.retentionPolicy,\n    onRetentionPolicyExtendClick = _ref.onRetentionPolicyExtendClick,\n    isLoading = _ref.isLoading,\n    intl = _ref.intl;\n  return React.createElement(LoadingIndicatorWrapper, {\n    isLoading: isLoading\n  }, React.createElement(ItemProperties, {\n    createdAt: file.content_created_at,\n    description: file.description,\n    descriptionTextareaProps: _defineProperty({}, INTERACTION_TARGET, DETAILS_TARGETS.DESCRIPTION),\n    modifiedAt: file.content_modified_at,\n    onDescriptionChange: getProp(file, 'permissions.can_rename') ? onDescriptionChange : undefined,\n    owner: getProp(file, 'owned_by.name'),\n    retentionPolicyProps: hasRetentionPolicy ? _objectSpread({}, retentionPolicy, {\n      openModal: onRetentionPolicyExtendClick\n    }) : {},\n    size: getFileSize(file.size, intl.locale) // use uploader_display_name if uploaded anonymously\n    ,\n\n    uploader: getProp(file, 'created_by.id') === PLACEHOLDER_USER.id ? getProp(file, 'uploader_display_name') : getProp(file, 'created_by.name')\n  }));\n};\nexport { SidebarFileProperties as SidebarFilePropertiesComponent };\nexport default injectIntl(withErrorHandling(SidebarFileProperties));","map":{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarFileProperties.js"],"names":["React","getProp","injectIntl","ItemProperties","LoadingIndicatorWrapper","getFileSize","INTERACTION_TARGET","DETAILS_TARGETS","withErrorHandling","PLACEHOLDER_USER","SidebarFileProperties","file","onDescriptionChange","hasRetentionPolicy","retentionPolicy","onRetentionPolicyExtendClick","isLoading","intl","content_created_at","description","DESCRIPTION","content_modified_at","undefined","openModal","size","locale","id","SidebarFilePropertiesComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,uBAAP,MAAoC,4DAApC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,8BAApD;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAGA,SAASC,gBAAT,QAAiC,iBAAjC;AAaA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,IAAA,EAAA;EAAA,IAC1BC,IAD0B,GAAA,IAAA,CAC1BA,IAD0B;IAE1BC,mBAF0B,GAAA,IAAA,CAE1BA,mBAF0B;IAG1BC,kBAH0B,GAAA,IAAA,CAG1BA,kBAH0B;IAI1BC,eAJ0B,GAAA,IAAA,CAI1BA,eAJ0B;IAK1BC,4BAL0B,GAAA,IAAA,CAK1BA,4BAL0B;IAM1BC,SAN0B,GAAA,IAAA,CAM1BA,SAN0B;IAO1BC,IAP0B,GAAA,IAAA,CAO1BA,IAP0B;EAAA,OAS1B,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAA;IAAyB,SAAS,EAAED;EAApC,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,cAAD,EAAA;IACI,SAAS,EAAEL,IAAI,CAACO,kBADpB;IAEI,WAAW,EAAEP,IAAI,CAACQ,WAFtB;IAGI,wBAAwB,EAAA,eAAA,CAAA,CAAA,CAAA,EACnBb,kBADmB,EACEC,eAAe,CAACa,WADlB,CAH5B;IAMI,UAAU,EAAET,IAAI,CAACU,mBANrB;IAOI,mBAAmB,EAAEpB,OAAO,CAACU,IAAD,EAAO,wBAAP,CAAPV,GAA0CW,mBAA1CX,GAAgEqB,SAPzF;IAQI,KAAK,EAAErB,OAAO,CAACU,IAAD,EAAO,eAAP,CARlB;IASI,oBAAoB,EAChBE,kBAAkB,GAAA,aAAA,CAAA,CAAA,CAAA,EAELC,eAFK,EAAA;MAGRS,SAAS,EAAER;IAHH,CAAA,CAAA,GAKZ,CAAA,CAfd;IAiBI,IAAI,EAAEV,WAAW,CAACM,IAAI,CAACa,IAAN,EAAYP,IAAI,CAACQ,MAAjB,CAjBrB,CAkBI;IAAA;;IACA,QAAQ,EACJxB,OAAO,CAACU,IAAD,EAAO,eAAP,CAAPV,KAAmCQ,gBAAgB,CAACiB,EAApDzB,GACMA,OAAO,CAACU,IAAD,EAAO,uBAAP,CADbV,GAEMA,OAAO,CAACU,IAAD,EAAO,iBAAP;EAtBrB,CAAA,CADJ,CAT0B;AAAA,CAA9B;AAsCA,SAASD,qBAAqB,IAAIiB,8BAAlC;AACA,eAAezB,UAAU,CAACM,iBAAiB,CAACE,qBAAD,CAAlB,CAAzB","sourcesContent":["/**\n * @flow\n * @file Sidebar file properties component\n * @author Box\n */\n\nimport React from 'react';\nimport getProp from 'lodash/get';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport ItemProperties from '../../features/item-details/ItemProperties';\nimport LoadingIndicatorWrapper from '../../components/loading-indicator/LoadingIndicatorWrapper';\nimport getFileSize from '../../utils/getFileSize';\nimport { INTERACTION_TARGET, DETAILS_TARGETS } from '../common/interactionTargets';\nimport withErrorHandling from './withErrorHandling';\nimport type { ClassificationInfo } from './flowTypes';\nimport type { BoxItem } from '../../common/types/core';\nimport { PLACEHOLDER_USER } from '../../constants';\n\ntype Props = {\n    classification?: ClassificationInfo,\n    file: BoxItem,\n    hasClassification: boolean,\n    hasRetentionPolicy: boolean,\n    isLoading: boolean,\n    onDescriptionChange: Function,\n    onRetentionPolicyExtendClick?: Function,\n    retentionPolicy?: Object,\n} & InjectIntlProvidedProps;\n\nconst SidebarFileProperties = ({\n    file,\n    onDescriptionChange,\n    hasRetentionPolicy,\n    retentionPolicy,\n    onRetentionPolicyExtendClick,\n    isLoading,\n    intl,\n}: Props) => (\n    <LoadingIndicatorWrapper isLoading={isLoading}>\n        <ItemProperties\n            createdAt={file.content_created_at}\n            description={file.description}\n            descriptionTextareaProps={{\n                [INTERACTION_TARGET]: DETAILS_TARGETS.DESCRIPTION,\n            }}\n            modifiedAt={file.content_modified_at}\n            onDescriptionChange={getProp(file, 'permissions.can_rename') ? onDescriptionChange : undefined}\n            owner={getProp(file, 'owned_by.name')}\n            retentionPolicyProps={\n                hasRetentionPolicy\n                    ? {\n                          ...retentionPolicy,\n                          openModal: onRetentionPolicyExtendClick,\n                      }\n                    : {}\n            }\n            size={getFileSize(file.size, intl.locale)}\n            // use uploader_display_name if uploaded anonymously\n            uploader={\n                getProp(file, 'created_by.id') === PLACEHOLDER_USER.id\n                    ? getProp(file, 'uploader_display_name')\n                    : getProp(file, 'created_by.name')\n            }\n        />\n    </LoadingIndicatorWrapper>\n);\n\nexport { SidebarFileProperties as SidebarFilePropertiesComponent };\nexport default injectIntl(withErrorHandling(SidebarFileProperties));\n"]},"metadata":{},"sourceType":"module"}