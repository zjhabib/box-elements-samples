{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport InlineNotice from '../../components/inline-notice';\nimport messages from './messages';\nvar FILE = 'file';\nvar FOLDER = 'folder';\nvar WEBLINK = 'web_link';\nvar ItemExpirationNotice = function ItemExpirationNotice(_ref) {\n  var expiration = _ref.expiration,\n    itemType = _ref.itemType;\n  var messageID = '';\n  switch (itemType) {\n    case FILE:\n      messageID = 'fileExpiration';\n      break;\n    case FOLDER:\n      messageID = 'folderExpiration';\n      break;\n    case WEBLINK:\n      messageID = 'bookmarkExpiration';\n      break;\n    // no default\n  }\n\n  return React.createElement(InlineNotice, null, React.createElement(FormattedMessage, _extends({}, messages[messageID], {\n    values: {\n      expiration: expiration\n    }\n  })));\n};\nItemExpirationNotice.propTypes = {\n  /** a localized, human-readable string/node representing the expiration date */\n  expiration: PropTypes.node.isRequired,\n  /** the type of the item */\n  itemType: PropTypes.oneOf([FILE, FOLDER, WEBLINK]).isRequired\n};\nexport default ItemExpirationNotice;","map":{"version":3,"sources":["../../../src/features/item-details/ItemExpirationNotice.js"],"names":["React","PropTypes","FormattedMessage","InlineNotice","messages","FILE","FOLDER","WEBLINK","ItemExpirationNotice","expiration","itemType","messageID","propTypes","node","isRequired","oneOf"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,IAAI,GAAG,MAAb;AACA,IAAMC,MAAM,GAAG,QAAf;AACA,IAAMC,OAAO,GAAG,UAAhB;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,IAAA,EAA8B;EAAA,IAA3BC,UAA2B,GAAA,IAAA,CAA3BA,UAA2B;IAAfC,QAAe,GAAA,IAAA,CAAfA,QAAe;EACvD,IAAIC,SAAS,GAAG,EAAhB;EACA,QAAQD,QAAR;IACI,KAAKL,IAAL;MACIM,SAAS,GAAG,gBAAZA;MACA;IACJ,KAAKL,MAAL;MACIK,SAAS,GAAG,kBAAZA;MACA;IACJ,KAAKJ,OAAL;MACII,SAAS,GAAG,oBAAZA;MACA;IACJ;EAVJ;;EAaA,OACI,KAAA,CAAA,aAAA,CAAC,YAAD,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAsBP,QAAQ,CAACO,SAAD,CAA9B,EAAA;IAA2C,MAAM,EAAE;MAAEF,UAAU,EAAVA;IAAF;EAAnD,CAAA,CAAA,CADJ,CADJ;AAKH,CApBD;AAsBAD,oBAAoB,CAACI,SAArBJ,GAAiC;EAC7B;EACAC,UAAU,EAAER,SAAS,CAACY,IAAVZ,CAAea,UAFE;EAG7B;EACAJ,QAAQ,EAAET,SAAS,CAACc,KAAVd,CAAgB,CAACI,IAAD,EAAOC,MAAP,EAAeC,OAAf,CAAhBN,CAAAA,CAAyCa;AAJtB,CAAjCN;AAOA,eAAeA,oBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport InlineNotice from '../../components/inline-notice';\n\nimport messages from './messages';\n\nconst FILE = 'file';\nconst FOLDER = 'folder';\nconst WEBLINK = 'web_link';\n\nconst ItemExpirationNotice = ({ expiration, itemType }) => {\n    let messageID = '';\n    switch (itemType) {\n        case FILE:\n            messageID = 'fileExpiration';\n            break;\n        case FOLDER:\n            messageID = 'folderExpiration';\n            break;\n        case WEBLINK:\n            messageID = 'bookmarkExpiration';\n            break;\n        // no default\n    }\n\n    return (\n        <InlineNotice>\n            <FormattedMessage {...messages[messageID]} values={{ expiration }} />\n        </InlineNotice>\n    );\n};\n\nItemExpirationNotice.propTypes = {\n    /** a localized, human-readable string/node representing the expiration date */\n    expiration: PropTypes.node.isRequired,\n    /** the type of the item */\n    itemType: PropTypes.oneOf([FILE, FOLDER, WEBLINK]).isRequired,\n};\n\nexport default ItemExpirationNotice;\n"]},"metadata":{},"sourceType":"module"}