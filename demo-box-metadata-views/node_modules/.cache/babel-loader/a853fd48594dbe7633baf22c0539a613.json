{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport PlainButton from '../../../../components/plain-button';\nimport { ButtonType } from '../../../../components/button';\nvar AnnotationActivityLink = function AnnotationActivityLink(_ref) {\n  var id = _ref.id,\n    _ref$isDisabled = _ref.isDisabled,\n    isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,\n    message = _ref.message,\n    _ref$onClick = _ref.onClick,\n    onClick = _ref$onClick === void 0 ? noop : _ref$onClick,\n    rest = _objectWithoutProperties(_ref, [\"id\", \"isDisabled\", \"message\", \"onClick\"]);\n  var handleClick = function handleClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.currentTarget.focus(); // Buttons do not receive focus in Firefox and Safari on MacOS\n\n    onClick(id);\n  };\n  var handleMouseDown = function handleMouseDown(event) {\n    if (isDisabled) {\n      return;\n    } // Prevents document event handlers from executing because box-annotations relies on\n    // detecting mouse events on the document outside of annotation targets to determine when to\n    // deselect annotations. This link also may represent that annotation target in the sidebar.\n\n    event.nativeEvent.stopImmediatePropagation();\n  };\n  return React.createElement(PlainButton, _extends({\n    className: \"bcs-AnnotationActivity-link\",\n    isDisabled: isDisabled,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    type: ButtonType.BUTTON\n  }, rest), React.createElement(FormattedMessage, message));\n};\nexport default AnnotationActivityLink;","map":{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/annotations/AnnotationActivityLink.tsx"],"names":["React","noop","FormattedMessage","PlainButton","ButtonType","AnnotationActivityLink","id","isDisabled","message","onClick","rest","handleClick","event","preventDefault","stopPropagation","currentTarget","focus","handleMouseDown","nativeEvent","stopImmediatePropagation","BUTTON"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,gBAAT,QAAoD,YAApD;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AASA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAA,IAAA,EAMiB;EAAA,IAL5CC,EAK4C,GAAA,IAAA,CAL5CA,EAK4C;IAAA,eAAA,GAAA,IAAA,CAJ5CC,UAI4C;IAJ5CA,UAI4C,GAAA,eAAA,KAAA,KAAA,CAAA,GAJ/B,KAI+B,GAAA,eAAA;IAH5CC,OAG4C,GAAA,IAAA,CAH5CA,OAG4C;IAAA,YAAA,GAAA,IAAA,CAF5CC,OAE4C;IAF5CA,OAE4C,GAAA,YAAA,KAAA,KAAA,CAAA,GAFlCR,IAEkC,GAAA,YAAA;IADzCS,IACyC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,IAAA,EAAA,YAAA,EAAA,SAAA,EAAA,SAAA,CAAA,CAAA;EAC5C,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAoD;IACpEA,KAAK,CAACC,cAAND,CAAAA,CAAAA;IACAA,KAAK,CAACE,eAANF,CAAAA,CAAAA;IACAA,KAAK,CAACG,aAANH,CAAoBI,KAApBJ,CAAAA,CAAAA,CAHoE,CAGvC;;IAE7BH,OAAO,CAACH,EAAD,CAAPG;EACH,CAND;EAQA,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD,EAAgD;IACpE,IAAIL,UAAJ,EAAgB;MACZ;IACH,CAHmE,CAKpE;IACA;IACA;;IACAK,KAAK,CAACM,WAANN,CAAkBO,wBAAlBP,CAAAA,CAAAA;EACH,CATD;EAWA,OACI,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA,QAAA,CAAA;IACI,SAAS,EAAC,6BADd;IAEI,UAAU,EAAEL,UAFhB;IAGI,OAAO,EAAEI,WAHb;IAII,WAAW,EAAEM,eAJjB;IAKI,IAAI,EAAEb,UAAU,CAACgB;EALrB,CAAA,EAMQV,IANR,CAAA,EAQI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBF,OAAtB,CARJ,CADJ;AAYH,CAtCD;AAwCA,eAAeH,sBAAf","sourcesContent":["import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { FormattedMessage, MessageDescriptor } from 'react-intl';\nimport PlainButton from '../../../../components/plain-button';\nimport { ButtonType } from '../../../../components/button';\n\nexport interface AnnotationActivityLinkProps {\n    id: string;\n    isDisabled: boolean;\n    message: MessageDescriptor;\n    onClick: (id: string) => void;\n}\n\nconst AnnotationActivityLink = ({\n    id,\n    isDisabled = false,\n    message,\n    onClick = noop,\n    ...rest\n}: AnnotationActivityLinkProps): JSX.Element => {\n    const handleClick = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.currentTarget.focus(); // Buttons do not receive focus in Firefox and Safari on MacOS\n\n        onClick(id);\n    };\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (isDisabled) {\n            return;\n        }\n\n        // Prevents document event handlers from executing because box-annotations relies on\n        // detecting mouse events on the document outside of annotation targets to determine when to\n        // deselect annotations. This link also may represent that annotation target in the sidebar.\n        event.nativeEvent.stopImmediatePropagation();\n    };\n\n    return (\n        <PlainButton\n            className=\"bcs-AnnotationActivity-link\"\n            isDisabled={isDisabled}\n            onClick={handleClick}\n            onMouseDown={handleMouseDown}\n            type={ButtonType.BUTTON}\n            {...rest}\n        >\n            <FormattedMessage {...message} />\n        </PlainButton>\n    );\n};\n\nexport default AnnotationActivityLink;\n"]},"metadata":{},"sourceType":"module"}