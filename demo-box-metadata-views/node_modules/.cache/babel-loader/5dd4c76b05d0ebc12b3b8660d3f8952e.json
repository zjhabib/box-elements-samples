{"ast":null,"code":"/**\n * \n * @file Details sidebar component\n * @author Box\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport uniqueId from 'lodash/uniqueId';\nimport messages from '../../common/messages';\nimport { SKILLS_TARGETS } from '../../common/interactionTargets';\nimport SidebarSection from '../SidebarSection';\nimport { isValidSkillsCard } from './skillUtils';\nimport SidebarSkillsCard from './SidebarSkillsCard';\nimport { SKILLS_TRANSCRIPT, SKILLS_KEYWORD, SKILLS_TIMELINE, SKILLS_FACE, SKILLS_STATUS, SKILLS_ERROR_UNKNOWN } from '../../../constants';\n\n/**\n * Get ths skill interaction target based on card type\n *\n * @param {Object} card - skill card\n * @return {string} - interaction target\n */\nvar getCardInteractionTarget = function getCardInteractionTarget(_ref) {\n  var skill_card_type = _ref.skill_card_type;\n  switch (skill_card_type) {\n    case SKILLS_KEYWORD:\n      return SKILLS_TARGETS.KEYWORDS.CARD;\n    case SKILLS_FACE:\n    case SKILLS_TIMELINE:\n      return SKILLS_TARGETS.FACES.CARD;\n    case SKILLS_TRANSCRIPT:\n      return SKILLS_TARGETS.TRANSCRIPTS.CARD;\n    default:\n      return '';\n  }\n};\n/**\n * Get ths string skill title based on card title\n *\n * @param {Object} card - skill card\n * @return {string} - skill title\n */\n\nvar getCardTitle = function getCardTitle(_ref2) {\n  var skill_card_type = _ref2.skill_card_type,\n    _ref2$skill_card_titl = _ref2.skill_card_title,\n    skill_card_title = _ref2$skill_card_titl === void 0 ? {} : _ref2$skill_card_titl;\n  var code = skill_card_title.code,\n    message = skill_card_title.message;\n  var defaultKey = \"\".concat(skill_card_type, \"Skill\");\n  var defaultMessage = messages[defaultKey] || messages.defaultSkill;\n  switch (code) {\n    case 'skills_faces':\n      return React.createElement(FormattedMessage, messages.faceSkill);\n    case 'skills_transcript':\n      return React.createElement(FormattedMessage, messages.transcriptSkill);\n    case 'skills_topics':\n      return React.createElement(FormattedMessage, messages.topicsSkill);\n    case 'skills_status':\n      return React.createElement(FormattedMessage, messages.statusSkill);\n    case 'skills_error':\n      return React.createElement(FormattedMessage, messages.error);\n    default:\n      return message || React.createElement(FormattedMessage, defaultMessage);\n  }\n};\nvar SidebarSkills = function SidebarSkills(_ref3) {\n  var file = _ref3.file,\n    cards = _ref3.cards,\n    errors = _ref3.errors,\n    getViewer = _ref3.getViewer,\n    _onSkillChange = _ref3.onSkillChange;\n  var _file$permissions = file.permissions,\n    permissions = _file$permissions === void 0 ? {} : _file$permissions;\n  var isSkillEditable = !!permissions.can_upload;\n  return cards.map(function (card, index) {\n    if (card.error && !card.status) {\n      card.skill_card_type = SKILLS_STATUS;\n      card.status = {\n        code: SKILLS_ERROR_UNKNOWN\n      };\n      delete card.error;\n    }\n    var id = card.id;\n    var cardId = id || uniqueId('card_');\n    var isValid = isValidSkillsCard(file, card);\n    var interactionTarget = getCardInteractionTarget(card);\n    var title = getCardTitle(card);\n    var hasEntries = Array.isArray(card.entries) ? card.entries.length > 0 : isValid;\n    return isValid ? React.createElement(SidebarSection, {\n      key: cardId,\n      interactionTarget: interactionTarget,\n      isOpen: hasEntries,\n      title: title\n    }, React.createElement(SidebarSkillsCard, {\n      card: card,\n      cards: cards,\n      getViewer: getViewer,\n      hasError: !!errors[index],\n      isEditable: isSkillEditable,\n      onSkillChange: function onSkillChange() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return _onSkillChange.apply(void 0, [index].concat(args));\n      }\n    })) : null;\n  });\n};\nexport default SidebarSkills;","map":{"version":3,"sources":["../../../../src/elements/content-sidebar/skills/SidebarSkills.js"],"names":["React","FormattedMessage","uniqueId","messages","SKILLS_TARGETS","SidebarSection","isValidSkillsCard","SidebarSkillsCard","SKILLS_TRANSCRIPT","SKILLS_KEYWORD","SKILLS_TIMELINE","SKILLS_FACE","SKILLS_STATUS","SKILLS_ERROR_UNKNOWN","getCardInteractionTarget","skill_card_type","KEYWORDS","CARD","FACES","TRANSCRIPTS","getCardTitle","skill_card_title","code","message","defaultKey","defaultMessage","defaultSkill","faceSkill","transcriptSkill","topicsSkill","statusSkill","error","SidebarSkills","file","cards","errors","getViewer","onSkillChange","permissions","isSkillEditable","can_upload","map","card","index","status","id","cardId","isValid","interactionTarget","title","hasEntries","Array","isArray","entries","length","args"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Details sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport uniqueId from 'lodash/uniqueId';\nimport messages from '../../common/messages';\nimport { SKILLS_TARGETS } from '../../common/interactionTargets';\nimport SidebarSection from '../SidebarSection';\nimport { isValidSkillsCard } from './skillUtils';\nimport SidebarSkillsCard from './SidebarSkillsCard';\nimport {\n    SKILLS_TRANSCRIPT,\n    SKILLS_KEYWORD,\n    SKILLS_TIMELINE,\n    SKILLS_FACE,\n    SKILLS_STATUS,\n    SKILLS_ERROR_UNKNOWN,\n} from '../../../constants';\nimport type { SkillCard, SkillCardLocalizableType } from '../../../common/types/skills';\nimport type { NumberBooleanMap, BoxItem } from '../../../common/types/core';\n\ntype Props = {\n    cards: Array<SkillCard>,\n    errors: NumberBooleanMap,\n    file: BoxItem,\n    getViewer: Function,\n    onSkillChange: Function,\n};\n\n/**\n * Get ths skill interaction target based on card type\n *\n * @param {Object} card - skill card\n * @return {string} - interaction target\n */\nconst getCardInteractionTarget = ({ skill_card_type }: SkillCard): string => {\n    switch (skill_card_type) {\n        case SKILLS_KEYWORD:\n            return SKILLS_TARGETS.KEYWORDS.CARD;\n        case SKILLS_FACE:\n        case SKILLS_TIMELINE:\n            return SKILLS_TARGETS.FACES.CARD;\n        case SKILLS_TRANSCRIPT:\n            return SKILLS_TARGETS.TRANSCRIPTS.CARD;\n        default:\n            return '';\n    }\n};\n\n/**\n * Get ths string skill title based on card title\n *\n * @param {Object} card - skill card\n * @return {string} - skill title\n */\nconst getCardTitle = ({ skill_card_type, skill_card_title = {} }: SkillCard): string | React.Node => {\n    const { code, message }: SkillCardLocalizableType = skill_card_title;\n    const defaultKey = `${skill_card_type}Skill`;\n    const defaultMessage = messages[defaultKey] || messages.defaultSkill;\n\n    switch (code) {\n        case 'skills_faces':\n            return <FormattedMessage {...messages.faceSkill} />;\n        case 'skills_transcript':\n            return <FormattedMessage {...messages.transcriptSkill} />;\n        case 'skills_topics':\n            return <FormattedMessage {...messages.topicsSkill} />;\n        case 'skills_status':\n            return <FormattedMessage {...messages.statusSkill} />;\n        case 'skills_error':\n            return <FormattedMessage {...messages.error} />;\n        default:\n            return message || <FormattedMessage {...defaultMessage} />;\n    }\n};\n\nconst SidebarSkills = ({ file, cards, errors, getViewer, onSkillChange }: Props): Array<React.Node> => {\n    const { permissions = {} }: BoxItem = file;\n    const isSkillEditable = !!permissions.can_upload;\n\n    return cards.map((card: SkillCard, index: number) => {\n        if (card.error && !card.status) {\n            card.skill_card_type = SKILLS_STATUS;\n            card.status = {\n                code: SKILLS_ERROR_UNKNOWN,\n            };\n            delete card.error;\n        }\n\n        const { id } = card;\n        const cardId = id || uniqueId('card_');\n        const isValid = isValidSkillsCard(file, card);\n        const interactionTarget = getCardInteractionTarget(card);\n        const title = getCardTitle(card);\n        const hasEntries = Array.isArray(card.entries) ? card.entries.length > 0 : isValid;\n\n        return isValid ? (\n            <SidebarSection key={cardId} interactionTarget={interactionTarget} isOpen={hasEntries} title={title}>\n                <SidebarSkillsCard\n                    card={card}\n                    cards={cards}\n                    getViewer={getViewer}\n                    hasError={!!errors[index]}\n                    isEditable={isSkillEditable}\n                    onSkillChange={(...args) => onSkillChange(index, ...args)}\n                />\n            </SidebarSection>\n        ) : null;\n    });\n};\n\nexport default SidebarSkills;\n"]},"metadata":{},"sourceType":"module"}