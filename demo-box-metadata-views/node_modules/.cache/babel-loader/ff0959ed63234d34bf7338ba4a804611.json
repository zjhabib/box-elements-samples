{"ast":null,"code":"var _positions;\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\nimport TetherComponent from 'react-tether';\nimport TetherPosition from '../../common/tether-positions';\nimport IconClose from '../../icon/fill/X16';\nimport PlainButton from '../plain-button';\nimport './Tooltip.scss';\nexport var TooltipTheme;\n(function (TooltipTheme) {\n  TooltipTheme[\"CALLOUT\"] = \"callout\";\n  TooltipTheme[\"DEFAULT\"] = \"default\";\n  TooltipTheme[\"ERROR\"] = \"error\";\n})(TooltipTheme || (TooltipTheme = {}));\nexport var TooltipPosition;\n(function (TooltipPosition) {\n  TooltipPosition[\"BOTTOM_CENTER\"] = \"bottom-center\";\n  TooltipPosition[\"BOTTOM_LEFT\"] = \"bottom-left\";\n  TooltipPosition[\"BOTTOM_RIGHT\"] = \"bottom-right\";\n  TooltipPosition[\"MIDDLE_LEFT\"] = \"middle-left\";\n  TooltipPosition[\"MIDDLE_RIGHT\"] = \"middle-right\";\n  TooltipPosition[\"TOP_CENTER\"] = \"top-center\";\n  TooltipPosition[\"TOP_LEFT\"] = \"top-left\";\n  TooltipPosition[\"TOP_RIGHT\"] = \"top-right\";\n})(TooltipPosition || (TooltipPosition = {}));\nvar positions = (_positions = {}, _defineProperty(_positions, TooltipPosition.BOTTOM_CENTER, {\n  attachment: TetherPosition.TOP_CENTER,\n  targetAttachment: TetherPosition.BOTTOM_CENTER\n}), _defineProperty(_positions, TooltipPosition.BOTTOM_LEFT, {\n  attachment: TetherPosition.TOP_RIGHT,\n  targetAttachment: TetherPosition.BOTTOM_RIGHT\n}), _defineProperty(_positions, TooltipPosition.BOTTOM_RIGHT, {\n  attachment: TetherPosition.TOP_LEFT,\n  targetAttachment: TetherPosition.BOTTOM_LEFT\n}), _defineProperty(_positions, TooltipPosition.MIDDLE_LEFT, {\n  attachment: TetherPosition.MIDDLE_RIGHT,\n  targetAttachment: TetherPosition.MIDDLE_LEFT\n}), _defineProperty(_positions, TooltipPosition.MIDDLE_RIGHT, {\n  attachment: TetherPosition.MIDDLE_LEFT,\n  targetAttachment: TetherPosition.MIDDLE_RIGHT\n}), _defineProperty(_positions, TooltipPosition.TOP_CENTER, {\n  attachment: TetherPosition.BOTTOM_CENTER,\n  targetAttachment: TetherPosition.TOP_CENTER\n}), _defineProperty(_positions, TooltipPosition.TOP_LEFT, {\n  attachment: TetherPosition.BOTTOM_RIGHT,\n  targetAttachment: TetherPosition.TOP_RIGHT\n}), _defineProperty(_positions, TooltipPosition.TOP_RIGHT, {\n  attachment: TetherPosition.BOTTOM_LEFT,\n  targetAttachment: TetherPosition.TOP_LEFT\n}), _positions);\nvar Tooltip = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tooltip, _React$Component);\n  function Tooltip(props) {\n    var _this;\n    _classCallCheck(this, Tooltip);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tooltip).call(this, props));\n    _defineProperty(_assertThisInitialized(_this), \"tooltipID\", uniqueId('tooltip'));\n    _defineProperty(_assertThisInitialized(_this), \"tetherRef\", React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"position\", function () {\n      if (_this.tetherRef.current && _this.isShown()) {\n        _this.tetherRef.current.position();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"closeTooltip\", function () {\n      var onDismiss = _this.props.onDismiss;\n      _this.setState({\n        wasClosedByUser: true\n      });\n      if (onDismiss) {\n        onDismiss();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"fireChildEvent\", function (type, event) {\n      var children = _this.props.children;\n      var handler = children.props[type];\n      if (handler) {\n        handler(event);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleTooltipEvent\", function (event) {\n      event.stopPropagation();\n      event.nativeEvent.stopImmediatePropagation();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseEnter\", function (event) {\n      _this.setState({\n        isShown: true\n      });\n      _this.fireChildEvent('onMouseEnter', event);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseLeave\", function (event) {\n      _this.setState({\n        isShown: false\n      });\n      _this.fireChildEvent('onMouseLeave', event);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleFocus\", function (event) {\n      _this.setState({\n        isShown: true\n      });\n      _this.fireChildEvent('onFocus', event);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleBlur\", function (event) {\n      _this.setState({\n        isShown: false\n      });\n      _this.fireChildEvent('onBlur', event);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (event) {\n      if (event.key === 'Escape') {\n        _this.setState({\n          isShown: false\n        });\n      }\n      _this.fireChildEvent('onKeyDown', event);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"isControlled\", function () {\n      var isShownProp = _this.props.isShown;\n      return typeof isShownProp !== 'undefined';\n    });\n    _defineProperty(_assertThisInitialized(_this), \"isShown\", function () {\n      var isShownProp = _this.props.isShown;\n      var isControlled = _this.isControlled();\n      var isShown = isControlled ? isShownProp : _this.state.isShown;\n      var showTooltip = isShown && !_this.state.wasClosedByUser && _this.state.hasRendered;\n      return showTooltip;\n    });\n    _this.state = {\n      isShown: !!props.isShown,\n      hasRendered: false,\n      wasClosedByUser: false\n    };\n    return _this;\n  }\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        hasRendered: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        bodyElement = _this$props.bodyElement,\n        children = _this$props.children,\n        className = _this$props.className,\n        constrainToScrollParent = _this$props.constrainToScrollParent,\n        constrainToWindow = _this$props.constrainToWindow,\n        isDisabled = _this$props.isDisabled,\n        _this$props$isTabbabl = _this$props.isTabbable,\n        isTabbable = _this$props$isTabbabl === void 0 ? true : _this$props$isTabbabl,\n        offset = _this$props.offset,\n        _this$props$position = _this$props.position,\n        position = _this$props$position === void 0 ? TooltipPosition.TOP_CENTER : _this$props$position,\n        showCloseButton = _this$props.showCloseButton,\n        stopBubble = _this$props.stopBubble,\n        text = _this$props.text,\n        theme = _this$props.theme; // If the tooltip is disabled just render the children\n\n      if (isDisabled) {\n        return React.Children.only(children);\n      }\n      var isControlled = this.isControlled();\n      var showTooltip = this.isShown();\n      var withCloseButton = showCloseButton && isControlled;\n      var tetherPosition = typeof position === 'string' ? positions[position] : position;\n      var constraints = [];\n      var componentProps = {};\n      if (constrainToScrollParent) {\n        constraints.push({\n          to: 'scrollParent',\n          attachment: 'together'\n        });\n      }\n      if (constrainToWindow) {\n        constraints.push({\n          to: 'window',\n          attachment: 'together'\n        });\n      }\n      if (showTooltip) {\n        componentProps['aria-describedby'] = this.tooltipID;\n        if (theme === TooltipTheme.ERROR) {\n          componentProps['aria-errormessage'] = this.tooltipID;\n        }\n      }\n      if (!isControlled) {\n        componentProps.onBlur = this.handleBlur;\n        componentProps.onFocus = this.handleFocus;\n        componentProps.onKeyDown = this.handleKeyDown;\n        componentProps.onMouseEnter = this.handleMouseEnter;\n        componentProps.onMouseLeave = this.handleMouseLeave;\n        if (isTabbable) {\n          componentProps.tabIndex = '0';\n        }\n      }\n      var bodyEl = bodyElement instanceof HTMLElement ? bodyElement : document.body;\n      var classes = classNames('tooltip', 'bdl-Tooltip', className, {\n        'is-callout': theme === TooltipTheme.CALLOUT,\n        'is-error': theme === TooltipTheme.ERROR,\n        'with-close-button': withCloseButton\n      });\n      var tetherProps = {\n        attachment: tetherPosition.attachment,\n        bodyElement: bodyEl,\n        classPrefix: 'tooltip',\n        constraints: constraints,\n        enabled: showTooltip,\n        targetAttachment: tetherPosition.targetAttachment\n      };\n      if (offset) {\n        tetherProps.offset = offset;\n      }\n      var tooltipInner = React.createElement(React.Fragment, null, text, withCloseButton && React.createElement(PlainButton, {\n        className: \"tooltip-close-button\",\n        onClick: this.closeTooltip\n      }, React.createElement(IconClose, {\n        className: \"bdl-Tooltip-iconClose\",\n        width: 14,\n        height: 14\n      })));\n      var tooltip = stopBubble ? React.createElement(\"div\", {\n        className: classes,\n        id: this.tooltipID,\n        role: \"presentation\",\n        onClick: this.handleTooltipEvent,\n        onContextMenu: this.handleTooltipEvent,\n        onKeyPress: this.handleTooltipEvent\n      }, React.createElement(\"div\", {\n        role: \"tooltip\",\n        \"aria-live\": \"polite\"\n      }, tooltipInner)) : React.createElement(\"div\", {\n        className: classes,\n        id: this.tooltipID,\n        role: \"tooltip\",\n        \"aria-live\": \"polite\"\n      }, tooltipInner);\n      return React.createElement(TetherComponent, _extends({\n        ref: this.tetherRef\n      }, tetherProps), React.cloneElement(React.Children.only(children), componentProps), showTooltip && tooltip);\n    }\n  }]);\n  return Tooltip;\n}(React.Component);\n_defineProperty(Tooltip, \"defaultProps\", {\n  constrainToScrollParent: false,\n  constrainToWindow: true,\n  isDisabled: false,\n  position: TooltipPosition.TOP_CENTER,\n  theme: TooltipTheme.DEFAULT\n});\nexport default Tooltip;","map":{"version":3,"sources":["../../../src/components/tooltip/Tooltip.tsx"],"names":["React","classNames","uniqueId","TetherComponent","TetherPosition","IconClose","PlainButton","TooltipTheme","TooltipPosition","positions","BOTTOM_CENTER","attachment","TOP_CENTER","targetAttachment","BOTTOM_LEFT","TOP_RIGHT","BOTTOM_RIGHT","TOP_LEFT","MIDDLE_LEFT","MIDDLE_RIGHT","Tooltip","Component","constrainToScrollParent","constrainToWindow","isDisabled","position","theme","DEFAULT","props","state","isShown","hasRendered","wasClosedByUser","setState","createRef","tetherRef","current","onDismiss","type","event","children","handler","stopPropagation","nativeEvent","stopImmediatePropagation","fireChildEvent","key","isShownProp","isControlled","showTooltip","bodyElement","className","isTabbable","offset","showCloseButton","stopBubble","text","Children","only","withCloseButton","tetherPosition","constraints","componentProps","push","to","tooltipID","ERROR","onBlur","handleBlur","onFocus","handleFocus","onKeyDown","handleKeyDown","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","tabIndex","bodyEl","HTMLElement","document","body","classes","CALLOUT","tetherProps","classPrefix","enabled","tooltipInner","closeTooltip","tooltip","handleTooltipEvent","cloneElement"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\nimport TetherComponent from 'react-tether';\n\nimport TetherPosition from '../../common/tether-positions';\nimport IconClose from '../../icon/fill/X16';\nimport PlainButton from '../plain-button';\n\nimport './Tooltip.scss';\n\nexport enum TooltipTheme {\n    CALLOUT = 'callout',\n    DEFAULT = 'default',\n    ERROR = 'error',\n}\n\nexport enum TooltipPosition {\n    BOTTOM_CENTER = 'bottom-center',\n    BOTTOM_LEFT = 'bottom-left',\n    BOTTOM_RIGHT = 'bottom-right',\n    MIDDLE_LEFT = 'middle-left',\n    MIDDLE_RIGHT = 'middle-right',\n    TOP_CENTER = 'top-center',\n    TOP_LEFT = 'top-left',\n    TOP_RIGHT = 'top-right',\n}\n\nexport type TooltipCustomPosition = {\n    attachment: TetherPosition;\n    targetAttachment: TetherPosition;\n};\n\nconst positions = {\n    [TooltipPosition.BOTTOM_CENTER]: {\n        attachment: TetherPosition.TOP_CENTER,\n        targetAttachment: TetherPosition.BOTTOM_CENTER,\n    },\n    [TooltipPosition.BOTTOM_LEFT]: {\n        attachment: TetherPosition.TOP_RIGHT,\n        targetAttachment: TetherPosition.BOTTOM_RIGHT,\n    },\n    [TooltipPosition.BOTTOM_RIGHT]: {\n        attachment: TetherPosition.TOP_LEFT,\n        targetAttachment: TetherPosition.BOTTOM_LEFT,\n    },\n    [TooltipPosition.MIDDLE_LEFT]: {\n        attachment: TetherPosition.MIDDLE_RIGHT,\n        targetAttachment: TetherPosition.MIDDLE_LEFT,\n    },\n    [TooltipPosition.MIDDLE_RIGHT]: {\n        attachment: TetherPosition.MIDDLE_LEFT,\n        targetAttachment: TetherPosition.MIDDLE_RIGHT,\n    },\n    [TooltipPosition.TOP_CENTER]: {\n        attachment: TetherPosition.BOTTOM_CENTER,\n        targetAttachment: TetherPosition.TOP_CENTER,\n    },\n    [TooltipPosition.TOP_LEFT]: {\n        attachment: TetherPosition.BOTTOM_RIGHT,\n        targetAttachment: TetherPosition.TOP_RIGHT,\n    },\n    [TooltipPosition.TOP_RIGHT]: {\n        attachment: TetherPosition.BOTTOM_LEFT,\n        targetAttachment: TetherPosition.TOP_LEFT,\n    },\n};\n\nexport type DefaultTooltipProps = {\n    /** Whether to constrain the tooltip to the element's scroll parent. Defaults to `false` */\n    constrainToScrollParent: boolean;\n    /** Whether to constrain the tooltip to window. Defaults to `true` */\n    constrainToWindow: boolean;\n    /** Forces the tooltip to be disabled irrespecitve of it's shown state. Defaults to `false` */\n    isDisabled: boolean;\n    /** Where to position the tooltip relative to the wrapped component */\n    position: TooltipPosition | TooltipCustomPosition;\n    /** Tooltip theme */\n    theme: TooltipTheme;\n};\n\nexport type TooltipProps = {\n    /** An HTML element to append the tooltip container into (otherwise appends to body) */\n    bodyElement?: HTMLElement;\n    /** A React element to put the tooltip on */\n    children: React.ReactChild;\n    /** A CSS class for the tooltip */\n    className?: string;\n    /** Forces the tooltip to be shown or hidden (useful for errors) */\n    isShown?: boolean;\n    /** Whether to add tabindex=0.  Defaults to `true` */\n    isTabbable?: boolean;\n    /** A string of the form 'vert-offset horiz-offset' which controls positioning */\n    offset?: string;\n    /** Function called if the user manually dismisses the tooltip - only applies if showCloseButton is true */\n    onDismiss?: () => void;\n    /** Shows an X button to close the tooltip. Useful when tooltips are force shown with the isShown prop. */\n    showCloseButton?: boolean;\n    /** stop click|keypress event bubbling */\n    stopBubble?: boolean;\n    /** Text to show in the tooltip */\n    text?: React.ReactNode;\n} & Partial<DefaultTooltipProps>;\n\ntype State = {\n    isShown: boolean;\n    hasRendered: boolean;\n    wasClosedByUser: boolean;\n};\n\nclass Tooltip extends React.Component<TooltipProps, State> {\n    static defaultProps: DefaultTooltipProps = {\n        constrainToScrollParent: false,\n        constrainToWindow: true,\n        isDisabled: false,\n        position: TooltipPosition.TOP_CENTER,\n        theme: TooltipTheme.DEFAULT,\n    };\n\n    constructor(props: TooltipProps) {\n        super(props);\n\n        this.state = { isShown: !!props.isShown, hasRendered: false, wasClosedByUser: false };\n    }\n\n    componentDidMount() {\n        this.setState({ hasRendered: true });\n    }\n\n    tooltipID = uniqueId('tooltip');\n\n    tetherRef = React.createRef<TetherComponent>();\n\n    // Instance API: Forces the radar to be repositioned\n    position = () => {\n        if (this.tetherRef.current && this.isShown()) {\n            this.tetherRef.current.position();\n        }\n    };\n\n    closeTooltip = () => {\n        const { onDismiss } = this.props;\n        this.setState({ wasClosedByUser: true });\n        if (onDismiss) {\n            onDismiss();\n        }\n    };\n\n    fireChildEvent = (type: string, event: React.SyntheticEvent<HTMLElement>) => {\n        const { children } = this.props;\n        const handler = (children as React.ReactElement).props[type];\n        if (handler) {\n            handler(event);\n        }\n    };\n\n    handleTooltipEvent = (event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n    };\n\n    handleMouseEnter = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: true });\n        this.fireChildEvent('onMouseEnter', event);\n    };\n\n    handleMouseLeave = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: false });\n        this.fireChildEvent('onMouseLeave', event);\n    };\n\n    handleFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: true });\n        this.fireChildEvent('onFocus', event);\n    };\n\n    handleBlur = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: false });\n        this.fireChildEvent('onBlur', event);\n    };\n\n    handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n        if (event.key === 'Escape') {\n            this.setState({ isShown: false });\n        }\n        this.fireChildEvent('onKeyDown', event);\n    };\n\n    isControlled = () => {\n        const { isShown: isShownProp } = this.props;\n        return typeof isShownProp !== 'undefined';\n    };\n\n    isShown = () => {\n        const { isShown: isShownProp } = this.props;\n        const isControlled = this.isControlled();\n\n        const isShown = isControlled ? isShownProp : this.state.isShown;\n\n        const showTooltip = isShown && !this.state.wasClosedByUser && this.state.hasRendered;\n\n        return showTooltip;\n    };\n\n    render() {\n        const {\n            bodyElement,\n            children,\n            className,\n            constrainToScrollParent,\n            constrainToWindow,\n            isDisabled,\n            isTabbable = true,\n            offset,\n            position = TooltipPosition.TOP_CENTER,\n            showCloseButton,\n            stopBubble,\n            text,\n            theme,\n        } = this.props;\n\n        // If the tooltip is disabled just render the children\n        if (isDisabled) {\n            return React.Children.only(children);\n        }\n\n        const isControlled = this.isControlled();\n        const showTooltip = this.isShown();\n\n        const withCloseButton = showCloseButton && isControlled;\n        const tetherPosition = typeof position === 'string' ? positions[position] : position;\n        const constraints = [];\n        const componentProps: {\n            [key: string]:\n                | string\n                | ((event: React.SyntheticEvent<HTMLElement>) => void)\n                | ((event: React.KeyboardEvent<HTMLElement>) => void);\n        } = {};\n\n        if (constrainToScrollParent) {\n            constraints.push({\n                to: 'scrollParent',\n                attachment: 'together',\n            });\n        }\n        if (constrainToWindow) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n            });\n        }\n\n        if (showTooltip) {\n            componentProps['aria-describedby'] = this.tooltipID;\n            if (theme === TooltipTheme.ERROR) {\n                componentProps['aria-errormessage'] = this.tooltipID;\n            }\n        }\n        if (!isControlled) {\n            componentProps.onBlur = this.handleBlur;\n            componentProps.onFocus = this.handleFocus;\n            componentProps.onKeyDown = this.handleKeyDown;\n            componentProps.onMouseEnter = this.handleMouseEnter;\n            componentProps.onMouseLeave = this.handleMouseLeave;\n\n            if (isTabbable) {\n                componentProps.tabIndex = '0';\n            }\n        }\n\n        const bodyEl = bodyElement instanceof HTMLElement ? bodyElement : document.body;\n\n        const classes = classNames('tooltip', 'bdl-Tooltip', className, {\n            'is-callout': theme === TooltipTheme.CALLOUT,\n            'is-error': theme === TooltipTheme.ERROR,\n            'with-close-button': withCloseButton,\n        });\n\n        const tetherProps: {\n            attachment: TetherPosition;\n            bodyElement: HTMLElement;\n            classPrefix: string;\n            constraints: {};\n            enabled: boolean | undefined;\n            targetAttachment: TetherPosition;\n            offset?: string;\n        } = {\n            attachment: tetherPosition.attachment,\n            bodyElement: bodyEl,\n            classPrefix: 'tooltip',\n            constraints,\n            enabled: showTooltip,\n            targetAttachment: tetherPosition.targetAttachment,\n        };\n\n        if (offset) {\n            tetherProps.offset = offset;\n        }\n\n        const tooltipInner = (\n            <>\n                {text}\n                {withCloseButton && (\n                    <PlainButton className=\"tooltip-close-button\" onClick={this.closeTooltip}>\n                        <IconClose className=\"bdl-Tooltip-iconClose\" width={14} height={14} />\n                    </PlainButton>\n                )}\n            </>\n        );\n\n        const tooltip = stopBubble ? (\n            <div\n                className={classes}\n                id={this.tooltipID}\n                role=\"presentation\"\n                onClick={this.handleTooltipEvent}\n                onContextMenu={this.handleTooltipEvent}\n                onKeyPress={this.handleTooltipEvent}\n            >\n                <div role=\"tooltip\" aria-live=\"polite\">\n                    {tooltipInner}\n                </div>\n            </div>\n        ) : (\n            <div className={classes} id={this.tooltipID} role=\"tooltip\" aria-live=\"polite\">\n                {tooltipInner}\n            </div>\n        );\n\n        return (\n            <TetherComponent ref={this.tetherRef} {...tetherProps}>\n                {React.cloneElement(React.Children.only(children) as React.ReactElement, componentProps)}\n                {showTooltip && tooltip}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}