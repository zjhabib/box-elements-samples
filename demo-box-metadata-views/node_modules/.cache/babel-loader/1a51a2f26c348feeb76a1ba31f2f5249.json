{"ast":null,"code":"/**\n * \n * @file Preview sidebar nav component\n * @author Box\n */\nimport * as React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport IconMagicWand from '../../icons/general/IconMagicWand';\nimport IconMetadataThick from '../../icons/general/IconMetadataThick';\nimport IconDocInfo from '../../icons/general/IconDocInfo';\nimport IconChatRound from '../../icons/general/IconChatRound';\nimport messages from '../common/messages';\nimport { SIDEBAR_NAV_TARGETS } from '../common/interactionTargets';\nimport SidebarNavButton from './SidebarNavButton';\nimport SidebarToggle from './SidebarToggle';\nimport AdditionalTabs from './additional-tabs';\nimport SidebarNavTablist from './SidebarNavTablist';\nimport { SIDEBAR_VIEW_SKILLS, SIDEBAR_VIEW_ACTIVITY, SIDEBAR_VIEW_DETAILS, SIDEBAR_VIEW_METADATA } from '../../constants';\nimport './SidebarNav.scss';\nvar SidebarNav = function SidebarNav(_ref) {\n  var additionalTabs = _ref.additionalTabs,\n    elementId = _ref.elementId,\n    fileId = _ref.fileId,\n    hasActivity = _ref.hasActivity,\n    hasAdditionalTabs = _ref.hasAdditionalTabs,\n    hasDetails = _ref.hasDetails,\n    hasMetadata = _ref.hasMetadata,\n    hasSkills = _ref.hasSkills,\n    intl = _ref.intl,\n    isOpen = _ref.isOpen,\n    onNavigate = _ref.onNavigate;\n  return React.createElement(\"div\", {\n    className: \"bcs-SidebarNav\",\n    \"aria-label\": intl.formatMessage(messages.sidebarNavLabel)\n  }, React.createElement(\"div\", {\n    className: \"bcs-SidebarNav-tabs\"\n  }, React.createElement(SidebarNavTablist, {\n    elementId: elementId,\n    isOpen: isOpen,\n    onNavigate: onNavigate\n  }, hasActivity && React.createElement(SidebarNavButton, {\n    \"data-resin-target\": SIDEBAR_NAV_TARGETS.ACTIVITY,\n    \"data-testid\": \"sidebaractivity\",\n    sidebarView: SIDEBAR_VIEW_ACTIVITY,\n    tooltip: React.createElement(FormattedMessage, messages.sidebarActivityTitle)\n  }, React.createElement(IconChatRound, null)), hasDetails && React.createElement(SidebarNavButton, {\n    \"data-resin-target\": SIDEBAR_NAV_TARGETS.DETAILS,\n    \"data-testid\": \"sidebardetails\",\n    sidebarView: SIDEBAR_VIEW_DETAILS,\n    tooltip: React.createElement(FormattedMessage, messages.sidebarDetailsTitle)\n  }, React.createElement(IconDocInfo, null)), hasSkills && React.createElement(SidebarNavButton, {\n    \"data-resin-target\": SIDEBAR_NAV_TARGETS.SKILLS,\n    \"data-testid\": \"sidebarskills\",\n    sidebarView: SIDEBAR_VIEW_SKILLS,\n    tooltip: React.createElement(FormattedMessage, messages.sidebarSkillsTitle)\n  }, React.createElement(IconMagicWand, null)), hasMetadata && React.createElement(SidebarNavButton, {\n    \"data-resin-target\": SIDEBAR_NAV_TARGETS.METADATA,\n    \"data-testid\": \"sidebarmetadata\",\n    sidebarView: SIDEBAR_VIEW_METADATA,\n    tooltip: React.createElement(FormattedMessage, messages.sidebarMetadataTitle)\n  }, React.createElement(IconMetadataThick, null))), hasAdditionalTabs && React.createElement(\"div\", {\n    className: \"bcs-SidebarNav-overflow\"\n  }, React.createElement(AdditionalTabs, {\n    key: fileId,\n    tabs: additionalTabs\n  }))), React.createElement(\"div\", {\n    className: \"bcs-SidebarNav-footer\"\n  }, React.createElement(SidebarToggle, {\n    isOpen: isOpen\n  })));\n};\nexport default injectIntl(SidebarNav);","map":{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarNav.js"],"names":["React","injectIntl","FormattedMessage","IconMagicWand","IconMetadataThick","IconDocInfo","IconChatRound","messages","SIDEBAR_NAV_TARGETS","SidebarNavButton","SidebarToggle","AdditionalTabs","SidebarNavTablist","SIDEBAR_VIEW_SKILLS","SIDEBAR_VIEW_ACTIVITY","SIDEBAR_VIEW_DETAILS","SIDEBAR_VIEW_METADATA","SidebarNav","additionalTabs","elementId","fileId","hasActivity","hasAdditionalTabs","hasDetails","hasMetadata","hasSkills","intl","isOpen","onNavigate","formatMessage","sidebarNavLabel","ACTIVITY","sidebarActivityTitle","DETAILS","sidebarDetailsTitle","SKILLS","sidebarSkillsTitle","METADATA","sidebarMetadataTitle"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Preview sidebar nav component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport IconMagicWand from '../../icons/general/IconMagicWand';\nimport IconMetadataThick from '../../icons/general/IconMetadataThick';\nimport IconDocInfo from '../../icons/general/IconDocInfo';\nimport IconChatRound from '../../icons/general/IconChatRound';\nimport messages from '../common/messages';\nimport { SIDEBAR_NAV_TARGETS } from '../common/interactionTargets';\nimport SidebarNavButton from './SidebarNavButton';\nimport SidebarToggle from './SidebarToggle';\nimport AdditionalTabs from './additional-tabs';\nimport SidebarNavTablist from './SidebarNavTablist';\nimport {\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_METADATA,\n} from '../../constants';\nimport type { NavigateOptions, AdditionalSidebarTab } from './flowTypes';\nimport './SidebarNav.scss';\n\ntype Props = {\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    elementId: string,\n    fileId: string,\n    hasActivity: boolean,\n    hasAdditionalTabs: boolean,\n    hasDetails: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    isOpen?: boolean,\n    onNavigate?: (SyntheticEvent<>, NavigateOptions) => void,\n} & InjectIntlProvidedProps;\n\nconst SidebarNav = ({\n    additionalTabs,\n    elementId,\n    fileId,\n    hasActivity,\n    hasAdditionalTabs,\n    hasDetails,\n    hasMetadata,\n    hasSkills,\n    intl,\n    isOpen,\n    onNavigate,\n}: Props) => (\n    <div className=\"bcs-SidebarNav\" aria-label={intl.formatMessage(messages.sidebarNavLabel)}>\n        <div className=\"bcs-SidebarNav-tabs\">\n            <SidebarNavTablist elementId={elementId} isOpen={isOpen} onNavigate={onNavigate}>\n                {hasActivity && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.ACTIVITY}\n                        data-testid=\"sidebaractivity\"\n                        sidebarView={SIDEBAR_VIEW_ACTIVITY}\n                        tooltip={<FormattedMessage {...messages.sidebarActivityTitle} />}\n                    >\n                        <IconChatRound />\n                    </SidebarNavButton>\n                )}\n                {hasDetails && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.DETAILS}\n                        data-testid=\"sidebardetails\"\n                        sidebarView={SIDEBAR_VIEW_DETAILS}\n                        tooltip={<FormattedMessage {...messages.sidebarDetailsTitle} />}\n                    >\n                        <IconDocInfo />\n                    </SidebarNavButton>\n                )}\n                {hasSkills && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.SKILLS}\n                        data-testid=\"sidebarskills\"\n                        sidebarView={SIDEBAR_VIEW_SKILLS}\n                        tooltip={<FormattedMessage {...messages.sidebarSkillsTitle} />}\n                    >\n                        <IconMagicWand />\n                    </SidebarNavButton>\n                )}\n                {hasMetadata && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.METADATA}\n                        data-testid=\"sidebarmetadata\"\n                        sidebarView={SIDEBAR_VIEW_METADATA}\n                        tooltip={<FormattedMessage {...messages.sidebarMetadataTitle} />}\n                    >\n                        <IconMetadataThick />\n                    </SidebarNavButton>\n                )}\n            </SidebarNavTablist>\n\n            {hasAdditionalTabs && (\n                <div className=\"bcs-SidebarNav-overflow\">\n                    <AdditionalTabs key={fileId} tabs={additionalTabs} />\n                </div>\n            )}\n        </div>\n        <div className=\"bcs-SidebarNav-footer\">\n            <SidebarToggle isOpen={isOpen} />\n        </div>\n    </div>\n);\n\nexport default injectIntl(SidebarNav);\n"]},"metadata":{},"sourceType":"module"}