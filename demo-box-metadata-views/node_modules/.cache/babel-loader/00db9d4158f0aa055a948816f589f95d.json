{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport debounce from 'lodash/debounce';\nimport './SubmenuItem.scss';\nimport Arrow16 from '../../icon/fill/Arrow16';\nvar SUBMENU_LEFT_ALIGNED_CLASS = 'is-left-aligned';\nvar SUBMENU_BOTTOM_ALIGNED_CLASS = 'is-bottom-aligned';\n\n/**\n * A menu-item component which triggers open a submenu\n *\n * @NOTE: Nested submenus are NOT currently supported, switching\n * focus with arrow keys in the subsubmenu is not working properly.\n */\nvar SubmenuItem = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubmenuItem, _React$Component);\n  function SubmenuItem() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, SubmenuItem);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SubmenuItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isSubmenuOpen: false,\n      submenuFocusIndex: null\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getMenuAlignmentClasses\", function () {\n      var _ref;\n      if (!_this.submenuTriggerEl || !_this.submenuEl) {\n        return {};\n      }\n      var _this$props = _this.props,\n        rightBoundaryElement = _this$props.rightBoundaryElement,\n        bottomBoundaryElement = _this$props.bottomBoundaryElement;\n      var submenuElBounding = _this.submenuEl.getBoundingClientRect();\n      var submenuTriggerElBounding = _this.submenuTriggerEl.getBoundingClientRect();\n      var rightBoundaryElementBounding = rightBoundaryElement ? rightBoundaryElement.getBoundingClientRect() : {\n        right: window.innerWidth\n      };\n      var bottomBoundaryElementBounding = bottomBoundaryElement ? bottomBoundaryElement.getBoundingClientRect() : {\n        bottom: window.innerHeight\n      };\n      var isLeftAligned = submenuTriggerElBounding.right + submenuElBounding.width > rightBoundaryElementBounding.right;\n      var isBottomAligned = submenuTriggerElBounding.top + submenuElBounding.height > bottomBoundaryElementBounding.bottom;\n      return _ref = {}, _defineProperty(_ref, SUBMENU_LEFT_ALIGNED_CLASS, isLeftAligned), _defineProperty(_ref, SUBMENU_BOTTOM_ALIGNED_CLASS, isBottomAligned), _ref;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleMenuItemClick\", function (event) {\n      var _this$props2 = _this.props,\n        isDisabled = _this$props2.isDisabled,\n        onClick = _this$props2.onClick; // If aria-disabled is passed as a prop, we should ignore clicks on this menu item\n\n      if (isDisabled) {\n        event.stopPropagation();\n        event.preventDefault();\n        return;\n      }\n      if (onClick) {\n        onClick(event);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (event) {\n      switch (event.key) {\n        case ' ':\n        case 'Enter':\n        case 'ArrowRight':\n          event.stopPropagation();\n          event.preventDefault();\n          _this.openSubmenuAndFocus();\n          break;\n        default:\n          break;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"closeSubmenu\", debounce(function () {\n      _this.setState({\n        isSubmenuOpen: false\n      });\n    }, 50));\n    _defineProperty(_assertThisInitialized(_this), \"closeSubmenuAndFocusTrigger\", function (isKeyboardEvent) {\n      _this.closeSubmenu();\n      if (_this.submenuTriggerEl && isKeyboardEvent) {\n        _this.submenuTriggerEl.focus();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"openSubmenu\", function () {\n      _this.closeSubmenu.cancel();\n      var onOpen = _this.props.onOpen;\n      if (onOpen) {\n        onOpen();\n      }\n      _this.setState({\n        isSubmenuOpen: true,\n        submenuFocusIndex: null\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"openSubmenuAndFocus\", function () {\n      var onOpen = _this.props.onOpen;\n      if (onOpen) {\n        onOpen();\n      }\n      _this.setState({\n        isSubmenuOpen: true,\n        submenuFocusIndex: 0\n      });\n    });\n    return _this;\n  }\n  _createClass(SubmenuItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props3 = this.props,\n        children = _this$props3.children,\n        className = _this$props3.className,\n        isDisabled = _this$props3.isDisabled,\n        rest = _objectWithoutProperties(_this$props3, [\"children\", \"className\", \"isDisabled\"]);\n      var _this$state = this.state,\n        isSubmenuOpen = _this$state.isSubmenuOpen,\n        submenuFocusIndex = _this$state.submenuFocusIndex;\n      var elements = React.Children.toArray(children);\n      var submenuTriggerContent = elements[0];\n      var submenu = elements[1];\n      if (elements.length !== 2 || !submenuTriggerContent || !submenu) {\n        throw new Error('SubmenuItem must have exactly two children, a trigger component and a <Menu>');\n      }\n      var chevron = React.createElement(Arrow16, {\n        className: \"menu-item-arrow\",\n        width: 12,\n        height: 12\n      });\n      var menuItemProps = _objectSpread({}, omit(rest, ['bottomBoundaryElement', 'onClick', 'onOpen', 'rightBoundaryElement', 'role', 'tabIndex']), {\n        'aria-disabled': isDisabled ? 'true' : undefined,\n        'aria-expanded': isSubmenuOpen ? 'true' : 'false',\n        'aria-haspopup': 'true',\n        className: classNames('menu-item', 'submenu-target', className),\n        onClick: this.handleMenuItemClick,\n        onMouseLeave: this.closeSubmenu,\n        onMouseEnter: this.openSubmenu,\n        onKeyDown: this.handleKeyDown,\n        ref: function ref(_ref2) {\n          _this2.submenuTriggerEl = _ref2;\n        },\n        role: 'menuitem',\n        tabIndex: -1\n      });\n      var submenuProps = {\n        className: classNames(submenu.props.className, 'submenu', this.getMenuAlignmentClasses()),\n        initialFocusIndex: submenuFocusIndex,\n        // Hide the menu instead of unmounting it. Otherwise onMouseLeave won't work.\n        isHidden: !isSubmenuOpen,\n        isSubmenu: true,\n        onClose: this.closeSubmenuAndFocusTrigger,\n        setRef: function setRef(ref) {\n          _this2.submenuEl = ref;\n        }\n      };\n      return React.createElement(\"li\", menuItemProps, submenuTriggerContent, chevron, React.cloneElement(submenu, submenuProps));\n    }\n  }]);\n  return SubmenuItem;\n}(React.Component);\nexport default SubmenuItem;","map":{"version":3,"sources":["../../../src/components/menu/SubmenuItem.tsx"],"names":["React","classNames","omit","debounce","Arrow16","SUBMENU_LEFT_ALIGNED_CLASS","SUBMENU_BOTTOM_ALIGNED_CLASS","SubmenuItem","Component","isSubmenuOpen","submenuFocusIndex","submenuTriggerEl","submenuEl","rightBoundaryElement","bottomBoundaryElement","props","submenuElBounding","getBoundingClientRect","submenuTriggerElBounding","rightBoundaryElementBounding","right","window","innerWidth","bottomBoundaryElementBounding","bottom","innerHeight","isLeftAligned","width","isBottomAligned","top","height","event","isDisabled","onClick","stopPropagation","preventDefault","key","openSubmenuAndFocus","setState","isKeyboardEvent","closeSubmenu","focus","cancel","onOpen","children","className","rest","state","elements","Children","toArray","submenuTriggerContent","submenu","length","Error","chevron","menuItemProps","undefined","handleMenuItemClick","onMouseLeave","onMouseEnter","openSubmenu","onKeyDown","handleKeyDown","ref","role","tabIndex","submenuProps","getMenuAlignmentClasses","initialFocusIndex","isHidden","isSubmenu","onClose","closeSubmenuAndFocusTrigger","setRef","cloneElement"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport debounce from 'lodash/debounce';\n\nimport './SubmenuItem.scss';\nimport Arrow16 from '../../icon/fill/Arrow16';\n\nconst SUBMENU_LEFT_ALIGNED_CLASS = 'is-left-aligned';\nconst SUBMENU_BOTTOM_ALIGNED_CLASS = 'is-bottom-aligned';\n\nexport interface SubmenuItemProps {\n    /** 'aria-disabled' - ARIA attribute describing whether the submenu item is disabled */\n    'aria-disabled'?: boolean | 'true' | 'false';\n    /** 'aria-disabled' - ARIA attribute describing whether the submenu item is expanded */\n    'aria-expanded'?: boolean | 'true' | 'false';\n    /** 'aria-disabled' - ARIA attribute describing whether the submenu item has a popup */\n    'aria-haspopup'?: boolean | 'true' | 'false';\n    /** bottomBoundaryElement - an HTMLElement defining the bottom boundary for the submenu item */\n    bottomBoundaryElement?: HTMLElement;\n    /** children - submenu item content */\n    children?: Array<React.ReactChild> | React.ReactChild;\n    /** className - CSS class name for the submenu item */\n    className?: string;\n    /** isDisabled - whether the submenu item is disabled */\n    isDisabled?: boolean;\n    /** onClick - function called when the submenu item is clicked */\n    onClick?: (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n    /** onClick - function called when a key is pressed within the submenu item */\n    onKeyDown?: (event: React.KeyboardEvent<HTMLLIElement>) => void;\n    /** onClick - function called when the mouse enters the submenu item */\n    onMouseEnter?: (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n    /** onClick - function called when the mouse leaves the submenu item */\n    onMouseLeave?: (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n    /** onOpen - function called when the submenu opens */\n    onOpen?: () => void;\n    /** ref - reference to the menu element in the DOM */\n    ref?: string | ((instance: HTMLLIElement | null) => void) | React.RefObject<HTMLLIElement> | null | undefined;\n    /** rightBoundaryElement - an HTMLElement defining the right boundary for the submenu item */\n    rightBoundaryElement?: HTMLElement;\n    /** role - ARIA role for the submenu item */\n    role?: string;\n    /** tabIndex - indicator of whether the submenu item is focusable */\n    tabIndex?: number;\n}\n\ninterface SubmenuItemState {\n    /** isSubmenuOpen - whether the submenu is open */\n    isSubmenuOpen: boolean;\n    /** isSubmenuOpen - index of the focused submenu item */\n    submenuFocusIndex: number | null | undefined;\n}\n\n/**\n * A menu-item component which triggers open a submenu\n *\n * @NOTE: Nested submenus are NOT currently supported, switching\n * focus with arrow keys in the subsubmenu is not working properly.\n */\nclass SubmenuItem extends React.Component<SubmenuItemProps, SubmenuItemState> {\n    state = {\n        isSubmenuOpen: false,\n        submenuFocusIndex: null,\n    };\n\n    getMenuAlignmentClasses = (): Record<string, boolean> => {\n        if (!this.submenuTriggerEl || !this.submenuEl) {\n            return {};\n        }\n\n        const { rightBoundaryElement, bottomBoundaryElement } = this.props;\n        const submenuElBounding = this.submenuEl.getBoundingClientRect();\n        const submenuTriggerElBounding = this.submenuTriggerEl.getBoundingClientRect();\n        const rightBoundaryElementBounding = rightBoundaryElement\n            ? rightBoundaryElement.getBoundingClientRect()\n            : { right: window.innerWidth };\n        const bottomBoundaryElementBounding = bottomBoundaryElement\n            ? bottomBoundaryElement.getBoundingClientRect()\n            : { bottom: window.innerHeight };\n\n        const isLeftAligned =\n            submenuTriggerElBounding.right + submenuElBounding.width > rightBoundaryElementBounding.right;\n        const isBottomAligned =\n            submenuTriggerElBounding.top + submenuElBounding.height > bottomBoundaryElementBounding.bottom;\n\n        return {\n            [SUBMENU_LEFT_ALIGNED_CLASS]: isLeftAligned,\n            [SUBMENU_BOTTOM_ALIGNED_CLASS]: isBottomAligned,\n        };\n    };\n\n    handleMenuItemClick = (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n        const { isDisabled, onClick } = this.props;\n\n        // If aria-disabled is passed as a prop, we should ignore clicks on this menu item\n        if (isDisabled) {\n            event.stopPropagation();\n            event.preventDefault();\n\n            return;\n        }\n\n        if (onClick) {\n            onClick(event);\n        }\n    };\n\n    submenuTriggerEl: HTMLElement | null | undefined;\n\n    submenuEl: HTMLElement | null | undefined;\n\n    handleKeyDown = (event: React.KeyboardEvent<HTMLLIElement>) => {\n        switch (event.key) {\n            case ' ':\n            case 'Enter':\n            case 'ArrowRight':\n                event.stopPropagation();\n                event.preventDefault();\n                this.openSubmenuAndFocus();\n                break;\n            default:\n                break;\n        }\n    };\n\n    closeSubmenu = debounce(() => {\n        this.setState({\n            isSubmenuOpen: false,\n        });\n    }, 50);\n\n    closeSubmenuAndFocusTrigger = (isKeyboardEvent: boolean | null | undefined) => {\n        this.closeSubmenu();\n        if (this.submenuTriggerEl && isKeyboardEvent) {\n            this.submenuTriggerEl.focus();\n        }\n    };\n\n    openSubmenu = () => {\n        this.closeSubmenu.cancel();\n        const { onOpen } = this.props;\n        if (onOpen) {\n            onOpen();\n        }\n        this.setState({\n            isSubmenuOpen: true,\n            submenuFocusIndex: null,\n        });\n    };\n\n    openSubmenuAndFocus = () => {\n        const { onOpen } = this.props;\n        if (onOpen) {\n            onOpen();\n        }\n\n        this.setState({\n            isSubmenuOpen: true,\n            submenuFocusIndex: 0,\n        });\n    };\n\n    render() {\n        const { children, className, isDisabled, ...rest } = this.props;\n        const { isSubmenuOpen, submenuFocusIndex } = this.state;\n\n        const elements = React.Children.toArray(children);\n        const submenuTriggerContent = elements[0];\n        const submenu = elements[1] as React.ReactElement;\n        if (elements.length !== 2 || !submenuTriggerContent || !submenu) {\n            throw new Error('SubmenuItem must have exactly two children, a trigger component and a <Menu>');\n        }\n\n        const chevron = <Arrow16 className=\"menu-item-arrow\" width={12} height={12} />;\n\n        const menuItemProps: SubmenuItemProps = {\n            ...omit(rest, ['bottomBoundaryElement', 'onClick', 'onOpen', 'rightBoundaryElement', 'role', 'tabIndex']),\n            'aria-disabled': isDisabled ? 'true' : undefined,\n            'aria-expanded': isSubmenuOpen ? 'true' : 'false',\n            'aria-haspopup': 'true',\n\n            className: classNames('menu-item', 'submenu-target', className),\n            onClick: this.handleMenuItemClick,\n            onMouseLeave: this.closeSubmenu,\n            onMouseEnter: this.openSubmenu,\n            onKeyDown: this.handleKeyDown,\n            ref: (ref: HTMLLIElement | null) => {\n                this.submenuTriggerEl = ref;\n            },\n            role: 'menuitem',\n            tabIndex: -1,\n        };\n\n        const submenuProps = {\n            className: classNames(submenu.props.className, 'submenu', this.getMenuAlignmentClasses()),\n            initialFocusIndex: submenuFocusIndex,\n            // Hide the menu instead of unmounting it. Otherwise onMouseLeave won't work.\n            isHidden: !isSubmenuOpen,\n            isSubmenu: true,\n            onClose: this.closeSubmenuAndFocusTrigger,\n            setRef: (ref: HTMLLIElement) => {\n                this.submenuEl = ref;\n            },\n        };\n\n        return (\n            <li {...menuItemProps}>\n                {submenuTriggerContent}\n                {chevron}\n                {React.cloneElement(submenu, submenuProps)}\n            </li>\n        );\n    }\n}\n\nexport default SubmenuItem;\n"]},"metadata":{},"sourceType":"module"}