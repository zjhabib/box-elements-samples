{"ast":null,"code":"import React from 'react';\nimport PlainButton from '../plain-button';\nimport Tooltip from '../tooltip';\nimport { KEYS } from '../../constants';\nimport './SuggestedPillsRow.scss';\nvar SuggestedPill = function SuggestedPill(_ref) {\n  var email = _ref.email,\n    id = _ref.id,\n    name = _ref.name,\n    onAdd = _ref.onAdd;\n  var addSuggestedPill = function addSuggestedPill(event) {\n    event.preventDefault(); // TODO: refactor this so inline conversions aren't required at every usage\n\n    onAdd({\n      email: email,\n      id: id,\n      name: name,\n      text: name,\n      type: 'user',\n      value: email\n    });\n  };\n  var handleKeyPress = function handleKeyPress(event) {\n    if (event.key === KEYS.enter) {\n      addSuggestedPill(event);\n    }\n  };\n  return React.createElement(Tooltip, {\n    position: \"bottom-center\",\n    text: email\n  }, React.createElement(PlainButton, {\n    className: \"suggested-pill-invisible-button\",\n    onClick: addSuggestedPill,\n    onKeyDown: handleKeyPress,\n    type: \"button\"\n  }, React.createElement(\"span\", {\n    className: \"bdl-Pill-text pill-text suggested-pill\"\n  }, name)));\n};\nexport default SuggestedPill;","map":{"version":3,"sources":["../../../src/components/pill-selector-dropdown/SuggestedPill.js"],"names":["React","PlainButton","Tooltip","KEYS","SuggestedPill","email","id","name","onAdd","addSuggestedPill","event","preventDefault","text","type","value","handleKeyPress","key","enter"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAIA,OAAO,0BAAP;AASA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAuC;EAAA,IAApCC,KAAoC,GAAA,IAAA,CAApCA,KAAoC;IAA7BC,EAA6B,GAAA,IAAA,CAA7BA,EAA6B;IAAzBC,IAAyB,GAAA,IAAA,CAAzBA,IAAyB;IAAnBC,KAAmB,GAAA,IAAA,CAAnBA,KAAmB;EACzD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAA8C;IACnEA,KAAK,CAACC,cAAND,CAAAA,CAAAA,CADmE,CAGnE;;IACAF,KAAK,CAAC;MACFH,KAAK,EAALA,KADE;MAEFC,EAAE,EAAFA,EAFE;MAGFC,IAAI,EAAJA,IAHE;MAIFK,IAAI,EAAEL,IAJJ;MAKFM,IAAI,EAAE,MALJ;MAMFC,KAAK,EAAET;IANL,CAAD,CAALG;EAQH,CAZD;EAcA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACL,KAAD,EAAsD;IACzE,IAAIA,KAAK,CAACM,GAANN,KAAcP,IAAI,CAACc,KAAvB,EAA8B;MAC1BR,gBAAgB,CAACC,KAAD,CAAhBD;IACH;EACJ,CAJD;EAMA,OACI,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA;IAAS,QAAQ,EAAC,eAAlB;IAAkC,IAAI,EAAEJ;EAAxC,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA;IACI,SAAS,EAAC,iCADd;IAEI,OAAO,EAAEI,gBAFb;IAGI,SAAS,EAAEM,cAHf;IAII,IAAI,EAAC;EAJT,CAAA,EAMI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAC;EAAhB,CAAA,EAA0DR,IAA1D,CANJ,CADJ,CADJ;AAYH,CAjCD;AAmCA,eAAeH,aAAf","sourcesContent":["// @flow\nimport React from 'react';\n\nimport PlainButton from '../plain-button';\nimport Tooltip from '../tooltip';\nimport { KEYS } from '../../constants';\n\nimport { type SuggestedPill as SuggestedPillType } from './flowTypes';\n\nimport './SuggestedPillsRow.scss';\n\ntype Props = {\n    email: string,\n    id: number,\n    name: string,\n    onAdd: SuggestedPillType => void,\n};\n\nconst SuggestedPill = ({ email, id, name, onAdd }: Props) => {\n    const addSuggestedPill = (event: SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n\n        // TODO: refactor this so inline conversions aren't required at every usage\n        onAdd({\n            email,\n            id,\n            name,\n            text: name,\n            type: 'user',\n            value: email,\n        });\n    };\n\n    const handleKeyPress = (event: SyntheticKeyboardEvent<HTMLButtonElement>) => {\n        if (event.key === KEYS.enter) {\n            addSuggestedPill(event);\n        }\n    };\n\n    return (\n        <Tooltip position=\"bottom-center\" text={email}>\n            <PlainButton\n                className=\"suggested-pill-invisible-button\"\n                onClick={addSuggestedPill}\n                onKeyDown={handleKeyPress}\n                type=\"button\"\n            >\n                <span className=\"bdl-Pill-text pill-text suggested-pill\">{name}</span>\n            </PlainButton>\n        </Tooltip>\n    );\n};\n\nexport default SuggestedPill;\n"]},"metadata":{},"sourceType":"module"}