{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport NavRouter from './NavRouter';\nvar withNavRouter = function withNavRouter(Component) {\n  function WithNavRouter(_ref) {\n    var history = _ref.history,\n      initialEntries = _ref.initialEntries,\n      rest = _objectWithoutProperties(_ref, [\"history\", \"initialEntries\"]);\n    return React.createElement(NavRouter, {\n      history: history,\n      initialEntries: initialEntries\n    }, React.createElement(Component, rest));\n  }\n  WithNavRouter.displayName = \"withNavRouter(\".concat(Component.displayName || Component.name || 'Component');\n  return WithNavRouter;\n};\nexport default withNavRouter;","map":{"version":3,"sources":["../../../../src/elements/common/nav-router/withNavRouter.tsx"],"names":["React","NavRouter","withNavRouter","Component","WithNavRouter","history","initialEntries","rest","displayName","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAmBC,SAAnB,EAA2F;EAC7G,SAASC,aAAT,CAAA,IAAA,EAAqF;IAAA,IAA5DC,OAA4D,GAAA,IAAA,CAA5DA,OAA4D;MAAnDC,cAAmD,GAAA,IAAA,CAAnDA,cAAmD;MAAhCC,IAAgC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,SAAA,EAAA,gBAAA,CAAA,CAAA;IACjF,OACI,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA;MAAW,OAAO,EAAEF,OAApB;MAA6B,cAAc,EAAEC;IAA7C,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,SAAD,EAAgBC,IAAhB,CADJ,CADJ;EAKH;EAEDH,aAAa,CAACI,WAAdJ,GAAAA,gBAAAA,CAAAA,MAAAA,CAA6CD,SAAS,CAACK,WAAVL,IAAyBA,SAAS,CAACM,IAAnCN,IAA2C,WAAxFC,CAAAA;EAEA,OAAOA,aAAP;AACH,CAZD;AAcA,eAAeF,aAAf","sourcesContent":["import React from 'react';\nimport NavRouter from './NavRouter';\nimport { WithNavRouterProps } from './types';\n\nconst withNavRouter = <P extends object>(Component: React.ComponentType<P>): React.FC<P & WithNavRouterProps> => {\n    function WithNavRouter({ history, initialEntries, ...rest }: P & WithNavRouterProps) {\n        return (\n            <NavRouter history={history} initialEntries={initialEntries}>\n                <Component {...(rest as P)} />\n            </NavRouter>\n        );\n    }\n\n    WithNavRouter.displayName = `withNavRouter(${Component.displayName || Component.name || 'Component'}`;\n\n    return WithNavRouter;\n};\n\nexport default withNavRouter;\n"]},"metadata":{},"sourceType":"module"}