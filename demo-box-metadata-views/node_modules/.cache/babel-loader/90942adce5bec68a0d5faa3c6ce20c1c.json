{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Tooltip from '../tooltip';\nimport './SelectButton.scss';\nvar SelectButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    error = _ref.error,\n    _ref$isDisabled = _ref.isDisabled,\n    isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,\n    rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"error\", \"isDisabled\"]);\n  return React.createElement(Tooltip, {\n    isShown: !!error,\n    position: \"middle-right\",\n    text: error,\n    theme: \"error\"\n  }, React.createElement(\"button\", _extends({\n    className: classNames(className, 'select-button', 'bdl-SelectButton', {\n      'is-invalid': !!error\n    }),\n    disabled: isDisabled,\n    ref: ref,\n    type: \"button\"\n  }, rest), children));\n});\nexport default SelectButton;","map":{"version":3,"sources":["../../../src/components/select-button/SelectButton.js"],"names":["React","classNames","Tooltip","SelectButton","forwardRef","children","className","error","isDisabled","rest","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,qBAAP;AASA,IAAMC,YAAY,GAAG,KAAK,CAACC,UAAN,CACjB,UAAA,IAAA,EAA0EM,GAA1E,EAAA;EAAA,IAAGL,QAAH,GAAA,IAAA,CAAGA,QAAH;IAAA,cAAA,GAAA,IAAA,CAAaC,SAAb;IAAaA,SAAb,GAAA,cAAA,KAAA,KAAA,CAAA,GAAyB,EAAzB,GAAA,cAAA;IAA6BC,KAA7B,GAAA,IAAA,CAA6BA,KAA7B;IAAA,eAAA,GAAA,IAAA,CAAoCC,UAApC;IAAoCA,UAApC,GAAA,eAAA,KAAA,KAAA,CAAA,GAAiD,KAAjD,GAAA,eAAA;IAA2DC,IAA3D,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,OAAA,EAAA,YAAA,CAAA,CAAA;EAAA,OACI,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA;IAAS,OAAO,EAAE,CAAC,CAACF,KAApB;IAA2B,QAAQ,EAAC,cAApC;IAAmD,IAAI,EAAEA,KAAzD;IAAgE,KAAK,EAAC;EAAtE,CAAA,EACI,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA;IACI,SAAS,EAAEN,UAAU,CAACK,SAAD,EAAY,eAAZ,EAA6B,kBAA7B,EAAiD;MAClE,YAAA,EAAc,CAAC,CAACC;IADkD,CAAjD,CADzB;IAII,QAAQ,EAAEC,UAJd;IAKI,GAAG,EAAEE,GALT;IAMI,IAAI,EAAC;EANT,CAAA,EAOQD,IAPR,CAAA,EASKJ,QATL,CADJ,CADJ;AAAA,CADiB,CAArB;AAkBA,eAAeF,YAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport Tooltip from '../tooltip';\nimport './SelectButton.scss';\n\ntype Props = {\n    children?: React.Node,\n    className: string,\n    error?: React.Node,\n    isDisabled: boolean,\n};\n\nconst SelectButton = React.forwardRef<Props, HTMLButtonElement>(\n    ({ children, className = '', error, isDisabled = false, ...rest }: Props, ref) => (\n        <Tooltip isShown={!!error} position=\"middle-right\" text={error} theme=\"error\">\n            <button\n                className={classNames(className, 'select-button', 'bdl-SelectButton', {\n                    'is-invalid': !!error,\n                })}\n                disabled={isDisabled}\n                ref={ref}\n                type=\"button\"\n                {...rest}\n            >\n                {children}\n            </button>\n        </Tooltip>\n    ),\n);\n\nexport default SelectButton;\n"]},"metadata":{},"sourceType":"module"}