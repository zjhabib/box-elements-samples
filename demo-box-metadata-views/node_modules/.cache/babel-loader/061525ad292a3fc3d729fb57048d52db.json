{"ast":null,"code":"import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport DatePicker from '../../components/date-picker';\nimport { convertISOStringToUTCDate } from '../../utils/datetime';\nimport messages from './messages';\nimport './DateMetadataField.scss';\nvar DateMetadataField = function DateMetadataField(_ref) {\n  var dataKey = _ref.dataKey,\n    dataValue = _ref.dataValue,\n    displayName = _ref.displayName,\n    description = _ref.description,\n    intl = _ref.intl,\n    _onChange = _ref.onChange,\n    onRemove = _ref.onRemove;\n  return React.createElement(DatePicker, {\n    className: \"bdl-DateMetadataField\",\n    dateFormat: \"utcISOString\",\n    description: description,\n    displayFormat: {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    },\n    hideOptionalLabel: true,\n    label: displayName,\n    onChange: function onChange(date, isoDate) {\n      if (isoDate) {\n        _onChange(dataKey, isoDate);\n      } else {\n        onRemove(dataKey);\n      }\n    },\n    placeholder: intl.formatMessage(messages.metadataFieldSetDate),\n    value: typeof dataValue === 'string' ? convertISOStringToUTCDate(dataValue) : undefined\n  });\n};\nexport { DateMetadataField as DateMetadataFieldBase };\nexport default injectIntl(DateMetadataField);","map":{"version":3,"sources":["../../../src/features/metadata-instance-fields/DateMetadataField.js"],"names":["React","injectIntl","DatePicker","convertISOStringToUTCDate","messages","DateMetadataField","dataKey","dataValue","displayName","description","intl","onChange","onRemove","day","month","year","date","isoDate","formatMessage","metadataFieldSetDate","undefined","DateMetadataFieldBase"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,yBAAT,QAA0C,sBAA1C;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,0BAAP;AAYA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,IAAA,EAAA;EAAA,IAAGC,OAAH,GAAA,IAAA,CAAGA,OAAH;IAAYC,SAAZ,GAAA,IAAA,CAAYA,SAAZ;IAAuBC,WAAvB,GAAA,IAAA,CAAuBA,WAAvB;IAAoCC,WAApC,GAAA,IAAA,CAAoCA,WAApC;IAAiDC,IAAjD,GAAA,IAAA,CAAiDA,IAAjD;IAAuDC,SAAvD,GAAA,IAAA,CAAuDA,QAAvD;IAAiEC,QAAjE,GAAA,IAAA,CAAiEA,QAAjE;EAAA,OACtB,KAAA,CAAA,aAAA,CAAC,UAAD,EAAA;IACI,SAAS,EAAC,uBADd;IAEI,UAAU,EAAC,cAFf;IAGI,WAAW,EAAEH,WAHjB;IAII,aAAa,EAAE;MACXI,GAAG,EAAE,SADM;MAEXC,KAAK,EAAE,MAFI;MAGXC,IAAI,EAAE;IAHK,CAJnB;IASI,iBAAiB,EAAA,IATrB;IAUI,KAAK,EAAEP,WAVX;IAWI,QAAQ,EAAE,SAAA,QAAA,CAACQ,IAAD,EAAaC,OAAb,EAAiC;MACvC,IAAIA,OAAJ,EAAa;QACTN,SAAQ,CAACL,OAAD,EAAUW,OAAV,CAARN;MACH,CAFD,MAEO;QACHC,QAAQ,CAACN,OAAD,CAARM;MACH;IACJ,CAjBL;IAkBI,WAAW,EAAEF,IAAI,CAACQ,aAALR,CAAmBN,QAAQ,CAACe,oBAA5BT,CAlBjB;IAmBI,KAAK,EAAE,OAAOH,SAAP,KAAqB,QAArB,GAAgCJ,yBAAyB,CAACI,SAAD,CAAzD,GAAuEa;EAnBlF,CAAA,CADsB;AAAA,CAA1B;AAwBA,SAASf,iBAAiB,IAAIgB,qBAA9B;AACA,eAAepB,UAAU,CAACI,iBAAD,CAAzB","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport DatePicker from '../../components/date-picker';\nimport { convertISOStringToUTCDate } from '../../utils/datetime';\nimport messages from './messages';\nimport type { MetadataFieldValue } from '../../common/types/metadata';\nimport './DateMetadataField.scss';\n\ntype Props = {\n    dataKey: string,\n    dataValue?: MetadataFieldValue,\n    description?: string,\n    displayName: string,\n    intl: any,\n    onChange: (key: string, value: MetadataFieldValue) => void,\n    onRemove: (key: string) => void,\n};\n\nconst DateMetadataField = ({ dataKey, dataValue, displayName, description, intl, onChange, onRemove }: Props) => (\n    <DatePicker\n        className=\"bdl-DateMetadataField\"\n        dateFormat=\"utcISOString\"\n        description={description}\n        displayFormat={{\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric',\n        }}\n        hideOptionalLabel\n        label={displayName}\n        onChange={(date: Date, isoDate: string) => {\n            if (isoDate) {\n                onChange(dataKey, isoDate);\n            } else {\n                onRemove(dataKey);\n            }\n        }}\n        placeholder={intl.formatMessage(messages.metadataFieldSetDate)}\n        value={typeof dataValue === 'string' ? convertISOStringToUTCDate(dataValue) : undefined}\n    />\n);\n\nexport { DateMetadataField as DateMetadataFieldBase };\nexport default injectIntl(DateMetadataField);\n"]},"metadata":{},"sourceType":"module"}