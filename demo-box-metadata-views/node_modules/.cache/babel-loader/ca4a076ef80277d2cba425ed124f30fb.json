{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport IconEllipsis from '../../icons/general/IconEllipsis';\nimport PlainButton from '../plain-button';\nimport DropdownMenu from '../dropdown-menu';\nimport { Menu } from '../menu';\nimport { bdlGray50 } from '../../styles/variables';\nimport './Media.scss';\nvar MediaMenu = function MediaMenu(_ref) {\n  var className = _ref.className,\n    children = _ref.children,\n    isDisabled = _ref.isDisabled,\n    dropdownProps = _ref.dropdownProps,\n    menuProps = _ref.menuProps,\n    rest = _objectWithoutProperties(_ref, [\"className\", \"children\", \"isDisabled\", \"dropdownProps\", \"menuProps\"]);\n  return React.createElement(DropdownMenu, _extends({\n    constrainToScrollParent: true,\n    isRightAligned: true\n  }, dropdownProps), React.createElement(PlainButton, _extends({\n    isDisabled: isDisabled,\n    className: classnames('bdl-Media-menu', className),\n    type: \"button\"\n  }, rest), React.createElement(IconEllipsis, {\n    color: bdlGray50,\n    height: 16,\n    width: 16\n  })), React.createElement(Menu, menuProps, children));\n};\nMediaMenu.defaultProps = {\n  dropdownProps: {},\n  isDisabled: false,\n  menuProps: {}\n};\nexport default MediaMenu;","map":{"version":3,"sources":["../../../src/components/media/MediaMenu.js"],"names":["React","classnames","IconEllipsis","PlainButton","DropdownMenu","Menu","bdlGray50","MediaMenu","className","children","isDisabled","dropdownProps","menuProps","rest","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAO,cAAP;AAeA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAA,IAAA,EAAA;EAAA,IAAGC,SAAH,GAAA,IAAA,CAAGA,SAAH;IAAcC,QAAd,GAAA,IAAA,CAAcA,QAAd;IAAwBC,UAAxB,GAAA,IAAA,CAAwBA,UAAxB;IAAoCC,aAApC,GAAA,IAAA,CAAoCA,aAApC;IAAmDC,SAAnD,GAAA,IAAA,CAAmDA,SAAnD;IAAiEC,IAAjE,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,eAAA,EAAA,WAAA,CAAA,CAAA;EAAA,OACd,KAAA,CAAA,aAAA,CAAC,YAAD,EAAA,QAAA,CAAA;IAAc,uBAAuB,EAAA,IAArC;IAAsC,cAAc,EAAA;EAApD,CAAA,EAAyDF,aAAzD,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA,QAAA,CAAA;IACI,UAAU,EAAED,UADhB;IAEI,SAAS,EAAET,UAAU,CAAC,gBAAD,EAAmBO,SAAnB,CAFzB;IAGI,IAAI,EAAC;EAHT,CAAA,EAIQK,IAJR,CAAA,EAMI,KAAA,CAAA,aAAA,CAAC,YAAD,EAAA;IAAc,KAAK,EAAEP,SAArB;IAAgC,MAAM,EAAE,EAAxC;IAA4C,KAAK,EAAE;EAAnD,CAAA,CANJ,CADJ,EASI,KAAA,CAAA,aAAA,CAAC,IAAD,EAAUM,SAAV,EAAsBH,QAAtB,CATJ,CADc;AAAA,CAAlB;AAcAF,SAAS,CAACO,YAAVP,GAAyB;EACrBI,aAAa,EAAE,CAAA,CADM;EAErBD,UAAU,EAAE,KAFS;EAGrBE,SAAS,EAAE,CAAA;AAHU,CAAzBL;AAMA,eAAeA,SAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport IconEllipsis from '../../icons/general/IconEllipsis';\nimport PlainButton from '../plain-button';\nimport DropdownMenu from '../dropdown-menu';\nimport { Menu } from '../menu';\nimport { bdlGray50 } from '../../styles/variables';\nimport './Media.scss';\n\ntype Props = {\n    /** Child elements */\n    children: React.Node,\n    /** Additional class names for the menu button */\n    className?: string,\n    /** Additional props for the DropdownMenu */\n    dropdownProps?: {},\n    /** is the dropdown menu button disabled */\n    isDisabled: boolean,\n    /** Additional props for the Menu */\n    menuProps?: {},\n};\n\nconst MediaMenu = ({ className, children, isDisabled, dropdownProps, menuProps, ...rest }: Props) => (\n    <DropdownMenu constrainToScrollParent isRightAligned {...dropdownProps}>\n        <PlainButton\n            isDisabled={isDisabled}\n            className={classnames('bdl-Media-menu', className)}\n            type=\"button\"\n            {...rest}\n        >\n            <IconEllipsis color={bdlGray50} height={16} width={16} />\n        </PlainButton>\n        <Menu {...menuProps}>{children}</Menu>\n    </DropdownMenu>\n);\n\nMediaMenu.defaultProps = {\n    dropdownProps: {},\n    isDisabled: false,\n    menuProps: {},\n};\n\nexport default MediaMenu;\n"]},"metadata":{},"sourceType":"module"}