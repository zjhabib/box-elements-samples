{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * \n * @file Content Explorer Create Folder Dialog\n * @author Box\n */\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport PrimaryButton from '../../../components/primary-button/PrimaryButton';\nimport Button from '../../../components/button/Button';\nimport messages from '../messages';\nimport { CLASS_MODAL_CONTENT, CLASS_MODAL_OVERLAY, CLASS_MODAL, ERROR_CODE_ITEM_NAME_TOO_LONG, ERROR_CODE_ITEM_NAME_IN_USE } from '../../../constants';\n\n/* eslint-disable jsx-a11y/label-has-for */\nvar CreateFolderDialog = function CreateFolderDialog(_ref) {\n  var isOpen = _ref.isOpen,\n    onCreate = _ref.onCreate,\n    onCancel = _ref.onCancel,\n    isLoading = _ref.isLoading,\n    errorCode = _ref.errorCode,\n    parentElement = _ref.parentElement,\n    appElement = _ref.appElement,\n    intl = _ref.intl;\n  var textInput = null;\n  var error;\n  /**\n   * Appends the extension and calls rename function\n   */\n\n  var create = function create() {\n    if (textInput && textInput.value) {\n      onCreate(textInput.value);\n    }\n  };\n  /**\n   * Grabs reference to the input element\n   */\n\n  var ref = function ref(input) {\n    textInput = input;\n    if (textInput instanceof HTMLInputElement) {\n      textInput.focus();\n      textInput.select();\n    }\n  };\n  /**\n   * Handles enter key down\n   */\n\n  var onKeyDown = function onKeyDown(_ref2) {\n    var key = _ref2.key;\n    switch (key) {\n      case 'Enter':\n        create();\n        break;\n      default:\n        break;\n    }\n  };\n  switch (errorCode) {\n    case ERROR_CODE_ITEM_NAME_IN_USE:\n      error = messages.createDialogErrorInUse;\n      break;\n    case ERROR_CODE_ITEM_NAME_TOO_LONG:\n      error = messages.createDialogErrorTooLong;\n      break;\n    default:\n      error = errorCode ? messages.createDialogErrorInvalid : null;\n      break;\n  }\n  return React.createElement(Modal, {\n    appElement: appElement,\n    className: CLASS_MODAL_CONTENT,\n    contentLabel: intl.formatMessage(messages.createDialogLabel),\n    isOpen: isOpen,\n    onRequestClose: onCancel,\n    overlayClassName: CLASS_MODAL_OVERLAY,\n    parentSelector: function parentSelector() {\n      return parentElement;\n    },\n    portalClassName: CLASS_MODAL\n  }, React.createElement(\"label\", null, error ? React.createElement(\"div\", {\n    className: \"be-modal-error\"\n  }, React.createElement(FormattedMessage, error)) : null, React.createElement(FormattedMessage, _extends({\n    tagName: \"div\"\n  }, messages.createDialogText)), React.createElement(\"input\", {\n    ref: ref,\n    onKeyDown: onKeyDown,\n    required: true,\n    type: \"text\"\n  })), React.createElement(\"div\", {\n    className: \"be-modal-btns\"\n  }, React.createElement(PrimaryButton, {\n    \"data-testid\": \"be-btn-create-folder\",\n    isLoading: isLoading,\n    onClick: create,\n    type: \"button\"\n  }, React.createElement(FormattedMessage, messages.create)), React.createElement(Button, {\n    \"data-testid\": \"be-btn-create-folder-cancel\",\n    isDisabled: isLoading,\n    onClick: onCancel,\n    type: \"button\"\n  }, React.createElement(FormattedMessage, messages.cancel))));\n};\nexport default injectIntl(CreateFolderDialog);","map":{"version":3,"sources":["../../../../src/elements/common/create-folder-dialog/CreateFolderDialog.js"],"names":["React","Modal","injectIntl","FormattedMessage","PrimaryButton","Button","messages","CLASS_MODAL_CONTENT","CLASS_MODAL_OVERLAY","CLASS_MODAL","ERROR_CODE_ITEM_NAME_TOO_LONG","ERROR_CODE_ITEM_NAME_IN_USE","CreateFolderDialog","isOpen","onCreate","onCancel","isLoading","errorCode","parentElement","appElement","intl","textInput","error","create","value","ref","input","HTMLInputElement","focus","select","onKeyDown","key","createDialogErrorInUse","createDialogErrorTooLong","createDialogErrorInvalid","formatMessage","createDialogLabel","createDialogText","cancel"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Explorer Create Folder Dialog\n * @author Box\n */\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport PrimaryButton from '../../../components/primary-button/PrimaryButton';\nimport Button from '../../../components/button/Button';\nimport messages from '../messages';\nimport {\n    CLASS_MODAL_CONTENT,\n    CLASS_MODAL_OVERLAY,\n    CLASS_MODAL,\n    ERROR_CODE_ITEM_NAME_TOO_LONG,\n    ERROR_CODE_ITEM_NAME_IN_USE,\n} from '../../../constants';\n\ntype Props = {\n    appElement: HTMLElement,\n    errorCode: string,\n    isLoading: boolean,\n    isOpen: boolean,\n    onCancel: Function,\n    onCreate: Function,\n    parentElement: HTMLElement,\n} & InjectIntlProvidedProps;\n\n/* eslint-disable jsx-a11y/label-has-for */\nconst CreateFolderDialog = ({\n    isOpen,\n    onCreate,\n    onCancel,\n    isLoading,\n    errorCode,\n    parentElement,\n    appElement,\n    intl,\n}: Props) => {\n    let textInput = null;\n    let error;\n\n    /**\n     * Appends the extension and calls rename function\n     */\n    const create = () => {\n        if (textInput && textInput.value) {\n            onCreate(textInput.value);\n        }\n    };\n\n    /**\n     * Grabs reference to the input element\n     */\n    const ref = input => {\n        textInput = input;\n        if (textInput instanceof HTMLInputElement) {\n            textInput.focus();\n            textInput.select();\n        }\n    };\n\n    /**\n     * Handles enter key down\n     */\n    const onKeyDown = ({ key }) => {\n        switch (key) {\n            case 'Enter':\n                create();\n                break;\n            default:\n                break;\n        }\n    };\n\n    switch (errorCode) {\n        case ERROR_CODE_ITEM_NAME_IN_USE:\n            error = messages.createDialogErrorInUse;\n            break;\n        case ERROR_CODE_ITEM_NAME_TOO_LONG:\n            error = messages.createDialogErrorTooLong;\n            break;\n        default:\n            error = errorCode ? messages.createDialogErrorInvalid : null;\n            break;\n    }\n\n    return (\n        <Modal\n            appElement={appElement}\n            className={CLASS_MODAL_CONTENT}\n            contentLabel={intl.formatMessage(messages.createDialogLabel)}\n            isOpen={isOpen}\n            onRequestClose={onCancel}\n            overlayClassName={CLASS_MODAL_OVERLAY}\n            parentSelector={() => parentElement}\n            portalClassName={CLASS_MODAL}\n        >\n            <label>\n                {error ? (\n                    <div className=\"be-modal-error\">\n                        <FormattedMessage {...error} />\n                    </div>\n                ) : null}\n                <FormattedMessage tagName=\"div\" {...messages.createDialogText} />\n                <input ref={ref} onKeyDown={onKeyDown} required type=\"text\" />\n            </label>\n            <div className=\"be-modal-btns\">\n                <PrimaryButton data-testid=\"be-btn-create-folder\" isLoading={isLoading} onClick={create} type=\"button\">\n                    <FormattedMessage {...messages.create} />\n                </PrimaryButton>\n                <Button\n                    data-testid=\"be-btn-create-folder-cancel\"\n                    isDisabled={isLoading}\n                    onClick={onCancel}\n                    type=\"button\"\n                >\n                    <FormattedMessage {...messages.cancel} />\n                </Button>\n            </div>\n        </Modal>\n    );\n};\n\nexport default injectIntl(CreateFolderDialog);\n"]},"metadata":{},"sourceType":"module"}