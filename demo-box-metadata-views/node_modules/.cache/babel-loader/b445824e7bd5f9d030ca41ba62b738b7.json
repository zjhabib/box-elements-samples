{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Uploads Manager action component\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../common/messages';\nimport PrimaryButton from '../../components/primary-button';\nimport { STATUS_ERROR } from '../../constants';\nimport { RESIN_TAG_TARGET } from '../../common/variables';\nimport './UploadsManagerAction.scss';\nvar UploadsManagerAction = function UploadsManagerAction(_ref) {\n  var onClick = _ref.onClick,\n    hasMultipleFailedUploads = _ref.hasMultipleFailedUploads;\n  var handleResumeClick = function handleResumeClick(event) {\n    event.stopPropagation();\n    onClick(STATUS_ERROR);\n  };\n  var resumeMessage = hasMultipleFailedUploads ? messages.resumeAll : messages.resume;\n  var resin = _defineProperty({}, RESIN_TAG_TARGET, 'uploadresumeheader');\n  return React.createElement(\"div\", {\n    className: \"bcu-uploads-manager-action\"\n  }, React.createElement(PrimaryButton, _extends({\n    onClick: handleResumeClick,\n    type: \"button\"\n  }, resin), React.createElement(FormattedMessage, resumeMessage)));\n};\nexport default UploadsManagerAction;","map":{"version":3,"sources":["../../../src/elements/content-uploader/UploadsManagerAction.js"],"names":["React","FormattedMessage","messages","PrimaryButton","STATUS_ERROR","RESIN_TAG_TARGET","UploadsManagerAction","onClick","hasMultipleFailedUploads","handleResumeClick","event","stopPropagation","resumeMessage","resumeAll","resume","resin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAO,6BAAP;AAOA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,IAAA,EAAkD;EAAA,IAA/CC,OAA+C,GAAA,IAAA,CAA/CA,OAA+C;IAAtCC,wBAAsC,GAAA,IAAA,CAAtCA,wBAAsC;EAC3E,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAK,EAAI;IAC/BC,KAAK,CAACC,eAAND,CAAAA,CAAAA;IACAH,OAAO,CAACH,YAAD,CAAPG;EACH,CAHD;EAKA,IAAMK,aAAa,GAAGJ,wBAAwB,GAAGN,QAAQ,CAACW,SAAZ,GAAwBX,QAAQ,CAACY,MAA/E;EAEA,IAAMC,KAAK,GAAA,eAAA,CAAA,CAAA,CAAA,EAAMV,gBAAN,EAAyB,oBAAzB,CAAX;EAEA,OACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA,QAAA,CAAA;IAAe,OAAO,EAAEI,iBAAxB;IAA2C,IAAI,EAAC;EAAhD,CAAA,EAA6DM,KAA7D,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBH,aAAtB,CADJ,CADJ,CADJ;AAOH,CAjBD;AAmBA,eAAeN,oBAAf","sourcesContent":["/**\n * @flow\n * @file Uploads Manager action component\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../common/messages';\nimport PrimaryButton from '../../components/primary-button';\nimport { STATUS_ERROR } from '../../constants';\nimport { RESIN_TAG_TARGET } from '../../common/variables';\nimport './UploadsManagerAction.scss';\n\ntype Props = {\n    hasMultipleFailedUploads: boolean,\n    onClick: Function,\n};\n\nconst UploadsManagerAction = ({ onClick, hasMultipleFailedUploads }: Props) => {\n    const handleResumeClick = event => {\n        event.stopPropagation();\n        onClick(STATUS_ERROR);\n    };\n\n    const resumeMessage = hasMultipleFailedUploads ? messages.resumeAll : messages.resume;\n\n    const resin = { [RESIN_TAG_TARGET]: 'uploadresumeheader' };\n\n    return (\n        <div className=\"bcu-uploads-manager-action\">\n            <PrimaryButton onClick={handleResumeClick} type=\"button\" {...resin}>\n                <FormattedMessage {...resumeMessage} />\n            </PrimaryButton>\n        </div>\n    );\n};\n\nexport default UploadsManagerAction;\n"]},"metadata":{},"sourceType":"module"}