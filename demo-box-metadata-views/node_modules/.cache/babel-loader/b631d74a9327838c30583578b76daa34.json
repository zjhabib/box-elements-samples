{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Component for Activity feed\n */\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ActiveState from './ActiveState';\nimport CommentForm from '../comment-form';\nimport EmptyState from './EmptyState';\nimport InlineError from '../../../../components/inline-error/InlineError';\nimport LoadingIndicator from '../../../../components/loading-indicator/LoadingIndicator';\nimport messages from './messages';\nimport { collapseFeedState, ItemTypes } from './activityFeedUtils';\nimport { PERMISSION_CAN_CREATE_ANNOTATIONS } from '../../../../constants';\nimport { scrollIntoView } from '../../../../utils/dom';\nimport './ActivityFeed.scss';\nvar ActivityFeed = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ActivityFeed, _React$Component);\n  function ActivityFeed() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, ActivityFeed);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ActivityFeed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isInputOpen: false\n    });\n    _defineProperty(_assertThisInitialized(_this), \"activeFeedItemRef\", React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"isEmpty\", function () {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props,\n        feedItems = _ref.feedItems;\n      if (feedItems === undefined) {\n        return false;\n      }\n      return feedItems.length === 0 || feedItems.length === 1 && feedItems[0].type === ItemTypes.fileVersion;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"hasLoaded\", function (prevCurrentUser, prevFeedItems) {\n      var _this$props = _this.props,\n        currentUser = _this$props.currentUser,\n        feedItems = _this$props.feedItems;\n      return currentUser !== undefined && feedItems !== undefined && (!prevCurrentUser || !prevFeedItems);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"resetFeedScroll\", function () {\n      if (_this.feedContainer) {\n        _this.feedContainer.scrollTop = _this.feedContainer.scrollHeight;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (event) {\n      var nativeEvent = event.nativeEvent;\n      nativeEvent.stopImmediatePropagation();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"commentFormFocusHandler\", function () {\n      _this.resetFeedScroll();\n      _this.setState({\n        isInputOpen: true\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"commentFormCancelHandler\", function () {\n      return _this.setState({\n        isInputOpen: false\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"commentFormSubmitHandler\", function () {\n      return _this.setState({\n        isInputOpen: false\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onCommentCreate\", function (_ref2) {\n      var text = _ref2.text,\n        hasMention = _ref2.hasMention;\n      var _this$props$onComment = _this.props.onCommentCreate,\n        onCommentCreate = _this$props$onComment === void 0 ? noop : _this$props$onComment;\n      onCommentCreate(text, hasMention);\n      _this.commentFormSubmitHandler();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onTaskCreate\", function (_ref3) {\n      var text = _ref3.text,\n        assignees = _ref3.assignees,\n        dueAt = _ref3.dueAt;\n      var _this$props$onTaskCre = _this.props.onTaskCreate,\n        onTaskCreate = _this$props$onTaskCre === void 0 ? noop : _this$props$onTaskCre;\n      onTaskCreate(text, assignees, dueAt);\n      _this.commentFormSubmitHandler();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"openVersionHistoryPopup\", function (data) {\n      var versionInfoHandler = _this.props.onVersionHistoryClick || noop;\n      versionInfoHandler(data);\n    });\n    return _this;\n  }\n  _createClass(ActivityFeed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resetFeedScroll();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var prevActiveFeedEntryId = prevProps.activeFeedEntryId,\n        prevCurrentUser = prevProps.currentUser,\n        prevFeedItems = prevProps.feedItems;\n      var _this$props2 = this.props,\n        currFeedItems = _this$props2.feedItems,\n        activeFeedEntryId = _this$props2.activeFeedEntryId;\n      var prevIsInputOpen = prevState.isInputOpen;\n      var currIsInputOpen = this.state.isInputOpen;\n      var hasLoaded = this.hasLoaded(prevCurrentUser, prevFeedItems);\n      var hasMoreItems = prevFeedItems && currFeedItems && prevFeedItems.length < currFeedItems.length;\n      var didLoadFeedItems = prevFeedItems === undefined && currFeedItems !== undefined;\n      var hasInputOpened = currIsInputOpen !== prevIsInputOpen;\n      var hasActiveFeedEntryIdChanged = activeFeedEntryId !== prevActiveFeedEntryId;\n      if ((hasLoaded || hasMoreItems || didLoadFeedItems || hasInputOpened) && activeFeedEntryId === undefined) {\n        this.resetFeedScroll();\n      }\n      if (didLoadFeedItems || hasActiveFeedEntryIdChanged) {\n        this.scrollToActiveFeedItemOrErrorMessage();\n      }\n    }\n  }, {\n    key: \"scrollToActiveFeedItemOrErrorMessage\",\n    value: function scrollToActiveFeedItemOrErrorMessage() {\n      var activeFeedItemRef = this.activeFeedItemRef.current;\n      var activeFeedEntryId = this.props.activeFeedEntryId; // if there is no active item, do not scroll\n\n      if (!activeFeedEntryId) {\n        return;\n      } // if there was supposed to be an active feed item but the feed item does not exist\n      // scroll to the bottom to show the inline error message\n\n      if (activeFeedItemRef === null) {\n        this.resetFeedScroll();\n        return;\n      }\n      scrollIntoView(activeFeedItemRef);\n    }\n    /**\n     * Detects whether or not the empty state should be shown.\n     * @param {object} currentUser - The user that is logged into the account\n     * @param {object} feedItems - Items in the activity feed\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props3 = this.props,\n        activeFeedEntryId = _this$props3.activeFeedEntryId,\n        activeFeedEntryType = _this$props3.activeFeedEntryType,\n        activityFeedError = _this$props3.activityFeedError,\n        approverSelectorContacts = _this$props3.approverSelectorContacts,\n        currentUser = _this$props3.currentUser,\n        feedItems = _this$props3.feedItems,\n        file = _this$props3.file,\n        getApproverWithQuery = _this$props3.getApproverWithQuery,\n        getAvatarUrl = _this$props3.getAvatarUrl,\n        getMentionWithQuery = _this$props3.getMentionWithQuery,\n        getUserProfileUrl = _this$props3.getUserProfileUrl,\n        isDisabled = _this$props3.isDisabled,\n        mentionSelectorContacts = _this$props3.mentionSelectorContacts,\n        onAnnotationDelete = _this$props3.onAnnotationDelete,\n        onAnnotationSelect = _this$props3.onAnnotationSelect,\n        onAppActivityDelete = _this$props3.onAppActivityDelete,\n        onCommentCreate = _this$props3.onCommentCreate,\n        onCommentDelete = _this$props3.onCommentDelete,\n        onCommentUpdate = _this$props3.onCommentUpdate,\n        onTaskAssignmentUpdate = _this$props3.onTaskAssignmentUpdate,\n        onTaskDelete = _this$props3.onTaskDelete,\n        onTaskModalClose = _this$props3.onTaskModalClose,\n        onTaskUpdate = _this$props3.onTaskUpdate,\n        onTaskView = _this$props3.onTaskView,\n        onVersionHistoryClick = _this$props3.onVersionHistoryClick,\n        translations = _this$props3.translations;\n      var isInputOpen = this.state.isInputOpen;\n      var hasAnnotationCreatePermission = getProp(file, ['permissions', PERMISSION_CAN_CREATE_ANNOTATIONS], false);\n      var hasCommentPermission = getProp(file, 'permissions.can_comment', false);\n      var showCommentForm = !!(currentUser && hasCommentPermission && onCommentCreate && feedItems);\n      var isEmpty = this.isEmpty(this.props);\n      var isLoading = !this.hasLoaded();\n      var activeEntry = Array.isArray(feedItems) && feedItems.find(function (_ref4) {\n        var id = _ref4.id,\n          type = _ref4.type;\n        return id === activeFeedEntryId && type === activeFeedEntryType;\n      });\n      var errorMessageByEntryType = {\n        annotation: messages.annotationMissingError,\n        comment: messages.commentMissingError,\n        task: messages.taskMissingError\n      };\n      var inlineFeedItemErrorMessage = activeFeedEntryType ? errorMessageByEntryType[activeFeedEntryType] : undefined;\n      var isInlineFeedItemErrorVisible = !isLoading && activeFeedEntryType && !activeEntry;\n      var currentFileVersionId = getProp(file, 'file_version.id');\n      return (\n        // eslint-disable-next-line\n        React.createElement(\"div\", {\n          className: \"bcs-activity-feed\",\n          \"data-testid\": \"activityfeed\",\n          onKeyDown: this.onKeyDown\n        }, React.createElement(\"div\", {\n          ref: function ref(_ref5) {\n            _this2.feedContainer = _ref5;\n          },\n          className: \"bcs-activity-feed-items-container\"\n        }, isLoading && React.createElement(\"div\", {\n          className: \"bcs-activity-feed-loading-state\"\n        }, React.createElement(LoadingIndicator, null)), isEmpty && !isLoading && React.createElement(EmptyState, {\n          showAnnotationMessage: hasAnnotationCreatePermission,\n          showCommentMessage: showCommentForm\n        }), !isEmpty && !isLoading && React.createElement(ActiveState, _extends({}, activityFeedError, {\n          items: collapseFeedState(feedItems),\n          isDisabled: isDisabled,\n          currentUser: currentUser,\n          currentFileVersionId: currentFileVersionId,\n          onTaskAssignmentUpdate: onTaskAssignmentUpdate,\n          onAnnotationDelete: onAnnotationDelete,\n          onAnnotationSelect: onAnnotationSelect,\n          onAppActivityDelete: onAppActivityDelete,\n          onCommentDelete: hasCommentPermission ? onCommentDelete : noop,\n          onCommentEdit: hasCommentPermission ? onCommentUpdate : noop,\n          onTaskDelete: onTaskDelete,\n          onTaskEdit: onTaskUpdate,\n          onTaskView: onTaskView,\n          onTaskModalClose: onTaskModalClose,\n          onVersionInfo: onVersionHistoryClick ? this.openVersionHistoryPopup : null,\n          translations: translations,\n          getAvatarUrl: getAvatarUrl,\n          getUserProfileUrl: getUserProfileUrl,\n          mentionSelectorContacts: mentionSelectorContacts,\n          getMentionWithQuery: getMentionWithQuery,\n          approverSelectorContacts: approverSelectorContacts,\n          getApproverWithQuery: getApproverWithQuery,\n          activeFeedEntryId: activeFeedEntryId,\n          activeFeedEntryType: activeFeedEntryType,\n          activeFeedItemRef: this.activeFeedItemRef\n        })), isInlineFeedItemErrorVisible && inlineFeedItemErrorMessage && React.createElement(InlineError, {\n          title: React.createElement(FormattedMessage, messages.feedInlineErrorTitle),\n          className: \"bcs-feedItemInlineError\"\n        }, React.createElement(FormattedMessage, inlineFeedItemErrorMessage))), showCommentForm ? React.createElement(CommentForm, {\n          onSubmit: this.resetFeedScroll,\n          isDisabled: isDisabled,\n          mentionSelectorContacts: mentionSelectorContacts,\n          className: classNames('bcs-activity-feed-comment-input', {\n            'bcs-is-disabled': isDisabled\n          }),\n          createComment: hasCommentPermission ? this.onCommentCreate : noop,\n          getMentionWithQuery: getMentionWithQuery,\n          isOpen: isInputOpen // $FlowFixMe\n          ,\n\n          user: currentUser,\n          onCancel: this.commentFormCancelHandler,\n          onFocus: this.commentFormFocusHandler,\n          getAvatarUrl: getAvatarUrl\n        }) : null)\n      );\n    }\n  }]);\n  return ActivityFeed;\n}(React.Component);\nexport default ActivityFeed;","map":{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/activity-feed/ActivityFeed.js"],"names":["React","getProp","noop","FormattedMessage","classNames","ActiveState","CommentForm","EmptyState","InlineError","LoadingIndicator","messages","collapseFeedState","ItemTypes","PERMISSION_CAN_CREATE_ANNOTATIONS","scrollIntoView","ActivityFeed","Component","isInputOpen","createRef","resetFeedScroll","prevProps","prevState","activeFeedEntryId","prevActiveFeedEntryId","currentUser","prevCurrentUser","feedItems","prevFeedItems","currFeedItems","props","prevIsInputOpen","currIsInputOpen","state","hasLoaded","hasMoreItems","length","didLoadFeedItems","undefined","hasInputOpened","hasActiveFeedEntryIdChanged","scrollToActiveFeedItemOrErrorMessage","current","activeFeedItemRef","type","fileVersion","feedContainer","scrollTop","scrollHeight","event","nativeEvent","stopImmediatePropagation","setState","text","hasMention","onCommentCreate","commentFormSubmitHandler","assignees","dueAt","onTaskCreate","data","versionInfoHandler","onVersionHistoryClick","activeFeedEntryType","activityFeedError","approverSelectorContacts","file","getApproverWithQuery","getAvatarUrl","getMentionWithQuery","getUserProfileUrl","isDisabled","mentionSelectorContacts","onAnnotationDelete","onAnnotationSelect","onAppActivityDelete","onCommentDelete","onCommentUpdate","onTaskAssignmentUpdate","onTaskDelete","onTaskModalClose","onTaskUpdate","onTaskView","translations","hasAnnotationCreatePermission","hasCommentPermission","showCommentForm","isEmpty","isLoading","activeEntry","Array","isArray","find","id","errorMessageByEntryType","annotation","annotationMissingError","comment","commentMissingError","task","taskMissingError","inlineFeedItemErrorMessage","isInlineFeedItemErrorVisible","currentFileVersionId","onKeyDown","ref","openVersionHistoryPopup","feedInlineErrorTitle","commentFormCancelHandler","commentFormFocusHandler"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Component for Activity feed\n */\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ActiveState from './ActiveState';\nimport CommentForm from '../comment-form';\nimport EmptyState from './EmptyState';\nimport InlineError from '../../../../components/inline-error/InlineError';\nimport LoadingIndicator from '../../../../components/loading-indicator/LoadingIndicator';\nimport messages from './messages';\nimport { collapseFeedState, ItemTypes } from './activityFeedUtils';\nimport { PERMISSION_CAN_CREATE_ANNOTATIONS } from '../../../../constants';\nimport { scrollIntoView } from '../../../../utils/dom';\nimport type { Annotation, AnnotationPermission, FocusableFeedItemType, FeedItems } from '../../../../common/types/feed';\nimport type { SelectorItems, User, GroupMini, BoxItem } from '../../../../common/types/core';\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations, Errors } from '../../flowTypes';\nimport './ActivityFeed.scss';\n\ntype Props = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    activityFeedError: ?Errors,\n    approverSelectorContacts?: SelectorItems<User | GroupMini>,\n    currentUser?: User,\n    feedItems?: FeedItems,\n    file: BoxItem,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    isDisabled?: boolean,\n    mentionSelectorContacts?: SelectorItems<User>,\n    onAnnotationDelete?: ({ id: string, permissions: AnnotationPermission }) => void,\n    onAnnotationSelect?: (annotation: Annotation) => void,\n    onAppActivityDelete?: Function,\n    onCommentCreate?: Function,\n    onCommentDelete?: Function,\n    onCommentUpdate?: Function,\n    onTaskAssignmentUpdate?: Function,\n    onTaskCreate?: Function,\n    onTaskDelete?: Function,\n    onTaskModalClose?: Function,\n    onTaskUpdate?: Function,\n    onTaskView?: Function,\n    onVersionHistoryClick?: Function,\n    translations?: Translations,\n};\n\ntype State = {\n    isInputOpen: boolean,\n};\n\nclass ActivityFeed extends React.Component<Props, State> {\n    state = {\n        isInputOpen: false,\n    };\n\n    activeFeedItemRef = React.createRef<null | HTMLElement>();\n\n    feedContainer: null | HTMLElement;\n\n    componentDidMount() {\n        this.resetFeedScroll();\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        const {\n            activeFeedEntryId: prevActiveFeedEntryId,\n            currentUser: prevCurrentUser,\n            feedItems: prevFeedItems,\n        } = prevProps;\n        const { feedItems: currFeedItems, activeFeedEntryId } = this.props;\n        const { isInputOpen: prevIsInputOpen } = prevState;\n        const { isInputOpen: currIsInputOpen } = this.state;\n\n        const hasLoaded = this.hasLoaded(prevCurrentUser, prevFeedItems);\n        const hasMoreItems = prevFeedItems && currFeedItems && prevFeedItems.length < currFeedItems.length;\n        const didLoadFeedItems = prevFeedItems === undefined && currFeedItems !== undefined;\n        const hasInputOpened = currIsInputOpen !== prevIsInputOpen;\n        const hasActiveFeedEntryIdChanged = activeFeedEntryId !== prevActiveFeedEntryId;\n\n        if ((hasLoaded || hasMoreItems || didLoadFeedItems || hasInputOpened) && activeFeedEntryId === undefined) {\n            this.resetFeedScroll();\n        }\n\n        if (didLoadFeedItems || hasActiveFeedEntryIdChanged) {\n            this.scrollToActiveFeedItemOrErrorMessage();\n        }\n    }\n\n    scrollToActiveFeedItemOrErrorMessage() {\n        const { current: activeFeedItemRef } = this.activeFeedItemRef;\n        const { activeFeedEntryId } = this.props;\n\n        // if there is no active item, do not scroll\n        if (!activeFeedEntryId) {\n            return;\n        }\n\n        // if there was supposed to be an active feed item but the feed item does not exist\n        // scroll to the bottom to show the inline error message\n        if (activeFeedItemRef === null) {\n            this.resetFeedScroll();\n            return;\n        }\n\n        scrollIntoView(activeFeedItemRef);\n    }\n\n    /**\n     * Detects whether or not the empty state should be shown.\n     * @param {object} currentUser - The user that is logged into the account\n     * @param {object} feedItems - Items in the activity feed\n     */\n    isEmpty = ({ feedItems }: Props = this.props): boolean => {\n        if (feedItems === undefined) {\n            return false;\n        }\n        return feedItems.length === 0 || (feedItems.length === 1 && feedItems[0].type === ItemTypes.fileVersion);\n    };\n\n    /**\n     * Determines whether currentUser and feedItems have loaded.\n     * @param prevCurrentUser - The previous value of the currentUser prop\n     * @param prevFeedItems - The previous value of the feedItems prop\n     * @returns {boolean}\n     */\n    hasLoaded = (prevCurrentUser?: User, prevFeedItems?: FeedItems): boolean => {\n        const { currentUser, feedItems } = this.props;\n        return currentUser !== undefined && feedItems !== undefined && (!prevCurrentUser || !prevFeedItems);\n    };\n\n    /**\n     * Scrolls the container to the bottom\n     */\n    resetFeedScroll = () => {\n        if (this.feedContainer) {\n            this.feedContainer.scrollTop = this.feedContainer.scrollHeight;\n        }\n    };\n\n    onKeyDown = (event: SyntheticKeyboardEvent<>): void => {\n        const { nativeEvent } = event;\n        nativeEvent.stopImmediatePropagation();\n    };\n\n    commentFormFocusHandler = (): void => {\n        this.resetFeedScroll();\n        this.setState({ isInputOpen: true });\n    };\n\n    commentFormCancelHandler = (): void => this.setState({ isInputOpen: false });\n\n    commentFormSubmitHandler = (): void => this.setState({ isInputOpen: false });\n\n    onCommentCreate = ({ text, hasMention }: { hasMention: boolean, text: string }) => {\n        const { onCommentCreate = noop } = this.props;\n        onCommentCreate(text, hasMention);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Creates a task.\n     *\n     * @param {string} text - Task text\n     * @param {Array} assignees - List of assignees\n     * @param {number} dueAt - Task's due date\n     * @return {void}\n     */\n    onTaskCreate = ({ text, assignees, dueAt }: { assignees: SelectorItems<>, dueAt: string, text: string }): void => {\n        const { onTaskCreate = noop } = this.props;\n        onTaskCreate(text, assignees, dueAt);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Invokes version history popup handler.\n     *\n     * @param {Object} data - Version history data\n     * @return {void}\n     */\n    openVersionHistoryPopup = (data: any): void => {\n        const versionInfoHandler = this.props.onVersionHistoryClick || noop;\n        versionInfoHandler(data);\n    };\n\n    render(): React.Node {\n        const {\n            activeFeedEntryId,\n            activeFeedEntryType,\n            activityFeedError,\n            approverSelectorContacts,\n            currentUser,\n            feedItems,\n            file,\n            getApproverWithQuery,\n            getAvatarUrl,\n            getMentionWithQuery,\n            getUserProfileUrl,\n            isDisabled,\n            mentionSelectorContacts,\n            onAnnotationDelete,\n            onAnnotationSelect,\n            onAppActivityDelete,\n            onCommentCreate,\n            onCommentDelete,\n            onCommentUpdate,\n            onTaskAssignmentUpdate,\n            onTaskDelete,\n            onTaskModalClose,\n            onTaskUpdate,\n            onTaskView,\n            onVersionHistoryClick,\n            translations,\n        } = this.props;\n        const { isInputOpen } = this.state;\n        const hasAnnotationCreatePermission = getProp(file, ['permissions', PERMISSION_CAN_CREATE_ANNOTATIONS], false);\n        const hasCommentPermission = getProp(file, 'permissions.can_comment', false);\n        const showCommentForm = !!(currentUser && hasCommentPermission && onCommentCreate && feedItems);\n\n        const isEmpty = this.isEmpty(this.props);\n        const isLoading = !this.hasLoaded();\n\n        const activeEntry =\n            Array.isArray(feedItems) &&\n            feedItems.find(({ id, type }) => id === activeFeedEntryId && type === activeFeedEntryType);\n\n        const errorMessageByEntryType = {\n            annotation: messages.annotationMissingError,\n            comment: messages.commentMissingError,\n            task: messages.taskMissingError,\n        };\n\n        const inlineFeedItemErrorMessage = activeFeedEntryType\n            ? errorMessageByEntryType[activeFeedEntryType]\n            : undefined;\n\n        const isInlineFeedItemErrorVisible = !isLoading && activeFeedEntryType && !activeEntry;\n        const currentFileVersionId = getProp(file, 'file_version.id');\n\n        return (\n            // eslint-disable-next-line\n            <div className=\"bcs-activity-feed\" data-testid=\"activityfeed\" onKeyDown={this.onKeyDown}>\n                <div\n                    ref={ref => {\n                        this.feedContainer = ref;\n                    }}\n                    className=\"bcs-activity-feed-items-container\"\n                >\n                    {isLoading && (\n                        <div className=\"bcs-activity-feed-loading-state\">\n                            <LoadingIndicator />\n                        </div>\n                    )}\n\n                    {isEmpty && !isLoading && (\n                        <EmptyState\n                            showAnnotationMessage={hasAnnotationCreatePermission}\n                            showCommentMessage={showCommentForm}\n                        />\n                    )}\n                    {!isEmpty && !isLoading && (\n                        <ActiveState\n                            {...activityFeedError}\n                            items={collapseFeedState(feedItems)}\n                            isDisabled={isDisabled}\n                            currentUser={currentUser}\n                            currentFileVersionId={currentFileVersionId}\n                            onTaskAssignmentUpdate={onTaskAssignmentUpdate}\n                            onAnnotationDelete={onAnnotationDelete}\n                            onAnnotationSelect={onAnnotationSelect}\n                            onAppActivityDelete={onAppActivityDelete}\n                            onCommentDelete={hasCommentPermission ? onCommentDelete : noop}\n                            onCommentEdit={hasCommentPermission ? onCommentUpdate : noop}\n                            onTaskDelete={onTaskDelete}\n                            onTaskEdit={onTaskUpdate}\n                            onTaskView={onTaskView}\n                            onTaskModalClose={onTaskModalClose}\n                            onVersionInfo={onVersionHistoryClick ? this.openVersionHistoryPopup : null}\n                            translations={translations}\n                            getAvatarUrl={getAvatarUrl}\n                            getUserProfileUrl={getUserProfileUrl}\n                            mentionSelectorContacts={mentionSelectorContacts}\n                            getMentionWithQuery={getMentionWithQuery}\n                            approverSelectorContacts={approverSelectorContacts}\n                            getApproverWithQuery={getApproverWithQuery}\n                            activeFeedEntryId={activeFeedEntryId}\n                            activeFeedEntryType={activeFeedEntryType}\n                            activeFeedItemRef={this.activeFeedItemRef}\n                        />\n                    )}\n                    {isInlineFeedItemErrorVisible && inlineFeedItemErrorMessage && (\n                        <InlineError\n                            title={<FormattedMessage {...messages.feedInlineErrorTitle} />}\n                            className=\"bcs-feedItemInlineError\"\n                        >\n                            <FormattedMessage {...inlineFeedItemErrorMessage} />\n                        </InlineError>\n                    )}\n                </div>\n\n                {showCommentForm ? (\n                    <CommentForm\n                        onSubmit={this.resetFeedScroll}\n                        isDisabled={isDisabled}\n                        mentionSelectorContacts={mentionSelectorContacts}\n                        className={classNames('bcs-activity-feed-comment-input', {\n                            'bcs-is-disabled': isDisabled,\n                        })}\n                        createComment={hasCommentPermission ? this.onCommentCreate : noop}\n                        getMentionWithQuery={getMentionWithQuery}\n                        isOpen={isInputOpen}\n                        // $FlowFixMe\n                        user={currentUser}\n                        onCancel={this.commentFormCancelHandler}\n                        onFocus={this.commentFormFocusHandler}\n                        getAvatarUrl={getAvatarUrl}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default ActivityFeed;\n"]},"metadata":{},"sourceType":"module"}