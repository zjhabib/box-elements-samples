{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * \n * @file Content Explorer Delete Confirmation Dialog\n * @author Box\n */\nimport React from 'react';\nimport Modal from 'react-modal';\nimport noop from 'lodash/noop';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport PrimaryButton from '../../components/primary-button/PrimaryButton';\nimport Button from '../../components/button/Button';\nimport messages from '../common/messages';\nimport ShareAccessSelect from '../common/share-access-select';\nimport { CLASS_MODAL_CONTENT, CLASS_MODAL_OVERLAY, CLASS_MODAL } from '../../constants';\nimport './ShareDialog.scss';\nvar ShareDialog = function ShareDialog(_ref) {\n  var isOpen = _ref.isOpen,\n    canSetShareAccess = _ref.canSetShareAccess,\n    onShareAccessChange = _ref.onShareAccessChange,\n    onCancel = _ref.onCancel,\n    item = _ref.item,\n    isLoading = _ref.isLoading,\n    parentElement = _ref.parentElement,\n    appElement = _ref.appElement,\n    intl = _ref.intl;\n  var textInput = null;\n  var copy = function copy() {\n    if (textInput instanceof HTMLInputElement) {\n      textInput.select();\n      document.execCommand('copy');\n    }\n  };\n  var sharedLink = item.shared_link;\n  var _ref2 = sharedLink || {\n      url: intl.formatMessage(messages.shareDialogNone)\n    },\n    url = _ref2.url;\n  /* eslint-disable jsx-a11y/label-has-for */\n\n  return React.createElement(Modal, {\n    appElement: appElement,\n    className: CLASS_MODAL_CONTENT,\n    contentLabel: intl.formatMessage(messages.shareDialogLabel),\n    isOpen: isOpen,\n    onRequestClose: onCancel,\n    overlayClassName: CLASS_MODAL_OVERLAY,\n    parentSelector: function parentSelector() {\n      return parentElement;\n    },\n    portalClassName: \"\".concat(CLASS_MODAL, \" be-modal-share\")\n  }, React.createElement(\"div\", {\n    className: \"be-modal-content\"\n  }, React.createElement(\"label\", null, React.createElement(FormattedMessage, _extends({\n    tagName: \"div\"\n  }, messages.shareDialogText))), React.createElement(\"div\", {\n    className: \"be-modal-input-group\"\n  }, React.createElement(\"input\", {\n    ref: function ref(input) {\n      textInput = input;\n    },\n    onChange: noop,\n    type: \"text\",\n    value: url\n  }), React.createElement(PrimaryButton, {\n    autoFocus: true,\n    className: \"be-modal-button-copy\",\n    onClick: copy,\n    type: \"button\"\n  }, React.createElement(FormattedMessage, messages.copy)))), React.createElement(\"div\", {\n    className: \"be-modal-btns\"\n  }, React.createElement(ShareAccessSelect, {\n    canSetShareAccess: canSetShareAccess,\n    className: \"bce-shared-access-select\",\n    item: item,\n    onChange: onShareAccessChange\n  }), React.createElement(Button, {\n    isLoading: isLoading,\n    onClick: onCancel,\n    type: \"button\"\n  }, React.createElement(FormattedMessage, messages.close))));\n};\nexport default injectIntl(ShareDialog);","map":{"version":3,"sources":["../../../src/elements/content-explorer/ShareDialog.js"],"names":["React","Modal","noop","injectIntl","FormattedMessage","PrimaryButton","Button","messages","ShareAccessSelect","CLASS_MODAL_CONTENT","CLASS_MODAL_OVERLAY","CLASS_MODAL","ShareDialog","isOpen","canSetShareAccess","onShareAccessChange","onCancel","item","isLoading","parentElement","appElement","intl","textInput","copy","HTMLInputElement","select","document","execCommand","shared_link","sharedLink","url","formatMessage","shareDialogNone","shareDialogLabel","shareDialogText","input","close"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Explorer Delete Confirmation Dialog\n * @author Box\n */\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport noop from 'lodash/noop';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport PrimaryButton from '../../components/primary-button/PrimaryButton';\nimport Button from '../../components/button/Button';\nimport messages from '../common/messages';\nimport ShareAccessSelect from '../common/share-access-select';\nimport { CLASS_MODAL_CONTENT, CLASS_MODAL_OVERLAY, CLASS_MODAL } from '../../constants';\nimport type { BoxItem } from '../../common/types/core';\n\nimport './ShareDialog.scss';\n\ntype Props = {\n    appElement: HTMLElement,\n    canSetShareAccess: boolean,\n    isLoading: boolean,\n    isOpen: boolean,\n    item: BoxItem,\n    onCancel: Function,\n    onShareAccessChange: Function,\n    parentElement: HTMLElement,\n} & InjectIntlProvidedProps;\n\nconst ShareDialog = ({\n    isOpen,\n    canSetShareAccess,\n    onShareAccessChange,\n    onCancel,\n    item,\n    isLoading,\n    parentElement,\n    appElement,\n    intl,\n}: Props) => {\n    let textInput = null;\n\n    const copy = () => {\n        if (textInput instanceof HTMLInputElement) {\n            textInput.select();\n            document.execCommand('copy');\n        }\n    };\n\n    const { shared_link: sharedLink }: BoxItem = item;\n    const { url } = sharedLink || {\n        url: intl.formatMessage(messages.shareDialogNone),\n    };\n\n    /* eslint-disable jsx-a11y/label-has-for */\n    return (\n        <Modal\n            appElement={appElement}\n            className={CLASS_MODAL_CONTENT}\n            contentLabel={intl.formatMessage(messages.shareDialogLabel)}\n            isOpen={isOpen}\n            onRequestClose={onCancel}\n            overlayClassName={CLASS_MODAL_OVERLAY}\n            parentSelector={() => parentElement}\n            portalClassName={`${CLASS_MODAL} be-modal-share`}\n        >\n            <div className=\"be-modal-content\">\n                <label>\n                    <FormattedMessage tagName=\"div\" {...messages.shareDialogText} />\n                </label>\n                <div className=\"be-modal-input-group\">\n                    <input\n                        ref={input => {\n                            textInput = input;\n                        }}\n                        onChange={noop}\n                        type=\"text\"\n                        value={url}\n                    />\n                    <PrimaryButton autoFocus className=\"be-modal-button-copy\" onClick={copy} type=\"button\">\n                        <FormattedMessage {...messages.copy} />\n                    </PrimaryButton>\n                </div>\n            </div>\n            <div className=\"be-modal-btns\">\n                <ShareAccessSelect\n                    canSetShareAccess={canSetShareAccess}\n                    className=\"bce-shared-access-select\"\n                    item={item}\n                    onChange={onShareAccessChange}\n                />\n                <Button isLoading={isLoading} onClick={onCancel} type=\"button\">\n                    <FormattedMessage {...messages.close} />\n                </Button>\n            </div>\n        </Modal>\n    );\n};\n\nexport default injectIntl(ShareDialog);\n"]},"metadata":{},"sourceType":"module"}