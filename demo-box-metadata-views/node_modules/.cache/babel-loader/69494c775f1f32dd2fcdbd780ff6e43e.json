{"ast":null,"code":"import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PlainButton from '../../components/plain-button';\nimport Button from '../../components/button';\nimport Tooltip from '../../components/tooltip';\nimport IconCheck from '../../icons/general/IconCheck';\nimport IconClose from '../../icons/general/IconClose';\nimport IconPencil from '../../icons/general/IconPencil';\nimport { bdlGray62 } from '../../styles/variables';\nimport { CANCEL_ICON_TYPE, EDIT_ICON_TYPE, SAVE_ICON_TYPE } from './constants';\nvar IconWithTooltip = function IconWithTooltip(_ref) {\n  var className = _ref.className,\n    isUpdating = _ref.isUpdating,\n    onClick = _ref.onClick,\n    tooltipText = _ref.tooltipText,\n    type = _ref.type;\n  var iconBtn;\n  switch (type) {\n    case CANCEL_ICON_TYPE:\n      iconBtn = React.createElement(PlainButton, {\n        className: className,\n        type: \"button\",\n        onClick: onClick\n      }, React.createElement(IconClose, {\n        color: bdlGray62,\n        width: 16,\n        height: 16\n      }));\n      break;\n    case EDIT_ICON_TYPE:\n      iconBtn = React.createElement(PlainButton, {\n        className: className,\n        type: \"button\",\n        onClick: onClick\n      }, React.createElement(IconPencil, {\n        color: bdlGray62\n      }));\n      break;\n    case SAVE_ICON_TYPE:\n      iconBtn = React.createElement(Button, {\n        className: className,\n        isLoading: isUpdating,\n        type: \"button\",\n        onClick: onClick\n      }, React.createElement(IconCheck, {\n        color: bdlGray62,\n        width: 16,\n        height: 16\n      }));\n      break;\n    default:\n      return null;\n  }\n  return React.createElement(Tooltip, {\n    text: tooltipText\n  }, iconBtn);\n};\nexport default IconWithTooltip;","map":{"version":3,"sources":["../../../src/features/metadata-based-view/IconWithTooltip.js"],"names":["React","FormattedMessage","PlainButton","Button","Tooltip","IconCheck","IconClose","IconPencil","bdlGray62","CANCEL_ICON_TYPE","EDIT_ICON_TYPE","SAVE_ICON_TYPE","IconWithTooltip","className","isUpdating","onClick","tooltipText","type","iconBtn"],"mappings":"AAEA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,EAA2CC,cAA3C,QAAiE,aAAjE;AAWA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAA,IAAA,EAMqB;EAAA,IALzCC,SAKyC,GAAA,IAAA,CALzCA,SAKyC;IAJzCC,UAIyC,GAAA,IAAA,CAJzCA,UAIyC;IAHzCC,OAGyC,GAAA,IAAA,CAHzCA,OAGyC;IAFzCC,WAEyC,GAAA,IAAA,CAFzCA,WAEyC;IADzCC,IACyC,GAAA,IAAA,CADzCA,IACyC;EACzC,IAAIC,OAAJ;EAEA,QAAQD,IAAR;IACI,KAAKR,gBAAL;MACIS,OAAO,GACH,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA;QAAa,SAAS,EAAEL,SAAxB;QAAmC,IAAI,EAAC,QAAxC;QAAiD,OAAO,EAAEE;MAA1D,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA;QAAW,KAAK,EAAEP,SAAlB;QAA6B,KAAK,EAAE,EAApC;QAAwC,MAAM,EAAE;MAAhD,CAAA,CADJ,CADJU;MAKA;IACJ,KAAKR,cAAL;MACIQ,OAAO,GACH,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA;QAAa,SAAS,EAAEL,SAAxB;QAAmC,IAAI,EAAC,QAAxC;QAAiD,OAAO,EAAEE;MAA1D,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,UAAD,EAAA;QAAY,KAAK,EAAEP;MAAnB,CAAA,CADJ,CADJU;MAKA;IACJ,KAAKP,cAAL;MACIO,OAAO,GACH,KAAA,CAAA,aAAA,CAAC,MAAD,EAAA;QAAQ,SAAS,EAAEL,SAAnB;QAA8B,SAAS,EAAEC,UAAzC;QAAqD,IAAI,EAAC,QAA1D;QAAmE,OAAO,EAAEC;MAA5E,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA;QAAW,KAAK,EAAEP,SAAlB;QAA6B,KAAK,EAAE,EAApC;QAAwC,MAAM,EAAE;MAAhD,CAAA,CADJ,CADJU;MAKA;IACJ;MACI,OAAO,IAAP;EAvBR;EA0BA,OAAO,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA;IAAS,IAAI,EAAEF;EAAf,CAAA,EAA6BE,OAA7B,CAAP;AACH,CApCD;AAsCA,eAAeN,eAAf","sourcesContent":["// @flow strict\n\nimport React, { type Element } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\nimport Button from '../../components/button';\nimport Tooltip from '../../components/tooltip';\nimport IconCheck from '../../icons/general/IconCheck';\nimport IconClose from '../../icons/general/IconClose';\nimport IconPencil from '../../icons/general/IconPencil';\n\nimport { bdlGray62 } from '../../styles/variables';\n\nimport { CANCEL_ICON_TYPE, EDIT_ICON_TYPE, SAVE_ICON_TYPE } from './constants';\n\ntype IconType = typeof CANCEL_ICON_TYPE | typeof EDIT_ICON_TYPE | typeof SAVE_ICON_TYPE;\ntype Props = {\n    className?: string,\n    isUpdating?: boolean,\n    onClick: void => void,\n    tooltipText: Element<typeof FormattedMessage>,\n    type?: IconType,\n};\n\nconst IconWithTooltip = ({\n    className,\n    isUpdating,\n    onClick,\n    tooltipText,\n    type,\n}: Props): Element<typeof Tooltip> | null => {\n    let iconBtn;\n\n    switch (type) {\n        case CANCEL_ICON_TYPE:\n            iconBtn = (\n                <PlainButton className={className} type=\"button\" onClick={onClick}>\n                    <IconClose color={bdlGray62} width={16} height={16} />\n                </PlainButton>\n            );\n            break;\n        case EDIT_ICON_TYPE:\n            iconBtn = (\n                <PlainButton className={className} type=\"button\" onClick={onClick}>\n                    <IconPencil color={bdlGray62} />\n                </PlainButton>\n            );\n            break;\n        case SAVE_ICON_TYPE:\n            iconBtn = (\n                <Button className={className} isLoading={isUpdating} type=\"button\" onClick={onClick}>\n                    <IconCheck color={bdlGray62} width={16} height={16} />\n                </Button>\n            );\n            break;\n        default:\n            return null;\n    }\n\n    return <Tooltip text={tooltipText}>{iconBtn}</Tooltip>;\n};\n\nexport default IconWithTooltip;\n"]},"metadata":{},"sourceType":"module"}