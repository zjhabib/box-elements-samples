{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport InlineError from '../../../../../components/inline-error';\nimport PlainButton from '../../../../../components/plain-button';\nimport './ActivityError.scss';\nvar ActivityError = function ActivityError(_ref) {\n  var action = _ref.action,\n    message = _ref.message,\n    title = _ref.title,\n    className = _ref.className,\n    rest = _objectWithoutProperties(_ref, [\"action\", \"message\", \"title\", \"className\"]);\n  return React.createElement(InlineError, {\n    className: classnames('bcs-ActivityError', className),\n    title: React.createElement(FormattedMessage, _extends({}, title, rest))\n  }, React.createElement(\"div\", null, React.createElement(FormattedMessage, message)), action ? React.createElement(PlainButton, {\n    className: \"bcs-ActivityError-action lnk\",\n    onClick: action.onAction,\n    type: \"button\"\n  }, action.text) : null);\n};\nexport default ActivityError;","map":{"version":3,"sources":["../../../../../../src/elements/content-sidebar/activity-feed/common/activity-error/ActivityError.js"],"names":["React","FormattedMessage","classnames","InlineError","PlainButton","ActivityError","action","message","title","className","rest","onAction","text"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAO,sBAAP;AAYA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAA;EAAA,IAAGC,MAAH,GAAA,IAAA,CAAGA,MAAH;IAAWC,OAAX,GAAA,IAAA,CAAWA,OAAX;IAAoBC,KAApB,GAAA,IAAA,CAAoBA,KAApB;IAA2BC,SAA3B,GAAA,IAAA,CAA2BA,SAA3B;IAAyCC,IAAzC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,OAAA,EAAA,WAAA,CAAA,CAAA;EAAA,OAClB,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA;IACI,SAAS,EAAER,UAAU,CAAC,mBAAD,EAAsBO,SAAtB,CADzB;IAEI,KAAK,EAAE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAsBD,KAAtB,EAAiCE,IAAjC,CAAA;EAFX,CAAA,EAII,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBH,OAAtB,CADJ,CAJJ,EAOKD,MAAM,GACH,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA;IAAa,SAAS,EAAC,8BAAvB;IAAsD,OAAO,EAAEA,MAAM,CAACK,QAAtE;IAAgF,IAAI,EAAC;EAArF,CAAA,EACKL,MAAM,CAACM,IADZ,CADG,GAIH,IAXR,CADkB;AAAA,CAAtB;AAgBA,eAAeP,aAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport type { MessageDescriptor } from 'react-intl';\nimport classnames from 'classnames';\nimport InlineError from '../../../../../components/inline-error';\nimport PlainButton from '../../../../../components/plain-button';\nimport './ActivityError.scss';\n\ntype Props = {\n    action?: {\n        onAction: Function,\n        text: string,\n    },\n    className?: string,\n    message: MessageDescriptor,\n    title: MessageDescriptor,\n};\n\nconst ActivityError = ({ action, message, title, className, ...rest }: Props): React.Node => (\n    <InlineError\n        className={classnames('bcs-ActivityError', className)}\n        title={<FormattedMessage {...title} {...rest} />}\n    >\n        <div>\n            <FormattedMessage {...message} />\n        </div>\n        {action ? (\n            <PlainButton className=\"bcs-ActivityError-action lnk\" onClick={action.onAction} type=\"button\">\n                {action.text}\n            </PlainButton>\n        ) : null}\n    </InlineError>\n);\n\nexport default ActivityError;\n"]},"metadata":{},"sourceType":"module"}