{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\n/**\n * \n * @file Marker-based helper for the Box Groups API\n * @author Box\n */\nimport MarkerBasedAPI from './MarkerBasedAPI';\nimport { DEFAULT_MAX_CONTACTS, ERROR_CODE_FETCH_ENTERPRISE_GROUPS } from '../constants';\nvar MarkerBasedGroups = /*#__PURE__*/\nfunction (_MarkerBasedAPI) {\n  _inherits(MarkerBasedGroups, _MarkerBasedAPI);\n  function MarkerBasedGroups() {\n    _classCallCheck(this, MarkerBasedGroups);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MarkerBasedGroups).apply(this, arguments));\n  }\n  _createClass(MarkerBasedGroups, [{\n    key: \"getUrl\",\n    /**\n     * API URL for fetching all groups that are visible to the current user\n     *\n     * @returns {string} URL for fetching groups\n     */\n    value: function getUrl() {\n      return \"\".concat(this.getBaseApiUrl(), \"/groups\");\n    }\n    /**\n     * API for fetching all groups in the current user's enterprise\n     *\n     * @param {string} id - Box item ID\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @param {Object} [requestData] - Opitional additional request data\n     * @param {Object} [limit] - Max number of groups to return\n     * @returns {void}\n     */\n  }, {\n    key: \"getGroupsInEnterprise\",\n    value: function getGroupsInEnterprise(id, successCallback, errorCallback, requestData) {\n      var limit = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : DEFAULT_MAX_CONTACTS;\n      this.errorCode = ERROR_CODE_FETCH_ENTERPRISE_GROUPS;\n      this.markerGet({\n        id: id,\n        limit: limit,\n        successCallback: successCallback,\n        errorCallback: errorCallback,\n        requestData: _objectSpread({\n          usemarker: true\n        }, requestData),\n        shouldFetchAll: false\n      });\n    }\n  }]);\n  return MarkerBasedGroups;\n}(MarkerBasedAPI);\nexport default MarkerBasedGroups;","map":{"version":3,"sources":["../../src/api/MarkerBasedGroups.js"],"names":["MarkerBasedAPI","DEFAULT_MAX_CONTACTS","ERROR_CODE_FETCH_ENTERPRISE_GROUPS","MarkerBasedGroups","getBaseApiUrl","id","successCallback","errorCallback","requestData","limit","errorCode","markerGet","usemarker","shouldFetchAll"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAKA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,oBAAT,EAA+BC,kCAA/B,QAAyE,cAAzE;IAGMC,iB;;;;;;;;;IACF;;;;;6BAKiB;MACb,OAAA,EAAA,CAAA,MAAA,CAAU,IAAA,CAAKC,aAAL,CAAA,CAAV,EAAA,SAAA,CAAA;IACH;IAED;;;;;;;;;;;;0CAWIC,E,EACAC,e,EACAC,a,EACAC,W,EAEI;MAAA,IADJC,KACI,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADYR,oBACZ;MACJ,IAAA,CAAKS,SAAL,GAAiBR,kCAAjB;MAEA,IAAA,CAAKS,SAAL,CAAe;QACXN,EAAE,EAAFA,EADW;QAEXI,KAAK,EAALA,KAFW;QAGXH,eAAe,EAAfA,eAHW;QAIXC,aAAa,EAAbA,aAJW;QAKXC,WAAW,EAAA,aAAA,CAAA;UACPI,SAAS,EAAE;QADJ,CAAA,EAEJJ,WAFI,CALA;QASXK,cAAc,EAAE;MATL,CAAf,CAAA;IAWH;;;EAxC2Bb,c;AA2ChC,eAAeG,iBAAf","sourcesContent":["/**\n * @flow\n * @file Marker-based helper for the Box Groups API\n * @author Box\n */\nimport MarkerBasedAPI from './MarkerBasedAPI';\nimport { DEFAULT_MAX_CONTACTS, ERROR_CODE_FETCH_ENTERPRISE_GROUPS } from '../constants';\nimport type { ElementsErrorCallback } from '../common/types/api';\n\nclass MarkerBasedGroups extends MarkerBasedAPI {\n    /**\n     * API URL for fetching all groups that are visible to the current user\n     *\n     * @returns {string} URL for fetching groups\n     */\n    getUrl(): string {\n        return `${this.getBaseApiUrl()}/groups`;\n    }\n\n    /**\n     * API for fetching all groups in the current user's enterprise\n     *\n     * @param {string} id - Box item ID\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @param {Object} [requestData] - Opitional additional request data\n     * @param {Object} [limit] - Max number of groups to return\n     * @returns {void}\n     */\n    getGroupsInEnterprise(\n        id: string,\n        successCallback: Function,\n        errorCallback: ElementsErrorCallback,\n        requestData: ?Object,\n        limit: number = DEFAULT_MAX_CONTACTS,\n    ): void {\n        this.errorCode = ERROR_CODE_FETCH_ENTERPRISE_GROUPS;\n\n        this.markerGet({\n            id,\n            limit,\n            successCallback,\n            errorCallback,\n            requestData: {\n                usemarker: true,\n                ...requestData,\n            },\n            shouldFetchAll: false,\n        });\n    }\n}\n\nexport default MarkerBasedGroups;\n"]},"metadata":{},"sourceType":"module"}