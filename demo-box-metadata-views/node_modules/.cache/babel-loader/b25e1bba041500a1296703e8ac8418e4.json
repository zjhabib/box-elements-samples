{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Content Sidebar nav tablist Component\n * @author Box\n */\nimport * as React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { KEYS } from '../../constants';\nvar SidebarNavTablist = function SidebarNavTablist(_ref) {\n  var children = _ref.children,\n    history = _ref.history,\n    elementId = _ref.elementId,\n    isOpen = _ref.isOpen,\n    onNavigate = _ref.onNavigate;\n  var refs = [];\n  var tablist = React.Children.map(children, function (child) {\n    return child && \"/\".concat(child.props.sidebarView);\n  });\n  var handleKeyDown = function handleKeyDown(event) {\n    var currentIndex = tablist.indexOf(history.location.pathname);\n    var length = tablist.length;\n    var nextIndex = currentIndex;\n    switch (event.key) {\n      case KEYS.arrowUp:\n        nextIndex = (currentIndex - 1 + length) % length;\n        history.push(tablist[nextIndex]);\n        if (refs.length > 0) {\n          refs[nextIndex].focus();\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        break;\n      case KEYS.arrowDown:\n        nextIndex = (currentIndex + 1) % length;\n        history.push(tablist[nextIndex]);\n        if (refs.length > 0) {\n          refs[nextIndex].focus();\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n  };\n  return React.createElement(\"div\", {\n    \"aria-orientation\": \"vertical\",\n    className: \"bcs-SidebarNav-main\",\n    role: \"tablist\",\n    tabIndex: \"0\",\n    onKeyDown: handleKeyDown\n  }, React.Children.map(children, function (tab) {\n    if (!tab) {\n      return null;\n    }\n    return React.cloneElement(tab, _objectSpread({\n      elementId: elementId,\n      isOpen: isOpen,\n      onNavigate: onNavigate,\n      ref: function ref(_ref2) {\n        refs.push(_ref2);\n      }\n    }, tab.props));\n  }));\n};\nexport default withRouter(SidebarNavTablist);","map":{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarNavTablist.js"],"names":["React","withRouter","KEYS","SidebarNavTablist","children","history","elementId","isOpen","onNavigate","refs","tablist","Children","map","child","props","sidebarView","handleKeyDown","event","currentIndex","indexOf","location","pathname","length","nextIndex","key","arrowUp","push","focus","stopPropagation","preventDefault","arrowDown","tab","cloneElement","ref"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Sidebar nav tablist Component\n * @author Box\n */\n\nimport * as React from 'react';\nimport type { RouterHistory } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { KEYS } from '../../constants';\nimport type { NavigateOptions } from './flowTypes';\n\ntype Props = {\n    children: React.Node,\n    elementId: string,\n    history: RouterHistory,\n    isOpen?: boolean,\n    onNavigate?: (SyntheticEvent<>, NavigateOptions) => void,\n};\n\nconst SidebarNavTablist = ({ children, history, elementId, isOpen, onNavigate }: Props) => {\n    const refs = [];\n    const tablist = React.Children.map(children, child => child && `/${child.props.sidebarView}`);\n    const handleKeyDown = (event: SyntheticKeyboardEvent<>): void => {\n        const currentIndex = tablist.indexOf(history.location.pathname);\n        const { length } = tablist;\n        let nextIndex = currentIndex;\n        switch (event.key) {\n            case KEYS.arrowUp:\n                nextIndex = (currentIndex - 1 + length) % length;\n\n                history.push(tablist[nextIndex]);\n                if (refs.length > 0) {\n                    refs[nextIndex].focus();\n                }\n\n                event.stopPropagation();\n                event.preventDefault();\n                break;\n            case KEYS.arrowDown:\n                nextIndex = (currentIndex + 1) % length;\n\n                history.push(tablist[nextIndex]);\n                if (refs.length > 0) {\n                    refs[nextIndex].focus();\n                }\n\n                event.stopPropagation();\n                event.preventDefault();\n                break;\n            default:\n                break;\n        }\n    };\n\n    return (\n        <div\n            aria-orientation=\"vertical\"\n            className=\"bcs-SidebarNav-main\"\n            role=\"tablist\"\n            tabIndex=\"0\"\n            onKeyDown={handleKeyDown}\n        >\n            {React.Children.map(children, tab => {\n                if (!tab) {\n                    return null;\n                }\n\n                return React.cloneElement(tab, {\n                    elementId,\n                    isOpen,\n                    onNavigate,\n                    ref: ref => {\n                        refs.push(ref);\n                    },\n                    ...tab.props,\n                });\n            })}\n        </div>\n    );\n};\n\nexport default withRouter(SidebarNavTablist);\n"]},"metadata":{},"sourceType":"module"}