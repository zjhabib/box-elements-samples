{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Content Sidebar Container\n * @author Box\n */\n\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport flow from 'lodash/flow';\nimport API from '../../api';\nimport APIContext from '../common/api-context';\nimport Internationalize from '../common/Internationalize';\nimport Sidebar from './Sidebar';\nimport NavRouter from '../common/nav-router';\nimport SidebarUtils from './SidebarUtils';\nimport { DEFAULT_HOSTNAME_API, CLIENT_NAME_CONTENT_SIDEBAR, ORIGIN_CONTENT_SIDEBAR } from '../../constants';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { mark } from '../../utils/performance';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withFeatureProvider } from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\nimport '../common/fonts.scss';\nimport '../common/base.scss';\nimport '../common/modal.scss';\nimport './ContentSidebar.scss';\nvar MARK_NAME_JS_READY = \"\".concat(ORIGIN_CONTENT_SIDEBAR, \"_\").concat(EVENT_JS_READY);\nmark(MARK_NAME_JS_READY);\nvar ContentSidebar = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ContentSidebar, _React$Component);\n\n  /**\n   * [constructor]\n   *\n   * @private\n   * @return {ContentSidebar}\n   */\n  function ContentSidebar(props) {\n    var _this;\n    _classCallCheck(this, ContentSidebar);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContentSidebar).call(this, props));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isLoading: true\n    });\n    _defineProperty(_assertThisInitialized(_this), \"errorCallback\", function (error, code) {\n      /* eslint-disable no-console */\n      console.error(error);\n      /* eslint-enable no-console */\n\n      /* eslint-disable react/prop-types */\n\n      _this.props.onError(error, code, {\n        error: error\n      });\n      /* eslint-enable react/prop-types */\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchMetadataSuccessCallback\", function (_ref) {\n      var editors = _ref.editors;\n      _this.setState({\n        metadataEditors: editors\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"fetchFileSuccessCallback\", function (file) {\n      _this.setState({\n        file: file,\n        isLoading: false\n      }, _this.fetchMetadata);\n    });\n    var apiHost = props.apiHost,\n      cache = props.cache,\n      clientName = props.clientName,\n      language = props.language,\n      requestInterceptor = props.requestInterceptor,\n      responseInterceptor = props.responseInterceptor,\n      sharedLink = props.sharedLink,\n      sharedLinkPassword = props.sharedLinkPassword,\n      token = props.token;\n    _this.api = new API({\n      apiHost: apiHost,\n      cache: cache,\n      clientName: clientName,\n      language: language,\n      requestInterceptor: requestInterceptor,\n      responseInterceptor: responseInterceptor,\n      sharedLink: sharedLink,\n      sharedLinkPassword: sharedLinkPassword,\n      token: token\n    });\n    /* eslint-disable react/prop-types */\n\n    var logger = props.logger;\n    logger.onReadyMetric({\n      endMarkName: MARK_NAME_JS_READY\n    });\n    /* eslint-enable react/prop-types */\n\n    return _this;\n  }\n  /**\n   * Destroys api instances with caches\n   *\n   * @private\n   * @return {void}\n   */\n\n  _createClass(ContentSidebar, [{\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.api.destroy(true);\n    }\n    /**\n     * Cleanup\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Don't destroy the cache while unmounting\n      this.api.destroy(false);\n    }\n    /**\n     * Fetches the file data on load\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchFile();\n    }\n    /**\n     * Fetches new file data on update\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var fileId = this.props.fileId;\n      var prevFileId = prevProps.fileId;\n      if (fileId !== prevFileId) {\n        this.fetchFile();\n      }\n    }\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @param {string} code - error code\n     * @return {void}\n     */\n  }, {\n    key: \"fetchMetadata\",\n    /**\n     * Fetches file metadata editors if required\n     *\n     * @private\n     * @return {void}\n     */\n    value: function fetchMetadata() {\n      var file = this.state.file;\n      var metadataSidebarProps = this.props.metadataSidebarProps;\n      var _metadataSidebarProps = metadataSidebarProps.isFeatureEnabled,\n        isFeatureEnabled = _metadataSidebarProps === void 0 ? true : _metadataSidebarProps; // Only fetch metadata if we think that the file may have metadata on it\n      // but currently the metadata feature is turned off. Use case of this would be a free\n      // user who doesn't have the metadata feature but is collabed on a file from a user\n      // who added metadata on the file. If the feature is enabled we always end up showing\n      // the metadata sidebar irrespective of there being any existing metadata or not.\n\n      var canHaveMetadataSidebar = !isFeatureEnabled && SidebarUtils.canHaveMetadataSidebar(this.props);\n      if (canHaveMetadataSidebar) {\n        this.api.getMetadataAPI(false).getMetadata(file, this.fetchMetadataSuccessCallback, noop, isFeatureEnabled);\n      }\n    }\n    /**\n     * File fetch success callback that sets the file and sidebar visibility.\n     * Also makes an optional request to fetch metadata editors\n     *\n     * @private\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n  }, {\n    key: \"fetchFile\",\n    /**\n     * Fetches a file\n     *\n     * @private\n     * @param {Object|void} [fetchOptions] - Fetch options\n     * @return {void}\n     */\n    value: function fetchFile() {\n      var fetchOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var fileId = this.props.fileId;\n      this.setState({\n        isLoading: true\n      });\n      if (fileId && SidebarUtils.canHaveSidebar(this.props)) {\n        this.api.getFileAPI().getFile(fileId, this.fetchFileSuccessCallback, this.errorCallback, _objectSpread({}, fetchOptions, {\n          fields: SIDEBAR_FIELDS_TO_FETCH\n        }));\n      }\n    }\n    /**\n     * Refreshes the sidebar panel\n     * @returns {void}\n     */\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      if (this.sidebarRef) {\n        this.sidebarRef.refresh();\n      }\n    }\n    /**\n     * Renders the sidebar\n     *\n     * @private\n     * @inheritdoc\n     * @return {Element}\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        activitySidebarProps = _this$props.activitySidebarProps,\n        additionalTabs = _this$props.additionalTabs,\n        className = _this$props.className,\n        currentUser = _this$props.currentUser,\n        defaultView = _this$props.defaultView,\n        detailsSidebarProps = _this$props.detailsSidebarProps,\n        fileId = _this$props.fileId,\n        getPreview = _this$props.getPreview,\n        getViewer = _this$props.getViewer,\n        hasAdditionalTabs = _this$props.hasAdditionalTabs,\n        hasActivityFeed = _this$props.hasActivityFeed,\n        hasMetadata = _this$props.hasMetadata,\n        hasSkills = _this$props.hasSkills,\n        hasVersions = _this$props.hasVersions,\n        history = _this$props.history,\n        isDefaultOpen = _this$props.isDefaultOpen,\n        language = _this$props.language,\n        messages = _this$props.messages,\n        metadataSidebarProps = _this$props.metadataSidebarProps,\n        onAnnotationSelect = _this$props.onAnnotationSelect,\n        onVersionChange = _this$props.onVersionChange,\n        onVersionHistoryClick = _this$props.onVersionHistoryClick,\n        versionsSidebarProps = _this$props.versionsSidebarProps;\n      var _this$state = this.state,\n        file = _this$state.file,\n        isLoading = _this$state.isLoading,\n        metadataEditors = _this$state.metadataEditors;\n      var initialPath = defaultView.charAt(0) === '/' ? defaultView : \"/\".concat(defaultView);\n      if (!file || !fileId || !SidebarUtils.shouldRenderSidebar(this.props, file, metadataEditors)) {\n        return null;\n      }\n      return React.createElement(Internationalize, {\n        language: language,\n        messages: messages\n      }, React.createElement(APIContext.Provider, {\n        value: this.api\n      }, React.createElement(NavRouter, {\n        history: history,\n        initialEntries: [initialPath]\n      }, React.createElement(Sidebar, {\n        activitySidebarProps: activitySidebarProps,\n        additionalTabs: additionalTabs,\n        className: className,\n        currentUser: currentUser,\n        detailsSidebarProps: detailsSidebarProps,\n        file: file,\n        fileId: fileId,\n        getPreview: getPreview,\n        getViewer: getViewer,\n        hasActivityFeed: hasActivityFeed,\n        hasAdditionalTabs: hasAdditionalTabs,\n        hasMetadata: hasMetadata,\n        hasSkills: hasSkills,\n        hasVersions: hasVersions,\n        isDefaultOpen: isDefaultOpen,\n        isLoading: isLoading,\n        metadataEditors: metadataEditors,\n        metadataSidebarProps: metadataSidebarProps,\n        onAnnotationSelect: onAnnotationSelect,\n        onVersionChange: onVersionChange,\n        onVersionHistoryClick: onVersionHistoryClick,\n        versionsSidebarProps: versionsSidebarProps,\n        wrappedComponentRef: function wrappedComponentRef(ref) {\n          _this2.sidebarRef = ref;\n        }\n      }))));\n    }\n  }]);\n  return ContentSidebar;\n}(React.Component);\n_defineProperty(ContentSidebar, \"defaultProps\", {\n  activitySidebarProps: {},\n  apiHost: DEFAULT_HOSTNAME_API,\n  className: '',\n  clientName: CLIENT_NAME_CONTENT_SIDEBAR,\n  defaultView: '',\n  detailsSidebarProps: {},\n  getPreview: noop,\n  getViewer: noop,\n  hasActivityFeed: false,\n  hasAdditionalTabs: false,\n  hasMetadata: false,\n  hasSkills: false,\n  isDefaultOpen: true,\n  metadataSidebarProps: {}\n});\nexport { ContentSidebar as ContentSidebarComponent };\nexport default flow([withFeatureProvider, withLogger(ORIGIN_CONTENT_SIDEBAR), withErrorBoundary(ORIGIN_CONTENT_SIDEBAR)])(ContentSidebar);","map":{"version":3,"sources":["../../../src/elements/content-sidebar/ContentSidebar.js"],"names":["React","noop","flow","API","APIContext","Internationalize","Sidebar","NavRouter","SidebarUtils","DEFAULT_HOSTNAME_API","CLIENT_NAME_CONTENT_SIDEBAR","ORIGIN_CONTENT_SIDEBAR","EVENT_JS_READY","mark","SIDEBAR_FIELDS_TO_FETCH","withErrorBoundary","withFeatureProvider","withLogger","MARK_NAME_JS_READY","ContentSidebar","Component","isLoading","activitySidebarProps","apiHost","className","clientName","defaultView","detailsSidebarProps","getPreview","getViewer","hasActivityFeed","hasAdditionalTabs","hasMetadata","hasSkills","isDefaultOpen","metadataSidebarProps","props","cache","language","requestInterceptor","responseInterceptor","sharedLink","sharedLinkPassword","token","api","logger","onReadyMetric","endMarkName","destroy","fetchFile","prevProps","fileId","prevFileId","error","code","console","onError","editors","setState","metadataEditors","file","state","isFeatureEnabled","canHaveMetadataSidebar","getMetadataAPI","getMetadata","fetchMetadataSuccessCallback","fetchMetadata","fetchOptions","canHaveSidebar","getFileAPI","getFile","fetchFileSuccessCallback","errorCallback","fields","sidebarRef","refresh","additionalTabs","currentUser","hasVersions","history","messages","onAnnotationSelect","onVersionChange","onVersionHistoryClick","versionsSidebarProps","initialPath","charAt","shouldRenderSidebar","ref","ContentSidebarComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Sidebar Container\n * @author Box\n */\n\nimport 'regenerator-runtime/runtime';\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport flow from 'lodash/flow';\nimport type { RouterHistory } from 'react-router-dom';\nimport API from '../../api';\nimport APIContext from '../common/api-context';\nimport Internationalize from '../common/Internationalize';\nimport Sidebar from './Sidebar';\nimport NavRouter from '../common/nav-router';\nimport SidebarUtils from './SidebarUtils';\nimport { DEFAULT_HOSTNAME_API, CLIENT_NAME_CONTENT_SIDEBAR, ORIGIN_CONTENT_SIDEBAR } from '../../constants';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { mark } from '../../utils/performance';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withFeatureProvider } from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\n\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { ElementsXhrError, RequestOptions, ErrorContextProps } from '../../common/types/api';\nimport type { MetadataEditor } from '../../common/types/metadata';\nimport type { StringMap, Token, User, BoxItem } from '../../common/types/core';\nimport type { AdditionalSidebarTab } from './flowTypes';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport type APICache from '../../utils/Cache';\n\nimport '../common/fonts.scss';\nimport '../common/base.scss';\nimport '../common/modal.scss';\nimport './ContentSidebar.scss';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    apiHost: string,\n    cache?: APICache,\n    className: string,\n    clientName: string,\n    currentUser?: User,\n    defaultView: string,\n    detailsSidebarProps: DetailsSidebarProps,\n    features: FeatureConfig,\n    fileId?: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivityFeed: boolean,\n    hasAdditionalTabs: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    history?: RouterHistory,\n    isDefaultOpen?: boolean,\n    language?: string,\n    messages?: StringMap,\n    metadataSidebarProps: MetadataSidebarProps,\n    onAnnotationSelect?: Function,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    requestInterceptor?: Function,\n    responseInterceptor?: Function,\n    sharedLink?: string,\n    sharedLinkPassword?: string,\n    token: Token,\n    versionsSidebarProps: VersionsSidebarProps,\n} & ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    file?: BoxItem,\n    isLoading: boolean,\n    metadataEditors?: Array<MetadataEditor>,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_CONTENT_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass ContentSidebar extends React.Component<Props, State> {\n    props: Props;\n\n    state: State = { isLoading: true };\n\n    api: API;\n\n    sidebarRef: Sidebar;\n\n    static defaultProps = {\n        activitySidebarProps: {},\n        apiHost: DEFAULT_HOSTNAME_API,\n        className: '',\n        clientName: CLIENT_NAME_CONTENT_SIDEBAR,\n        defaultView: '',\n        detailsSidebarProps: {},\n        getPreview: noop,\n        getViewer: noop,\n        hasActivityFeed: false,\n        hasAdditionalTabs: false,\n        hasMetadata: false,\n        hasSkills: false,\n        isDefaultOpen: true,\n        metadataSidebarProps: {},\n    };\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {ContentSidebar}\n     */\n    constructor(props: Props) {\n        super(props);\n        const {\n            apiHost,\n            cache,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n        } = props;\n\n        this.api = new API({\n            apiHost,\n            cache,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n        });\n\n        /* eslint-disable react/prop-types */\n        const { logger } = props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n        /* eslint-enable react/prop-types */\n    }\n\n    /**\n     * Destroys api instances with caches\n     *\n     * @private\n     * @return {void}\n     */\n    clearCache(): void {\n        this.api.destroy(true);\n    }\n\n    /**\n     * Cleanup\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentWillUnmount() {\n        // Don't destroy the cache while unmounting\n        this.api.destroy(false);\n    }\n\n    /**\n     * Fetches the file data on load\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidMount() {\n        this.fetchFile();\n    }\n\n    /**\n     * Fetches new file data on update\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidUpdate(prevProps: Props): void {\n        const { fileId }: Props = this.props;\n        const { fileId: prevFileId }: Props = prevProps;\n\n        if (fileId !== prevFileId) {\n            this.fetchFile();\n        }\n    }\n\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @param {string} code - error code\n     * @return {void}\n     */\n    errorCallback = (error: ElementsXhrError, code: string): void => {\n        /* eslint-disable no-console */\n        console.error(error);\n        /* eslint-enable no-console */\n\n        /* eslint-disable react/prop-types */\n        this.props.onError(error, code, {\n            error,\n        });\n        /* eslint-enable react/prop-types */\n    };\n\n    /**\n     * File fetch success callback that sets the file and view\n     * Only set file if there is data to show in the sidebar.\n     * Skills sidebar doesn't show when there is no data.\n     *\n     * @private\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n    fetchMetadataSuccessCallback = ({ editors }: { editors: Array<MetadataEditor> }): void => {\n        this.setState({ metadataEditors: editors });\n    };\n\n    /**\n     * Fetches file metadata editors if required\n     *\n     * @private\n     * @return {void}\n     */\n    fetchMetadata(): void {\n        const { file }: State = this.state;\n        const { metadataSidebarProps }: Props = this.props;\n        const { isFeatureEnabled = true }: MetadataSidebarProps = metadataSidebarProps;\n\n        // Only fetch metadata if we think that the file may have metadata on it\n        // but currently the metadata feature is turned off. Use case of this would be a free\n        // user who doesn't have the metadata feature but is collabed on a file from a user\n        // who added metadata on the file. If the feature is enabled we always end up showing\n        // the metadata sidebar irrespective of there being any existing metadata or not.\n        const canHaveMetadataSidebar = !isFeatureEnabled && SidebarUtils.canHaveMetadataSidebar(this.props);\n\n        if (canHaveMetadataSidebar) {\n            this.api\n                .getMetadataAPI(false)\n                .getMetadata(((file: any): BoxItem), this.fetchMetadataSuccessCallback, noop, isFeatureEnabled);\n        }\n    }\n\n    /**\n     * File fetch success callback that sets the file and sidebar visibility.\n     * Also makes an optional request to fetch metadata editors\n     *\n     * @private\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem): void => {\n        this.setState(\n            {\n                file,\n                isLoading: false,\n            },\n            this.fetchMetadata,\n        );\n    };\n\n    /**\n     * Fetches a file\n     *\n     * @private\n     * @param {Object|void} [fetchOptions] - Fetch options\n     * @return {void}\n     */\n    fetchFile(fetchOptions: RequestOptions = {}): void {\n        const { fileId }: Props = this.props;\n        this.setState({ isLoading: true });\n        if (fileId && SidebarUtils.canHaveSidebar(this.props)) {\n            this.api.getFileAPI().getFile(fileId, this.fetchFileSuccessCallback, this.errorCallback, {\n                ...fetchOptions,\n                fields: SIDEBAR_FIELDS_TO_FETCH,\n            });\n        }\n    }\n\n    /**\n     * Refreshes the sidebar panel\n     * @returns {void}\n     */\n    refresh(): void {\n        if (this.sidebarRef) {\n            this.sidebarRef.refresh();\n        }\n    }\n\n    /**\n     * Renders the sidebar\n     *\n     * @private\n     * @inheritdoc\n     * @return {Element}\n     */\n    render() {\n        const {\n            activitySidebarProps,\n            additionalTabs,\n            className,\n            currentUser,\n            defaultView,\n            detailsSidebarProps,\n            fileId,\n            getPreview,\n            getViewer,\n            hasAdditionalTabs,\n            hasActivityFeed,\n            hasMetadata,\n            hasSkills,\n            hasVersions,\n            history,\n            isDefaultOpen,\n            language,\n            messages,\n            metadataSidebarProps,\n            onAnnotationSelect,\n            onVersionChange,\n            onVersionHistoryClick,\n            versionsSidebarProps,\n        }: Props = this.props;\n        const { file, isLoading, metadataEditors }: State = this.state;\n        const initialPath = defaultView.charAt(0) === '/' ? defaultView : `/${defaultView}`;\n\n        if (!file || !fileId || !SidebarUtils.shouldRenderSidebar(this.props, file, metadataEditors)) {\n            return null;\n        }\n\n        return (\n            <Internationalize language={language} messages={messages}>\n                <APIContext.Provider value={(this.api: any)}>\n                    <NavRouter history={history} initialEntries={[initialPath]}>\n                        <Sidebar\n                            activitySidebarProps={activitySidebarProps}\n                            additionalTabs={additionalTabs}\n                            className={className}\n                            currentUser={currentUser}\n                            detailsSidebarProps={detailsSidebarProps}\n                            file={file}\n                            fileId={fileId}\n                            getPreview={getPreview}\n                            getViewer={getViewer}\n                            hasActivityFeed={hasActivityFeed}\n                            hasAdditionalTabs={hasAdditionalTabs}\n                            hasMetadata={hasMetadata}\n                            hasSkills={hasSkills}\n                            hasVersions={hasVersions}\n                            isDefaultOpen={isDefaultOpen}\n                            isLoading={isLoading}\n                            metadataEditors={metadataEditors}\n                            metadataSidebarProps={metadataSidebarProps}\n                            onAnnotationSelect={onAnnotationSelect}\n                            onVersionChange={onVersionChange}\n                            onVersionHistoryClick={onVersionHistoryClick}\n                            versionsSidebarProps={versionsSidebarProps}\n                            wrappedComponentRef={ref => {\n                                this.sidebarRef = ref;\n                            }}\n                        />\n                    </NavRouter>\n                </APIContext.Provider>\n            </Internationalize>\n        );\n    }\n}\n\nexport type ContentSidebarProps = Props;\nexport { ContentSidebar as ContentSidebarComponent };\nexport default flow([\n    withFeatureProvider,\n    withLogger(ORIGIN_CONTENT_SIDEBAR),\n    withErrorBoundary(ORIGIN_CONTENT_SIDEBAR),\n])(ContentSidebar);\n"]},"metadata":{},"sourceType":"module"}