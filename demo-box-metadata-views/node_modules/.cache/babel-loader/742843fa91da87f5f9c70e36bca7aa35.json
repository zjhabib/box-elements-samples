{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport TogglePrimitive from './Toggle';\nvar ToggleField = function ToggleField(_ref) {\n  var field = _ref.field,\n    form = _ref.form,\n    rest = _objectWithoutProperties(_ref, [\"field\", \"form\"]);\n  var value = field.value;\n  return React.createElement(TogglePrimitive, _extends({}, field, rest, {\n    isOn: !!value\n  }));\n};\nexport default ToggleField;","map":{"version":3,"sources":["../../../src/components/toggle/ToggleField.js"],"names":["React","TogglePrimitive","ToggleField","field","form","rest","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,eAAP,MAA4B,UAA5B;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAqC;EAAA,IAAlCC,KAAkC,GAAA,IAAA,CAAlCA,KAAkC;IAA3BC,IAA2B,GAAA,IAAA,CAA3BA,IAA2B;IAAlBC,IAAkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA;EAAA,IAC7CC,KAD6C,GACnCH,KADmC,CAC7CG,KAD6C;EAErD,OAAO,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAqBH,KAArB,EAAgCE,IAAhC,EAAA;IAAsC,IAAI,EAAE,CAAC,CAACC;EAA9C,CAAA,CAAA,CAAP;AACH,CAHD;AAKA,eAAeJ,WAAf","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport type { FieldProps } from 'formik';\n\nimport TogglePrimitive from './Toggle';\nimport type { ToggleProps } from './Toggle';\n\ntype Props = ToggleProps & FieldProps;\n\nconst ToggleField = ({ field, form, ...rest }: Props) => {\n    const { value } = field;\n    return <TogglePrimitive {...field} {...rest} isOn={!!value} />;\n};\n\nexport default ToggleField;\n"]},"metadata":{},"sourceType":"module"}