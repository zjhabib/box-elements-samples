{"ast":null,"code":"var _ACTION_MAP;\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Versions Item component\n * @author Box\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\nimport selectors from '../../common/selectors/version';\nimport sizeUtil from '../../../utils/size';\nimport VersionsItemActions from './VersionsItemActions';\nimport VersionsItemButton from './VersionsItemButton';\nimport VersionsItemBadge from './VersionsItemBadge';\nimport VersionsItemRetention from './VersionsItemRetention';\nimport { ReadableTime } from '../../../components/time';\nimport { FILE_REQUEST_NAME, VERSION_DELETE_ACTION, VERSION_PROMOTE_ACTION, VERSION_RESTORE_ACTION, VERSION_UPLOAD_ACTION } from '../../../constants';\nimport './VersionsItem.scss';\nvar ACTION_MAP = (_ACTION_MAP = {}, _defineProperty(_ACTION_MAP, VERSION_DELETE_ACTION, messages.versionDeletedBy), _defineProperty(_ACTION_MAP, VERSION_RESTORE_ACTION, messages.versionRestoredBy), _defineProperty(_ACTION_MAP, VERSION_PROMOTE_ACTION, messages.versionPromotedBy), _defineProperty(_ACTION_MAP, VERSION_UPLOAD_ACTION, messages.versionUploadedBy), _ACTION_MAP);\nvar FIVE_MINUTES_MS = 5 * 60 * 1000;\nvar VersionsItem = function VersionsItem(_ref) {\n  var fileId = _ref.fileId,\n    _ref$isCurrent = _ref.isCurrent,\n    isCurrent = _ref$isCurrent === void 0 ? false : _ref$isCurrent,\n    _ref$isSelected = _ref.isSelected,\n    isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,\n    _ref$isWatermarked = _ref.isWatermarked,\n    isWatermarked = _ref$isWatermarked === void 0 ? false : _ref$isWatermarked,\n    onDelete = _ref.onDelete,\n    onDownload = _ref.onDownload,\n    onPreview = _ref.onPreview,\n    onPromote = _ref.onPromote,\n    onRestore = _ref.onRestore,\n    version = _ref.version,\n    versionCount = _ref.versionCount,\n    versionLimit = _ref.versionLimit;\n  var createdAt = version.created_at,\n    versionId = version.id,\n    is_download_available = version.is_download_available,\n    _version$permissions = version.permissions,\n    permissions = _version$permissions === void 0 ? {} : _version$permissions,\n    restoredAt = version.restored_at,\n    retention = version.retention,\n    size = version.size,\n    trashedAt = version.trashed_at,\n    versionNumber = version.version_number,\n    versionPromoted = version.version_promoted;\n  var can_delete = permissions.can_delete,\n    can_download = permissions.can_download,\n    can_preview = permissions.can_preview,\n    can_upload = permissions.can_upload;\n  var _ref2 = retention || {},\n    retentionAppliedAt = _ref2.applied_at,\n    retentionDispositionAt = _ref2.disposition_at;\n  var retentionDispositionAtDate = retentionDispositionAt && new Date(retentionDispositionAt); // Version info helpers\n\n  var versionAction = selectors.getVersionAction(version);\n  var versionInteger = versionNumber ? parseInt(versionNumber, 10) : 1;\n  var versionTime = restoredAt || trashedAt || createdAt;\n  var versionTimestamp = versionTime && new Date(versionTime).getTime();\n  var versionUserName = selectors.getVersionUser(version).name || React.createElement(FormattedMessage, messages.versionUserUnknown);\n  var versionDisplayName = versionUserName !== FILE_REQUEST_NAME ? versionUserName : React.createElement(FormattedMessage, messages.fileRequestDisplayName); // Version state helpers\n\n  var isDeleted = versionAction === VERSION_DELETE_ACTION;\n  var isDownloadable = !!is_download_available;\n  var isLimited = versionCount - versionInteger >= versionLimit;\n  var isRestricted = isWatermarked && !isCurrent; // Watermarked files do not support prior version preview\n\n  var isRetained = !!retentionAppliedAt && (!retentionDispositionAtDate || retentionDispositionAtDate > new Date()); // Version action helpers\n\n  var canPreview = can_preview && !isDeleted && !isLimited && !isRestricted;\n  var showDelete = can_delete && !isDeleted && !isCurrent;\n  var showDownload = can_download && !isDeleted && isDownloadable;\n  var showPromote = can_upload && !isDeleted && !isCurrent;\n  var showRestore = can_delete && isDeleted;\n  var showPreview = canPreview && !isSelected;\n  var hasActions = showDelete || showDownload || showPreview || showPromote || showRestore; // Version action callback helper\n\n  var handleAction = function handleAction(handler) {\n    return function () {\n      if (handler) {\n        handler(versionId);\n      }\n    };\n  };\n  return React.createElement(\"div\", {\n    className: \"bcs-VersionsItem\"\n  }, React.createElement(VersionsItemButton, {\n    fileId: fileId,\n    isCurrent: isCurrent,\n    isDisabled: !canPreview,\n    isSelected: isSelected,\n    onClick: handleAction(onPreview)\n  }, React.createElement(\"div\", {\n    className: \"bcs-VersionsItem-badge\"\n  }, React.createElement(VersionsItemBadge, {\n    versionNumber: versionNumber\n  })), React.createElement(\"div\", {\n    className: \"bcs-VersionsItem-details\"\n  }, isCurrent && React.createElement(\"div\", {\n    className: \"bcs-VersionsItem-current\"\n  }, React.createElement(FormattedMessage, messages.versionCurrent)), React.createElement(\"div\", {\n    className: \"bcs-VersionsItem-log\",\n    \"data-testid\": \"bcs-VersionsItem-log\",\n    title: versionDisplayName\n  }, React.createElement(FormattedMessage, _extends({}, ACTION_MAP[versionAction], {\n    values: {\n      name: versionDisplayName,\n      versionPromoted: versionPromoted\n    }\n  }))), React.createElement(\"div\", {\n    className: \"bcs-VersionsItem-info\"\n  }, versionTimestamp && React.createElement(\"time\", {\n    className: \"bcs-VersionsItem-date\",\n    dateTime: versionTime\n  }, React.createElement(ReadableTime, {\n    alwaysShowTime: true,\n    relativeThreshold: FIVE_MINUTES_MS,\n    timestamp: versionTimestamp\n  })), !!size && React.createElement(\"span\", {\n    className: \"bcs-VersionsItem-size\"\n  }, sizeUtil(size))), isRetained && React.createElement(\"div\", {\n    className: \"bcs-VersionsItem-retention\"\n  }, React.createElement(VersionsItemRetention, {\n    retention: retention\n  })), isLimited && hasActions && React.createElement(\"div\", {\n    className: \"bcs-VersionsItem-footer\"\n  }, React.createElement(FormattedMessage, _extends({}, messages.versionLimitExceeded, {\n    values: {\n      versionLimit: versionLimit\n    }\n  }))))), !isLimited && hasActions && React.createElement(VersionsItemActions, {\n    fileId: fileId,\n    isCurrent: isCurrent,\n    isRetained: isRetained,\n    onDelete: handleAction(onDelete),\n    onDownload: handleAction(onDownload),\n    onPreview: handleAction(onPreview),\n    onPromote: handleAction(onPromote),\n    onRestore: handleAction(onRestore),\n    showDelete: showDelete,\n    showDownload: showDownload,\n    showPreview: showPreview,\n    showPromote: showPromote,\n    showRestore: showRestore\n  }));\n};\nexport default VersionsItem;","map":{"version":3,"sources":["../../../../src/elements/content-sidebar/versions/VersionsItem.js"],"names":["React","FormattedMessage","messages","selectors","sizeUtil","VersionsItemActions","VersionsItemButton","VersionsItemBadge","VersionsItemRetention","ReadableTime","FILE_REQUEST_NAME","VERSION_DELETE_ACTION","VERSION_PROMOTE_ACTION","VERSION_RESTORE_ACTION","VERSION_UPLOAD_ACTION","ACTION_MAP","versionDeletedBy","versionRestoredBy","versionPromotedBy","versionUploadedBy","FIVE_MINUTES_MS","VersionsItem","fileId","isCurrent","isSelected","isWatermarked","onDelete","onDownload","onPreview","onPromote","onRestore","version","versionCount","versionLimit","created_at","createdAt","id","versionId","is_download_available","permissions","restored_at","restoredAt","retention","size","trashed_at","trashedAt","version_number","versionNumber","version_promoted","versionPromoted","can_delete","can_download","can_preview","can_upload","applied_at","retentionAppliedAt","disposition_at","retentionDispositionAt","retentionDispositionAtDate","Date","versionAction","getVersionAction","versionInteger","parseInt","versionTime","versionTimestamp","getTime","versionUserName","getVersionUser","name","versionUserUnknown","versionDisplayName","fileRequestDisplayName","isDeleted","isDownloadable","isLimited","isRestricted","isRetained","canPreview","showDelete","showDownload","showPromote","showRestore","showPreview","hasActions","handleAction","handler","versionCurrent","versionLimitExceeded"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Versions Item component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\nimport selectors from '../../common/selectors/version';\nimport sizeUtil from '../../../utils/size';\nimport VersionsItemActions from './VersionsItemActions';\nimport VersionsItemButton from './VersionsItemButton';\nimport VersionsItemBadge from './VersionsItemBadge';\nimport VersionsItemRetention from './VersionsItemRetention';\nimport { ReadableTime } from '../../../components/time';\nimport {\n    FILE_REQUEST_NAME,\n    VERSION_DELETE_ACTION,\n    VERSION_PROMOTE_ACTION,\n    VERSION_RESTORE_ACTION,\n    VERSION_UPLOAD_ACTION,\n} from '../../../constants';\nimport type { VersionActionCallback } from './flowTypes';\nimport type { BoxItemVersion } from '../../../common/types/core';\nimport './VersionsItem.scss';\n\ntype Props = {\n    fileId: string,\n    isCurrent?: boolean,\n    isSelected?: boolean,\n    isWatermarked?: boolean,\n    onDelete?: VersionActionCallback,\n    onDownload?: VersionActionCallback,\n    onPreview?: VersionActionCallback,\n    onPromote?: VersionActionCallback,\n    onRestore?: VersionActionCallback,\n    version: BoxItemVersion,\n    versionCount: number,\n    versionLimit: number,\n};\n\nconst ACTION_MAP = {\n    [VERSION_DELETE_ACTION]: messages.versionDeletedBy,\n    [VERSION_RESTORE_ACTION]: messages.versionRestoredBy,\n    [VERSION_PROMOTE_ACTION]: messages.versionPromotedBy,\n    [VERSION_UPLOAD_ACTION]: messages.versionUploadedBy,\n};\nconst FIVE_MINUTES_MS = 5 * 60 * 1000;\n\nconst VersionsItem = ({\n    fileId,\n    isCurrent = false,\n    isSelected = false,\n    isWatermarked = false,\n    onDelete,\n    onDownload,\n    onPreview,\n    onPromote,\n    onRestore,\n    version,\n    versionCount,\n    versionLimit,\n}: Props) => {\n    const {\n        created_at: createdAt,\n        id: versionId,\n        is_download_available,\n        permissions = {},\n        restored_at: restoredAt,\n        retention,\n        size,\n        trashed_at: trashedAt,\n        version_number: versionNumber,\n        version_promoted: versionPromoted,\n    } = version;\n    const { can_delete, can_download, can_preview, can_upload } = permissions;\n    const { applied_at: retentionAppliedAt, disposition_at: retentionDispositionAt } = retention || {};\n    const retentionDispositionAtDate = retentionDispositionAt && new Date(retentionDispositionAt);\n\n    // Version info helpers\n    const versionAction = selectors.getVersionAction(version);\n    const versionInteger = versionNumber ? parseInt(versionNumber, 10) : 1;\n    const versionTime = restoredAt || trashedAt || createdAt;\n    const versionTimestamp = versionTime && new Date(versionTime).getTime();\n    const versionUserName = selectors.getVersionUser(version).name || (\n        <FormattedMessage {...messages.versionUserUnknown} />\n    );\n    const versionDisplayName =\n        versionUserName !== FILE_REQUEST_NAME ? (\n            versionUserName\n        ) : (\n            <FormattedMessage {...messages.fileRequestDisplayName} />\n        );\n    // Version state helpers\n    const isDeleted = versionAction === VERSION_DELETE_ACTION;\n    const isDownloadable = !!is_download_available;\n    const isLimited = versionCount - versionInteger >= versionLimit;\n    const isRestricted = isWatermarked && !isCurrent; // Watermarked files do not support prior version preview\n    const isRetained = !!retentionAppliedAt && (!retentionDispositionAtDate || retentionDispositionAtDate > new Date());\n\n    // Version action helpers\n    const canPreview = can_preview && !isDeleted && !isLimited && !isRestricted;\n    const showDelete = can_delete && !isDeleted && !isCurrent;\n    const showDownload = can_download && !isDeleted && isDownloadable;\n    const showPromote = can_upload && !isDeleted && !isCurrent;\n    const showRestore = can_delete && isDeleted;\n    const showPreview = canPreview && !isSelected;\n    const hasActions = showDelete || showDownload || showPreview || showPromote || showRestore;\n\n    // Version action callback helper\n    const handleAction = (handler?: VersionActionCallback) => (): void => {\n        if (handler) {\n            handler(versionId);\n        }\n    };\n\n    return (\n        <div className=\"bcs-VersionsItem\">\n            <VersionsItemButton\n                fileId={fileId}\n                isCurrent={isCurrent}\n                isDisabled={!canPreview}\n                isSelected={isSelected}\n                onClick={handleAction(onPreview)}\n            >\n                <div className=\"bcs-VersionsItem-badge\">\n                    <VersionsItemBadge versionNumber={versionNumber} />\n                </div>\n\n                <div className=\"bcs-VersionsItem-details\">\n                    {isCurrent && (\n                        <div className=\"bcs-VersionsItem-current\">\n                            <FormattedMessage {...messages.versionCurrent} />\n                        </div>\n                    )}\n\n                    <div className=\"bcs-VersionsItem-log\" data-testid=\"bcs-VersionsItem-log\" title={versionDisplayName}>\n                        <FormattedMessage\n                            {...ACTION_MAP[versionAction]}\n                            values={{ name: versionDisplayName, versionPromoted }}\n                        />\n                    </div>\n\n                    <div className=\"bcs-VersionsItem-info\">\n                        {versionTimestamp && (\n                            <time className=\"bcs-VersionsItem-date\" dateTime={versionTime}>\n                                <ReadableTime\n                                    alwaysShowTime\n                                    relativeThreshold={FIVE_MINUTES_MS}\n                                    timestamp={versionTimestamp}\n                                />\n                            </time>\n                        )}\n                        {!!size && <span className=\"bcs-VersionsItem-size\">{sizeUtil(size)}</span>}\n                    </div>\n\n                    {isRetained && (\n                        <div className=\"bcs-VersionsItem-retention\">\n                            <VersionsItemRetention retention={retention} />\n                        </div>\n                    )}\n\n                    {isLimited && hasActions && (\n                        <div className=\"bcs-VersionsItem-footer\">\n                            <FormattedMessage {...messages.versionLimitExceeded} values={{ versionLimit }} />\n                        </div>\n                    )}\n                </div>\n            </VersionsItemButton>\n\n            {!isLimited && hasActions && (\n                <VersionsItemActions\n                    fileId={fileId}\n                    isCurrent={isCurrent}\n                    isRetained={isRetained}\n                    onDelete={handleAction(onDelete)}\n                    onDownload={handleAction(onDownload)}\n                    onPreview={handleAction(onPreview)}\n                    onPromote={handleAction(onPromote)}\n                    onRestore={handleAction(onRestore)}\n                    showDelete={showDelete}\n                    showDownload={showDownload}\n                    showPreview={showPreview}\n                    showPromote={showPromote}\n                    showRestore={showRestore}\n                />\n            )}\n        </div>\n    );\n};\nexport default VersionsItem;\n"]},"metadata":{},"sourceType":"module"}