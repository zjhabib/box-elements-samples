{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\n/**\n * \n * @file Helper for the app_integrations API endpoint\n * @author Box\n */\nimport Base from './Base';\nimport { TYPE_FILE, ERROR_CODE_EXECUTE_INTEGRATION } from '../constants';\nvar AppIntegrations = /*#__PURE__*/\nfunction (_Base) {\n  _inherits(AppIntegrations, _Base);\n  function AppIntegrations() {\n    _classCallCheck(this, AppIntegrations);\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppIntegrations).apply(this, arguments));\n  }\n  _createClass(AppIntegrations, [{\n    key: \"getUrl\",\n    /**\n     * API URL for Open With\n     *\n     * @param {string} [integrationId] - a box integration app ID\n     * @return {string} base url for app integrations\n     */\n    value: function getUrl(integrationId) {\n      if (!integrationId) {\n        throw new Error('Missing app integration id!');\n      }\n      return \"\".concat(this.getBaseApiUrl(), \"/app_integrations/\").concat(integrationId);\n    }\n    /**\n     * API endpoint to execute an integration, given an ID\n     *\n     * @param {string} integrationID - An app integration ID\n     * @param {string} fileID - A file ID\n     * @return {string} base url for files\n     */\n  }, {\n    key: \"execute\",\n    value: function execute(integrationId, fileId, successCallback, errorCallback) {\n      if (!integrationId) {\n        throw new Error('Missing integration id!');\n      }\n      if (!fileId) {\n        throw new Error('Missing file id!');\n      }\n      this.errorCode = ERROR_CODE_EXECUTE_INTEGRATION;\n      var executeURL = \"\".concat(this.getUrl(integrationId), \"/execute\");\n      var body = {\n        data: {\n          item: {\n            id: fileId,\n            type: TYPE_FILE\n          }\n        }\n      };\n      this.post({\n        id: fileId,\n        url: executeURL,\n        data: body,\n        successCallback: successCallback,\n        errorCallback: errorCallback\n      });\n    }\n  }]);\n  return AppIntegrations;\n}(Base);\nexport default AppIntegrations;","map":{"version":3,"sources":["../../src/api/AppIntegrations.js"],"names":["Base","TYPE_FILE","ERROR_CODE_EXECUTE_INTEGRATION","AppIntegrations","integrationId","Error","getBaseApiUrl","fileId","successCallback","errorCallback","errorCode","executeURL","getUrl","body","data","item","id","type","post","url"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,cAA1D;IAGMC,e;;;;;;;;;IACF;;;;;;2BAMOC,a,EAA+B;MAClC,IAAI,CAACA,aAAL,EAAoB;QAChB,MAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;MACH;MAED,OAAA,EAAA,CAAA,MAAA,CAAU,IAAA,CAAKC,aAAL,CAAA,CAAV,EAAA,oBAAA,CAAA,CAAA,MAAA,CAAmDF,aAAnD,CAAA;IACH;IAED;;;;;;;;;4BAQIA,a,EACAG,M,EACAC,e,EACAC,a,EACI;MACJ,IAAI,CAACL,aAAL,EAAoB;QAChB,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;MACH;MAED,IAAI,CAACE,MAAL,EAAa;QACT,MAAM,IAAIF,KAAJ,CAAU,kBAAV,CAAN;MACH;MAED,IAAA,CAAKK,SAAL,GAAiBR,8BAAjB;MACA,IAAMS,UAAU,GAAA,EAAA,CAAA,MAAA,CAAM,IAAA,CAAKC,MAAL,CAAYR,aAAZ,CAAN,EAAA,UAAA,CAAhB;MACA,IAAMS,IAAI,GAAG;QACTC,IAAI,EAAE;UACFC,IAAI,EAAE;YACFC,EAAE,EAAET,MADF;YAEFU,IAAI,EAAEhB;UAFJ;QADJ;MADG,CAAb;MASA,IAAA,CAAKiB,IAAL,CAAU;QACNF,EAAE,EAAET,MADE;QAENY,GAAG,EAAER,UAFC;QAGNG,IAAI,EAAED,IAHA;QAINL,eAAe,EAAfA,eAJM;QAKNC,aAAa,EAAbA;MALM,CAAV,CAAA;IAOH;;;EAtDyBT,I;AAyD9B,eAAeG,eAAf","sourcesContent":["/**\n * @flow\n * @file Helper for the app_integrations API endpoint\n * @author Box\n */\n\nimport Base from './Base';\nimport { TYPE_FILE, ERROR_CODE_EXECUTE_INTEGRATION } from '../constants';\nimport type { ElementsErrorCallback } from '../common/types/api';\n\nclass AppIntegrations extends Base {\n    /**\n     * API URL for Open With\n     *\n     * @param {string} [integrationId] - a box integration app ID\n     * @return {string} base url for app integrations\n     */\n    getUrl(integrationId: string): string {\n        if (!integrationId) {\n            throw new Error('Missing app integration id!');\n        }\n\n        return `${this.getBaseApiUrl()}/app_integrations/${integrationId}`;\n    }\n\n    /**\n     * API endpoint to execute an integration, given an ID\n     *\n     * @param {string} integrationID - An app integration ID\n     * @param {string} fileID - A file ID\n     * @return {string} base url for files\n     */\n    execute(\n        integrationId: ?string,\n        fileId: ?string,\n        successCallback: Function,\n        errorCallback: ElementsErrorCallback,\n    ): void {\n        if (!integrationId) {\n            throw new Error('Missing integration id!');\n        }\n\n        if (!fileId) {\n            throw new Error('Missing file id!');\n        }\n\n        this.errorCode = ERROR_CODE_EXECUTE_INTEGRATION;\n        const executeURL = `${this.getUrl(integrationId)}/execute`;\n        const body = {\n            data: {\n                item: {\n                    id: fileId,\n                    type: TYPE_FILE,\n                },\n            },\n        };\n\n        this.post({\n            id: fileId,\n            url: executeURL,\n            data: body,\n            successCallback,\n            errorCallback,\n        });\n    }\n}\n\nexport default AppIntegrations;\n"]},"metadata":{},"sourceType":"module"}