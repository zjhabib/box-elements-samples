{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport LocalStore from '../../utils/LocalStore';\nimport Channel from './Channel';\nimport { get as getCookie, set as setCookie } from './cookies';\nvar GET = 'GET';\nvar POST = 'POST';\nvar YEAR_MS = 31536000000;\nvar DEFAULT_PRIMARY_PORT = 17223;\nvar DEFAULT_FALLBACK_PORT = 17224;\nvar CONTENT_TYPE_HEADER = 'Content-Type';\nvar CONTENT_TYPE_VALUE = 'text/plain; charset=UTF-8';\nvar STATUS_NOT_RUNNING = 'notrunning';\nvar localStore = new LocalStore();\nfunction shouldUseFallbackFirst() {\n  return !!localStore.getItem('comUseFallback');\n}\nfunction saveFallbackPortPreference() {\n  localStore.setItem('comUseFallback', 1);\n}\nfunction clearFallbackPortPreference() {\n  localStore.removeItem('comUseFallback');\n}\nfunction getPreferredPortOrdering() {\n  if (shouldUseFallbackFirst()) {\n    return {\n      primary: DEFAULT_FALLBACK_PORT,\n      fallback: DEFAULT_PRIMARY_PORT\n    };\n  }\n  return {\n    primary: DEFAULT_PRIMARY_PORT,\n    fallback: DEFAULT_FALLBACK_PORT\n  };\n}\nvar HTTPChannel = /*#__PURE__*/\nfunction (_Channel) {\n  _inherits(HTTPChannel, _Channel);\n  function HTTPChannel(_appName, _url, channelName) {\n    var _this;\n    _classCallCheck(this, HTTPChannel);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HTTPChannel).call(this, _appName));\n    _defineProperty(_assertThisInitialized(_this), \"createCORSRequest\", function (method, url) {\n      var xhr;\n      try {\n        var _XMLHttpRequest = _this.window.XMLHttpRequest;\n        xhr = new _XMLHttpRequest();\n        xhr.open(method, url, true);\n        return xhr;\n      } catch (ex) {\n        if (_this.retryCounter < 3) {\n          _this.retryCounter += 1;\n          return _this.createCORSRequest(method, url);\n        }\n        throw new Error('could not create xhr');\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getComServerStatusInstallationPromise\", function (timeoutMS) {\n      var resolve;\n      var reject;\n      var comServerInstallationPromise = new Promise(function (res, rej) {\n        resolve = res;\n        reject = rej;\n      });\n      var resolveWithValidPort = function resolveWithValidPort(port, res) {\n        _this.currentPort = port;\n        if (port === DEFAULT_PRIMARY_PORT) {\n          clearFallbackPortPreference();\n        } else {\n          saveFallbackPortPreference();\n        }\n        _this.comServerInstallationPromiseRejected = false;\n        resolve(res);\n      };\n      var portPreferences = getPreferredPortOrdering();\n      var primaryPort = portPreferences.primary;\n      var fallbackPort = portPreferences.fallback; // Try primary port first\n\n      _this.checkInstallStatus(primaryPort, timeoutMS).then(resolveWithValidPort.bind(_assertThisInitialized(_this), primaryPort)).catch(function (err) {\n        // If com server returned that the port is available but the app is not running, reject\n        if (err === STATUS_NOT_RUNNING) {\n          _this.comServerInstallationPromiseRejected = true;\n          reject();\n          return;\n        } // Only check secondary, if necessary, otherwise this throws a browser error in console\n\n        _this.checkInstallStatus(fallbackPort, timeoutMS).then(resolveWithValidPort.bind(_assertThisInitialized(_this), fallbackPort)).catch(function () {\n          _this.comServerInstallationPromiseRejected = true;\n          reject();\n        });\n      });\n      return comServerInstallationPromise;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"sendComServerRequest\", function (method, url, data, timeoutMS) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var request = _this.createCORSRequest(method, url);\n          request.setRequestHeader(CONTENT_TYPE_HEADER, CONTENT_TYPE_VALUE);\n          request.onload = function () {\n            resolve(request);\n          };\n          request.onerror = function () {\n            reject(request);\n          };\n          if (timeoutMS > 0) {\n            request.timeout = timeoutMS;\n            request.ontimeout = function () {\n              reject(request);\n            };\n          }\n          setTimeout(function () {\n            request.send(data);\n          }, 0);\n        } catch (err) {\n          reject();\n        }\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"checkInstallStatus\", function (port, timeoutMS) {\n      return _this.sendComServerRequest(GET, \"\".concat(_this.url).concat(port, \"/status\"), null, timeoutMS).then(function (request) {\n        var response = JSON.parse(request.responseText);\n        if (response.running) {\n          return response;\n        }\n        _this.comServerInstallationPromiseRejected = true;\n        throw new Error(STATUS_NOT_RUNNING);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getComChannel\", function (appName) {\n      return getCookie(\"\".concat(appName, \"-bgp-id\"));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setComChannel\", function (appName) {\n      var bgpId = _this.getComChannel(appName) || _this.generateId();\n      var comChannelName = \"bgp-\".concat(bgpId);\n      var aYearFromNow = new Date().getTime() + YEAR_MS;\n      setCookie(\"\".concat(appName, \"-bgp-id\"), bgpId, aYearFromNow);\n      setCookie(\"bgp-\".concat(bgpId), 'generic', aYearFromNow);\n      return comChannelName;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getComServerStatus\", function (timeoutMS) {\n      if (!_this.comServerInstallationPromise || _this.comServerInstallationPromiseRejected) {\n        // Null out the promise and fetch status again (handles the case where user installed box edit within the same page load)\n        _this.comServerInstallationPromise = null;\n        _this.comServerInstallationPromise = _this.getComServerStatusInstallationPromise(timeoutMS);\n        return _this.comServerInstallationPromise;\n      }\n      return _this.comServerInstallationPromise;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"sendRequest\", function (data, browserToComServerTimeoutMS, comServerToApplicationTimeoutSec) {\n      var url = \"\".concat(_this.url).concat(_this.currentPort, \"/application_request?application=\").concat(_this.appName, \"&com=\").concat(_this.comChannelName, \"&timeout=\").concat(comServerToApplicationTimeoutSec);\n      return _this.sendComServerRequest(POST, url, data, browserToComServerTimeoutMS).then(function (results) {\n        // TODO: does the error object need to be richer?\n        var response = JSON.parse(results.responseText);\n        if (response.response_type && response.response_type === 'error') {\n          throw new Error(\"Communication error: \".concat(response.message));\n        }\n        return response;\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"sendCommand\", function (data, browserToComServerTimeoutMS, comServerToApplicationTimeoutSec) {\n      var url = \"\".concat(_this.url).concat(_this.currentPort, \"/application_command?application=\").concat(_this.appName, \"&com=\").concat(_this.comChannelName, \"&timeout=\").concat(comServerToApplicationTimeoutSec);\n      return _this.sendComServerRequest(POST, url, data, browserToComServerTimeoutMS).then(function (results) {\n        return JSON.parse(results.responseText);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"generateId\", function () {\n      var time = new Date().getTime();\n      return 'xxxxxxxx'.replace(/x/g, function () {\n        // Generate random number between 1 and 16.\n        // Using time for added entropy.\n        var rand = Math.floor((time + Math.random() * 16) % 16); // Convert number to a HEX\n\n        return rand.toString(16);\n      });\n    });\n    _this.url = _url;\n    _this.comChannelName = _this.setComChannel(_appName);\n    _this.channelName = channelName;\n    _this.comServerInstallationPromise = null;\n    _this.comServerInstallationPromiseRejected = false;\n    _this.retryCounter = 0;\n    _this.sendCount = 0;\n    _this.currentPort = getPreferredPortOrdering().primary;\n    _this.window = window;\n    return _this;\n  }\n  return HTTPChannel;\n}(Channel);\nexport default HTTPChannel;","map":{"version":3,"sources":["../../../src/api/box-edit/HTTPChannel.js"],"names":["LocalStore","Channel","get","getCookie","set","setCookie","GET","POST","YEAR_MS","DEFAULT_PRIMARY_PORT","DEFAULT_FALLBACK_PORT","CONTENT_TYPE_HEADER","CONTENT_TYPE_VALUE","STATUS_NOT_RUNNING","localStore","shouldUseFallbackFirst","getItem","saveFallbackPortPreference","setItem","clearFallbackPortPreference","removeItem","getPreferredPortOrdering","primary","fallback","HTTPChannel","appName","url","channelName","comChannelName","setComChannel","comServerInstallationPromise","comServerInstallationPromiseRejected","retryCounter","sendCount","currentPort","window","method","xhr","XMLHttpRequest","open","ex","createCORSRequest","Error","timeoutMS","resolve","reject","Promise","res","rej","resolveWithValidPort","port","portPreferences","primaryPort","fallbackPort","checkInstallStatus","then","bind","catch","err","data","request","setRequestHeader","onload","onerror","timeout","ontimeout","setTimeout","send","sendComServerRequest","response","JSON","parse","responseText","running","bgpId","getComChannel","generateId","aYearFromNow","Date","getTime","getComServerStatusInstallationPromise","browserToComServerTimeoutMS","comServerToApplicationTimeoutSec","results","response_type","message","time","replace","rand","Math","floor","random","toString"],"mappings":"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","sourcesContent":["// @flow\nimport LocalStore from '../../utils/LocalStore';\nimport Channel from './Channel';\nimport { get as getCookie, set as setCookie } from './cookies';\n\nconst GET = 'GET';\nconst POST = 'POST';\nconst YEAR_MS = 31536000000;\nconst DEFAULT_PRIMARY_PORT = 17223;\nconst DEFAULT_FALLBACK_PORT = 17224;\nconst CONTENT_TYPE_HEADER = 'Content-Type';\nconst CONTENT_TYPE_VALUE = 'text/plain; charset=UTF-8';\nconst STATUS_NOT_RUNNING = 'notrunning';\n\nconst localStore = new LocalStore();\n\nfunction shouldUseFallbackFirst() {\n    return !!localStore.getItem('comUseFallback');\n}\n\nfunction saveFallbackPortPreference() {\n    localStore.setItem('comUseFallback', 1);\n}\n\nfunction clearFallbackPortPreference() {\n    localStore.removeItem('comUseFallback');\n}\n\nfunction getPreferredPortOrdering() {\n    if (shouldUseFallbackFirst()) {\n        return {\n            primary: DEFAULT_FALLBACK_PORT,\n            fallback: DEFAULT_PRIMARY_PORT,\n        };\n    }\n\n    return {\n        primary: DEFAULT_PRIMARY_PORT,\n        fallback: DEFAULT_FALLBACK_PORT,\n    };\n}\n\nclass HTTPChannel extends Channel {\n    url: string;\n\n    channelName: string;\n\n    comChannelName: string;\n\n    comServerInstallationPromise: ?Promise<any>;\n\n    retryCounter: number;\n\n    sendCount: number;\n\n    currentPort: number;\n\n    comServerInstallationPromiseRejected: boolean;\n\n    window: any;\n\n    constructor(appName: string, url: string, channelName: string) {\n        super(appName);\n        this.url = url;\n        this.comChannelName = this.setComChannel(appName);\n        this.channelName = channelName;\n        this.comServerInstallationPromise = null;\n        this.comServerInstallationPromiseRejected = false;\n        this.retryCounter = 0;\n        this.sendCount = 0;\n        this.currentPort = getPreferredPortOrdering().primary;\n        this.window = window;\n    }\n\n    createCORSRequest = (method: string, url: string): XMLHttpRequest => {\n        let xhr;\n        try {\n            const { XMLHttpRequest } = this.window;\n            xhr = new XMLHttpRequest();\n            xhr.open(method, url, true);\n            return xhr;\n        } catch (ex) {\n            if (this.retryCounter < 3) {\n                this.retryCounter += 1;\n                return this.createCORSRequest(method, url);\n            }\n            throw new Error('could not create xhr');\n        }\n    };\n\n    getComServerStatusInstallationPromise = (timeoutMS: number): Promise<any> => {\n        let resolve;\n        let reject;\n        const comServerInstallationPromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n\n        const resolveWithValidPort = (port, res) => {\n            this.currentPort = port;\n\n            if (port === DEFAULT_PRIMARY_PORT) {\n                clearFallbackPortPreference();\n            } else {\n                saveFallbackPortPreference();\n            }\n\n            this.comServerInstallationPromiseRejected = false;\n            resolve(res);\n        };\n\n        const portPreferences = getPreferredPortOrdering();\n        const primaryPort = portPreferences.primary;\n        const fallbackPort = portPreferences.fallback;\n\n        // Try primary port first\n        this.checkInstallStatus(primaryPort, timeoutMS)\n            .then(resolveWithValidPort.bind(this, primaryPort))\n            .catch(err => {\n                // If com server returned that the port is available but the app is not running, reject\n                if (err === STATUS_NOT_RUNNING) {\n                    this.comServerInstallationPromiseRejected = true;\n                    reject();\n                    return;\n                }\n\n                // Only check secondary, if necessary, otherwise this throws a browser error in console\n                this.checkInstallStatus(fallbackPort, timeoutMS)\n                    .then(resolveWithValidPort.bind(this, fallbackPort))\n                    .catch(() => {\n                        this.comServerInstallationPromiseRejected = true;\n                        reject();\n                    });\n            });\n\n        return comServerInstallationPromise;\n    };\n\n    sendComServerRequest = (method: string, url: string, data: ?Object | string, timeoutMS: number): Promise<any> => {\n        return new Promise((resolve, reject) => {\n            try {\n                const request = this.createCORSRequest(method, url);\n\n                request.setRequestHeader(CONTENT_TYPE_HEADER, CONTENT_TYPE_VALUE);\n                request.onload = () => {\n                    resolve(request);\n                };\n                request.onerror = () => {\n                    reject(request);\n                };\n\n                if (timeoutMS > 0) {\n                    request.timeout = timeoutMS;\n                    request.ontimeout = () => {\n                        reject(request);\n                    };\n                }\n                setTimeout(() => {\n                    request.send(data);\n                }, 0);\n            } catch (err) {\n                reject();\n            }\n        });\n    };\n\n    checkInstallStatus = (port: number, timeoutMS: number): Promise<any> => {\n        return this.sendComServerRequest(GET, `${this.url}${port}/status`, null, timeoutMS).then(request => {\n            const response = JSON.parse(request.responseText);\n            if (response.running) {\n                return response;\n            }\n            this.comServerInstallationPromiseRejected = true;\n            throw new Error(STATUS_NOT_RUNNING);\n        });\n    };\n\n    getComChannel = (appName: string) => getCookie(`${appName}-bgp-id`);\n\n    setComChannel = (appName: string) => {\n        const bgpId = this.getComChannel(appName) || this.generateId();\n        const comChannelName = `bgp-${bgpId}`;\n        const aYearFromNow = new Date().getTime() + YEAR_MS;\n        setCookie(`${appName}-bgp-id`, bgpId, aYearFromNow);\n        setCookie(`bgp-${bgpId}`, 'generic', aYearFromNow);\n        return comChannelName;\n    };\n\n    getComServerStatus = (timeoutMS: number) => {\n        if (!this.comServerInstallationPromise || this.comServerInstallationPromiseRejected) {\n            // Null out the promise and fetch status again (handles the case where user installed box edit within the same page load)\n            this.comServerInstallationPromise = null;\n            this.comServerInstallationPromise = this.getComServerStatusInstallationPromise(timeoutMS);\n            return this.comServerInstallationPromise;\n        }\n        return this.comServerInstallationPromise;\n    };\n\n    sendRequest = (\n        data: Object | string,\n        browserToComServerTimeoutMS: number,\n        comServerToApplicationTimeoutSec: number,\n    ): Promise<any> => {\n        const url = `${this.url}${this.currentPort}/application_request?application=${this.appName}&com=${this.comChannelName}&timeout=${comServerToApplicationTimeoutSec}`;\n        return this.sendComServerRequest(POST, url, data, browserToComServerTimeoutMS).then(results => {\n            // TODO: does the error object need to be richer?\n            const response = JSON.parse(results.responseText);\n            if (response.response_type && response.response_type === 'error') {\n                throw new Error(`Communication error: ${response.message}`);\n            }\n            return response;\n        });\n    };\n\n    sendCommand = (\n        data: Object | string,\n        browserToComServerTimeoutMS: number,\n        comServerToApplicationTimeoutSec: number,\n    ): Promise<any> => {\n        const url = `${this.url}${this.currentPort}/application_command?application=${this.appName}&com=${this.comChannelName}&timeout=${comServerToApplicationTimeoutSec}`;\n        return this.sendComServerRequest(POST, url, data, browserToComServerTimeoutMS).then(results => {\n            return JSON.parse(results.responseText);\n        });\n    };\n\n    generateId = () => {\n        const time = new Date().getTime();\n        return 'xxxxxxxx'.replace(/x/g, () => {\n            // Generate random number between 1 and 16.\n            // Using time for added entropy.\n            const rand = Math.floor((time + Math.random() * 16) % 16);\n            // Convert number to a HEX\n            return rand.toString(16);\n        });\n    };\n}\n\nexport default HTTPChannel;\n"]},"metadata":{},"sourceType":"module"}