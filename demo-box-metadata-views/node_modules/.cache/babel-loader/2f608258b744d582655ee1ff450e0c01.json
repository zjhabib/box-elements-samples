{"ast":null,"code":"import neverTargeted from '../neverTargeted';\n\n// This function takes in an array of targetingApi hooks (functions) and returns the first\n// eligible targetingApi hook OR defaults to the neverTargeted hook.\n//\n// @TODO (online-sales): Incorporate priority for determining targeting in case we have multiple\n// items in the array which are eligible (i.e. contextual messages having greater priority than onboarding).\nvar useCombined = function useCombined(useTargetingApis) {\n  var useGetTargetingApi = function useGetTargetingApi(useTargetingApi) {\n    return useTargetingApi();\n  };\n  var targetingApis = useTargetingApis.map(useGetTargetingApi);\n  var firstEligibleTargetingApi = targetingApis.find(function (_ref) {\n    var canShow = _ref.canShow;\n    return canShow;\n  });\n  return firstEligibleTargetingApi || neverTargeted;\n};\nexport default useCombined;","map":{"version":3,"sources":["../../../../src/features/targeting/utils/useCombined.js"],"names":["neverTargeted","useCombined","useTargetingApis","useGetTargetingApi","useTargetingApi","targetingApis","map","firstEligibleTargetingApi","find","canShow"],"mappings":"AACA,OAAOA,aAAP,MAA0B,kBAA1B;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,gBAAD,EAAwE;EACxF,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,eAAD,EAAA;IAAA,OAAuDA,eAAe,CAAA,CAAtE;EAAA,CAA3B;EACA,IAAMC,aAAa,GAAGH,gBAAgB,CAACI,GAAjBJ,CAAqBC,kBAArBD,CAAtB;EAEA,IAAMK,yBAAyB,GAAG,aAAa,CAACC,IAAd,CAAmB,UAAA,IAAA,EAAA;IAAA,IAAGC,OAAH,GAAA,IAAA,CAAGA,OAAH;IAAA,OAAwCA,OAAxC;EAAA,CAAnB,CAAlC;EAEA,OAAOF,yBAAyB,IAAIP,aAApC;AACH,CAPD;AASA,eAAeC,WAAf","sourcesContent":["// @flow\nimport neverTargeted from '../neverTargeted';\nimport { type TargetingApi } from '../types';\n\n// This function takes in an array of targetingApi hooks (functions) and returns the first\n// eligible targetingApi hook OR defaults to the neverTargeted hook.\n//\n// @TODO (online-sales): Incorporate priority for determining targeting in case we have multiple\n// items in the array which are eligible (i.e. contextual messages having greater priority than onboarding).\nconst useCombined = (useTargetingApis: $ReadOnlyArray<() => TargetingApi>): TargetingApi => {\n    const useGetTargetingApi = (useTargetingApi: () => TargetingApi): TargetingApi => useTargetingApi();\n    const targetingApis = useTargetingApis.map(useGetTargetingApi);\n\n    const firstEligibleTargetingApi = targetingApis.find(({ canShow }: TargetingApi): boolean => canShow);\n\n    return firstEligibleTargetingApi || neverTargeted;\n};\n\nexport default useCombined;\n"]},"metadata":{},"sourceType":"module"}