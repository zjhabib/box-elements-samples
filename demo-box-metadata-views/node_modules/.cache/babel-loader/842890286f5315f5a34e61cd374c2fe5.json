{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Helper for the box App Activity API\n * @author Box\n */\nimport MarkerBasedAPI from './MarkerBasedAPI';\nimport { ERROR_CODE_DELETE_APP_ACTIVITY, HTTP_STATUS_CODE_NOT_FOUND } from '../constants';\nimport { APP_ACTIVITY_FIELDS_TO_FETCH } from '../utils/fields';\nvar AppActivity = /*#__PURE__*/\nfunction (_MarkerBasedAPI) {\n  _inherits(AppActivity, _MarkerBasedAPI);\n  function AppActivity() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, AppActivity);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppActivity)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"permissions\", {});\n    _defineProperty(_assertThisInitialized(_this), \"mapAppActivityItem\", function (item) {\n      var activity_template = item.activity_template,\n        app = item.app,\n        created_by = item.created_by,\n        id = item.id,\n        occurred_at = item.occurred_at,\n        rendered_text = item.rendered_text,\n        type = item.type;\n      var can_delete = _this.permissions.can_delete;\n      return {\n        activity_template: activity_template,\n        app: app,\n        created_at: occurred_at,\n        created_by: created_by,\n        id: id,\n        permissions: {\n          can_delete: can_delete\n        },\n        rendered_text: rendered_text,\n        type: type\n      };\n    });\n    _defineProperty(_assertThisInitialized(_this), \"successHandler\", function (_ref) {\n      var _ref$entries = _ref.entries,\n        entries = _ref$entries === void 0 ? [] : _ref$entries;\n      if (_this.isDestroyed() || typeof _this.successCallback !== 'function') {\n        return;\n      }\n      var activityEntries = entries.map(_this.mapAppActivityItem);\n      _this.successCallback({\n        entries: activityEntries,\n        total_count: activityEntries.length\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"errorHandler\", function (error) {\n      if (_this.isDestroyed() && typeof _this.errorCallback !== 'function') {\n        return;\n      }\n      var response = error.response; // In the case of a 404, the enterprise does not have App Activities enabled.\n      // Show no App Activity\n\n      if (response.status === HTTP_STATUS_CODE_NOT_FOUND) {\n        _this.successHandler({\n          entries: [],\n          total_count: 0\n        });\n      } else {\n        _this.errorCallback(error, response.status);\n      }\n    });\n    return _this;\n  }\n  _createClass(AppActivity, [{\n    key: \"getUrl\",\n    /**\n     * API URL for getting App Activity on a file\n     *\n     * @return {string} Url for all app activity on a file\n     */\n    value: function getUrl() {\n      return \"\".concat(this.getBaseApiUrl(), \"/app_activities\");\n    }\n    /**\n     * API URL for deleting app activity from a file\n     *\n     * @param id - ID of an app activity item\n     * @return {string} - URL to delete app activity\n     */\n  }, {\n    key: \"getDeleteUrl\",\n    value: function getDeleteUrl(id) {\n      if (!id) {\n        throw new Error('Missing file id!');\n      }\n      return \"\".concat(this.getUrl(), \"/\").concat(id);\n    }\n    /**\n     * Generic success handler\n     *\n     * @param {AppActivityAPIItems} data - the response data\n     */\n  }, {\n    key: \"getAppActivity\",\n    /**\n     * API for fetching App Activity on a file\n     *\n     * @param {string} id - the file id\n     * @param {BoxItemPermission} permissions - Permissions to attach to the app activity items. Determines if it can be deleted.\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {number} [limit] - the max number of app activity items to return.\n     *\n     * @returns {void}\n     */\n    value: function getAppActivity(id, permissions, successCallback, errorCallback) {\n      var requestData = {\n        item_id: id,\n        item_type: 'file',\n        fields: APP_ACTIVITY_FIELDS_TO_FETCH.toString()\n      };\n      this.permissions = permissions;\n      this.markerGet({\n        id: id,\n        successCallback: successCallback,\n        errorCallback: errorCallback,\n        requestData: requestData\n      });\n    }\n    /**\n     * Delete an app activity item\n     *\n     * @param {string} id - The ID of the Box file that App Activity is on\n     * @param {string} appActivityId - An AppActivity item id\n     * @param {Function} successCallback - The success callback\n     * @param {Function} errorCallback - The error callback\n     */\n  }, {\n    key: \"deleteAppActivity\",\n    value: function deleteAppActivity(_ref2) {\n      var id = _ref2.id,\n        appActivityId = _ref2.appActivityId,\n        successCallback = _ref2.successCallback,\n        errorCallback = _ref2.errorCallback;\n      this.errorCode = ERROR_CODE_DELETE_APP_ACTIVITY;\n      this.delete({\n        id: id,\n        url: this.getDeleteUrl(appActivityId),\n        successCallback: successCallback,\n        errorCallback: errorCallback\n      });\n    }\n  }]);\n  return AppActivity;\n}(MarkerBasedAPI);\nexport default AppActivity;","map":{"version":3,"sources":["../../src/api/AppActivity.js"],"names":["MarkerBasedAPI","ERROR_CODE_DELETE_APP_ACTIVITY","HTTP_STATUS_CODE_NOT_FOUND","APP_ACTIVITY_FIELDS_TO_FETCH","AppActivity","item","activity_template","app","created_by","id","occurred_at","rendered_text","type","can_delete","permissions","created_at","getBaseApiUrl","Error","getUrl","entries","isDestroyed","successCallback","activityEntries","map","mapAppActivityItem","total_count","length","error","errorCallback","response","status","successHandler","requestData","item_id","item_type","fields","toString","markerGet","appActivityId","errorCode","delete","url","getDeleteUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAKA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,8BAAT,EAAyCC,0BAAzC,QAA2E,cAA3E;AACA,SAASC,4BAAT,QAA6C,iBAA7C;IAKMC,W;;;;;;;;;;;kEAE+B,CAAA,C;yEAWZ,UAACC,IAAD,EAA+C;MAAA,IACxDC,iBADwD,GACqBD,IADrB,CACxDC,iBADwD;QACrCC,GADqC,GACqBF,IADrB,CACrCE,GADqC;QAChCC,UADgC,GACqBH,IADrB,CAChCG,UADgC;QACpBC,EADoB,GACqBJ,IADrB,CACpBI,EADoB;QAChBC,WADgB,GACqBL,IADrB,CAChBK,WADgB;QACHC,aADG,GACqBN,IADrB,CACHM,aADG;QACYC,IADZ,GACqBP,IADrB,CACYO,IADZ;MAAA,IAExDC,UAFwD,GAEzC,KAAA,CAAKC,WAFoC,CAExDD,UAFwD;MAIhE,OAAO;QACHP,iBAAiB,EAAjBA,iBADG;QAEHC,GAAG,EAAHA,GAFG;QAGHQ,UAAU,EAAEL,WAHT;QAIHF,UAAU,EAAVA,UAJG;QAKHC,EAAE,EAAFA,EALG;QAMHK,WAAW,EAAE;UACTD,UAAU,EAAVA;QADS,CANV;QASHF,aAAa,EAAbA,aATG;QAUHC,IAAI,EAAJA;MAVG,CAAP;IAYH,C;qEA8BgB,UAAA,IAAA,EAAiD;MAAA,IAAA,YAAA,GAAA,IAAA,CAA9CO,OAA8C;QAA9CA,OAA8C,GAAA,YAAA,KAAA,KAAA,CAAA,GAApC,EAAoC,GAAA,YAAA;MAC9D,IAAI,KAAA,CAAKC,WAAL,CAAA,CAAA,IAAsB,OAAO,KAAA,CAAKC,eAAZ,KAAgC,UAA1D,EAAsE;QAClE;MACH;MAED,IAAMC,eAAe,GAAGH,OAAO,CAACI,GAARJ,CAAY,KAAA,CAAKK,kBAAjBL,CAAxB;MACA,KAAA,CAAKE,eAAL,CAAqB;QAAEF,OAAO,EAAEG,eAAX;QAA4BG,WAAW,EAAEH,eAAe,CAACI;MAAzD,CAArB,CAAA;IACH,C;mEAOc,UAACC,KAAD,EAAmC;MAC9C,IAAI,KAAA,CAAKP,WAAL,CAAA,CAAA,IAAsB,OAAO,KAAA,CAAKQ,aAAZ,KAA8B,UAAxD,EAAoE;QAChE;MACH;MAH6C,IAKtCC,QALsC,GAKzBF,KALyB,CAKtCE,QALsC,CAAA,CAO9C;MACA;;MACA,IAAIA,QAAQ,CAACC,MAATD,KAAoB3B,0BAAxB,EAAoD;QAChD,KAAA,CAAK6B,cAAL,CAAoB;UAChBZ,OAAO,EAAE,EADO;UAEhBM,WAAW,EAAE;QAFG,CAApB,CAAA;MAIH,CALD,MAKO;QACH,KAAA,CAAKG,aAAL,CAAmBD,KAAnB,EAA0BE,QAAQ,CAACC,MAAnC,CAAA;MACH;IACJ,C;;;;;IA3DD;;;;;6BAKiB;MACb,OAAA,EAAA,CAAA,MAAA,CAAU,IAAA,CAAKd,aAAL,CAAA,CAAV,EAAA,iBAAA,CAAA;IACH;IAED;;;;;;;;iCAMaP,E,EAAoB;MAC7B,IAAI,CAACA,EAAL,EAAS;QACL,MAAM,IAAIQ,KAAJ,CAAU,kBAAV,CAAN;MACH;MAED,OAAA,EAAA,CAAA,MAAA,CAAU,IAAA,CAAKC,MAAL,CAAA,CAAV,EAAA,GAAA,CAAA,CAAA,MAAA,CAA2BT,EAA3B,CAAA;IACH;IAED;;;;;;;IAsCA;;;;;;;;;;;mCAYIA,E,EACAK,W,EACAO,e,EACAO,a,EACI;MACJ,IAAMI,WAAW,GAAG;QAChBC,OAAO,EAAExB,EADO;QAEhByB,SAAS,EAAE,MAFK;QAGhBC,MAAM,EAAEhC,4BAA4B,CAACiC,QAA7BjC,CAAAA;MAHQ,CAApB;MAMA,IAAA,CAAKW,WAAL,GAAmBA,WAAnB;MAEA,IAAA,CAAKuB,SAAL,CAAe;QACX5B,EAAE,EAAFA,EADW;QAEXY,eAAe,EAAfA,eAFW;QAGXO,aAAa,EAAbA,aAHW;QAIXI,WAAW,EAAXA;MAJW,CAAf,CAAA;IAMH;IAED;;;;;;;;;;6CAkBS;MAAA,IATLvB,EASK,GAAA,KAAA,CATLA,EASK;QARL6B,aAQK,GAAA,KAAA,CARLA,aAQK;QAPLjB,eAOK,GAAA,KAAA,CAPLA,eAOK;QANLO,aAMK,GAAA,KAAA,CANLA,aAMK;MACL,IAAA,CAAKW,SAAL,GAAiBtC,8BAAjB;MAEA,IAAA,CAAKuC,MAAL,CAAY;QACR/B,EAAE,EAAFA,EADQ;QAERgC,GAAG,EAAE,IAAA,CAAKC,YAAL,CAAkBJ,aAAlB,CAFG;QAGRjB,eAAe,EAAfA,eAHQ;QAIRO,aAAa,EAAbA;MAJQ,CAAZ,CAAA;IAMH;;;EAxJqB5B,c;AA2J1B,eAAeI,WAAf","sourcesContent":["/**\n * @flow\n * @file Helper for the box App Activity API\n * @author Box\n */\nimport MarkerBasedAPI from './MarkerBasedAPI';\nimport { ERROR_CODE_DELETE_APP_ACTIVITY, HTTP_STATUS_CODE_NOT_FOUND } from '../constants';\nimport { APP_ACTIVITY_FIELDS_TO_FETCH } from '../utils/fields';\nimport type { ElementsErrorCallback } from '../common/types/api';\nimport type { AppActivityAPIItem, AppActivityAPIItems, AppActivityItem } from '../common/types/feed';\nimport type { BoxItemPermission } from '../common/types/core';\n\nclass AppActivity extends MarkerBasedAPI {\n    /** @property {BoxItemPermission} - Placeholder permissions object to determine if app activity can be deleted */\n    permissions: BoxItemPermission = {};\n\n    /**\n     * Map an entry from the AppActivityAPIItem to an AppActivityItem.\n     * occurred_at -> created_at\n     * Adds permissions to item\n     *\n     * @param {AppActivityAPIItem} item - A single entry in the AppActivity API entries list\n     *\n     * @return {AppActivityItem}\n     */\n    mapAppActivityItem = (item: AppActivityAPIItem): AppActivityItem => {\n        const { activity_template, app, created_by, id, occurred_at, rendered_text, type } = item;\n        const { can_delete } = this.permissions;\n\n        return {\n            activity_template,\n            app,\n            created_at: occurred_at,\n            created_by,\n            id,\n            permissions: {\n                can_delete,\n            },\n            rendered_text,\n            type,\n        };\n    };\n\n    /**\n     * API URL for getting App Activity on a file\n     *\n     * @return {string} Url for all app activity on a file\n     */\n    getUrl(): string {\n        return `${this.getBaseApiUrl()}/app_activities`;\n    }\n\n    /**\n     * API URL for deleting app activity from a file\n     *\n     * @param id - ID of an app activity item\n     * @return {string} - URL to delete app activity\n     */\n    getDeleteUrl(id: string): string {\n        if (!id) {\n            throw new Error('Missing file id!');\n        }\n\n        return `${this.getUrl()}/${id}`;\n    }\n\n    /**\n     * Generic success handler\n     *\n     * @param {AppActivityAPIItems} data - the response data\n     */\n    successHandler = ({ entries = [] }: AppActivityAPIItems): void => {\n        if (this.isDestroyed() || typeof this.successCallback !== 'function') {\n            return;\n        }\n\n        const activityEntries = entries.map(this.mapAppActivityItem);\n        this.successCallback({ entries: activityEntries, total_count: activityEntries.length });\n    };\n\n    /**\n     * Generic error handler\n     *\n     * @param {AxiosError} error - the error response\n     */\n    errorHandler = (error: $AxiosError<any>): void => {\n        if (this.isDestroyed() && typeof this.errorCallback !== 'function') {\n            return;\n        }\n\n        const { response } = error;\n\n        // In the case of a 404, the enterprise does not have App Activities enabled.\n        // Show no App Activity\n        if (response.status === HTTP_STATUS_CODE_NOT_FOUND) {\n            this.successHandler({\n                entries: [],\n                total_count: 0,\n            });\n        } else {\n            this.errorCallback(error, response.status);\n        }\n    };\n\n    /**\n     * API for fetching App Activity on a file\n     *\n     * @param {string} id - the file id\n     * @param {BoxItemPermission} permissions - Permissions to attach to the app activity items. Determines if it can be deleted.\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {number} [limit] - the max number of app activity items to return.\n     *\n     * @returns {void}\n     */\n    getAppActivity(\n        id: string,\n        permissions: BoxItemPermission,\n        successCallback: Function,\n        errorCallback: ElementsErrorCallback,\n    ): void {\n        const requestData = {\n            item_id: id,\n            item_type: 'file',\n            fields: APP_ACTIVITY_FIELDS_TO_FETCH.toString(),\n        };\n\n        this.permissions = permissions;\n\n        this.markerGet({\n            id,\n            successCallback,\n            errorCallback,\n            requestData,\n        });\n    }\n\n    /**\n     * Delete an app activity item\n     *\n     * @param {string} id - The ID of the Box file that App Activity is on\n     * @param {string} appActivityId - An AppActivity item id\n     * @param {Function} successCallback - The success callback\n     * @param {Function} errorCallback - The error callback\n     */\n    deleteAppActivity({\n        id,\n        appActivityId,\n        successCallback,\n        errorCallback,\n    }: {\n        appActivityId: string,\n        errorCallback: Function,\n        id: string,\n        successCallback: Function,\n    }): void {\n        this.errorCode = ERROR_CODE_DELETE_APP_ACTIVITY;\n\n        this.delete({\n            id,\n            url: this.getDeleteUrl(appActivityId),\n            successCallback,\n            errorCallback,\n        });\n    }\n}\n\nexport default AppActivity;\n"]},"metadata":{},"sourceType":"module"}