{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport * as React from 'react';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport { PLACEMENT_AUTO } from './constants';\nvar PopperComponent = function PopperComponent(props) {\n  var children = props.children,\n    isOpen = props.isOpen,\n    modifiers = props.modifiers,\n    popperPlacement = props.placement;\n  var elements = React.Children.toArray(children);\n  if (elements.length !== 2) {\n    throw new Error('PopperComponent must have exactly two children: A reference component and the Popper content');\n  }\n  var _elements = _slicedToArray(elements, 2),\n    reference = _elements[0],\n    popperContent = _elements[1];\n  return React.createElement(Manager, null, React.createElement(Reference, null, function (_ref) {\n    var ref = _ref.ref;\n    return React.cloneElement(reference, {\n      ref: ref\n    });\n  }), isOpen && React.createElement(Popper, {\n    placement: popperPlacement,\n    modifiers: modifiers\n  }, function (_ref2) {\n    var ref = _ref2.ref,\n      style = _ref2.style,\n      placement = _ref2.placement,\n      scheduleUpdate = _ref2.scheduleUpdate;\n    var contentStyles = popperContent.props.style;\n    return React.cloneElement(popperContent, {\n      ref: ref,\n      style: _objectSpread({}, contentStyles, {}, style),\n      placement: placement,\n      scheduleUpdate: scheduleUpdate\n    });\n  }));\n};\nPopperComponent.defaultProps = {\n  placement: PLACEMENT_AUTO\n};\nexport default PopperComponent;","map":{"version":3,"sources":["../../../src/components/popper/PopperComponent.js"],"names":["React","Manager","Reference","Popper","PLACEMENT_AUTO","PopperComponent","props","children","isOpen","modifiers","placement","popperPlacement","elements","Children","toArray","length","Error","reference","popperContent","ref","cloneElement","style","scheduleUpdate","contentStyles","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,cAA3C;AAEA,SAASC,cAAT,QAA+B,aAA/B;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAkB;EAAA,IAC9BC,QAD8B,GAC8BD,KAD9B,CAC9BC,QAD8B;IACpBC,MADoB,GAC8BF,KAD9B,CACpBE,MADoB;IACZC,SADY,GAC8BH,KAD9B,CACZG,SADY;IACUE,eADV,GAC8BL,KAD9B,CACDI,SADC;EAEtC,IAAME,QAAQ,GAAGZ,KAAK,CAACa,QAANb,CAAec,OAAfd,CAAuBO,QAAvBP,CAAjB;EAEA,IAAIY,QAAQ,CAACG,MAATH,KAAoB,CAAxB,EAA2B;IACvB,MAAM,IAAII,KAAJ,CAAU,8FAAV,CAAN;EACH;EANqC,IAAA,SAAA,GAAA,cAAA,CAQHJ,QARG,EAAA,CAAA,CAAA;IAQ/BK,SAR+B,GAAA,SAAA,CAAA,CAAA,CAAA;IAQpBC,aARoB,GAAA,SAAA,CAAA,CAAA,CAAA;EAUtC,OACI,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,IAAA,EAAY,UAAA,IAAA,EAAA;IAAA,IAAGC,GAAH,GAAA,IAAA,CAAGA,GAAH;IAAA,OAAa,KAAK,CAACC,YAAN,CAAmBH,SAAnB,EAA8B;MAAEE,GAAG,EAAHA;IAAF,CAA9B,CAAb;EAAA,CAAZ,CADJ,EAEKX,MAAM,IACH,KAAA,CAAA,aAAA,CAAC,MAAD,EAAA;IAAQ,SAAS,EAAEG,eAAnB;IAAoC,SAAS,EAAEF;EAA/C,CAAA,EACK,UAAA,KAAA,EAA+C;IAAA,IAA5CU,GAA4C,GAAA,KAAA,CAA5CA,GAA4C;MAAvCE,KAAuC,GAAA,KAAA,CAAvCA,KAAuC;MAAhCX,SAAgC,GAAA,KAAA,CAAhCA,SAAgC;MAArBY,cAAqB,GAAA,KAAA,CAArBA,cAAqB;IAAA,IAC7BC,aAD6B,GACXL,aAAa,CAACZ,KADH,CACpCe,KADoC;IAE5C,OAAO,KAAK,CAACD,YAAN,CAAmBF,aAAnB,EAAkC;MACrCC,GAAG,EAAHA,GADqC;MAErCE,KAAK,EAAA,aAAA,CAAA,CAAA,CAAA,EAAOE,aAAP,EAAA,CAAA,CAAA,EAAyBF,KAAzB,CAFgC;MAGrCX,SAAS,EAATA,SAHqC;MAIrCY,cAAc,EAAdA;IAJqC,CAAlC,CAAP;EAMH,CATL,CAHR,CADJ;AAkBH,CA5BD;AA8BAjB,eAAe,CAACmB,YAAhBnB,GAA+B;EAC3BK,SAAS,EAAEN;AADgB,CAA/BC;AAIA,eAAeA,eAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport type { Modifiers, Placement } from 'popper.js';\nimport { PLACEMENT_AUTO } from './constants';\n\ntype Props = {\n    children: React.Node,\n    isOpen?: boolean,\n    modifiers?: Modifiers,\n    placement: Placement,\n};\n\nconst PopperComponent = (props: Props) => {\n    const { children, isOpen, modifiers, placement: popperPlacement } = props;\n    const elements = React.Children.toArray(children);\n\n    if (elements.length !== 2) {\n        throw new Error('PopperComponent must have exactly two children: A reference component and the Popper content');\n    }\n\n    const [reference, popperContent] = elements;\n\n    return (\n        <Manager>\n            <Reference>{({ ref }) => React.cloneElement(reference, { ref })}</Reference>\n            {isOpen && (\n                <Popper placement={popperPlacement} modifiers={modifiers}>\n                    {({ ref, style, placement, scheduleUpdate }) => {\n                        const { style: contentStyles } = popperContent.props;\n                        return React.cloneElement(popperContent, {\n                            ref,\n                            style: { ...contentStyles, ...style },\n                            placement,\n                            scheduleUpdate,\n                        });\n                    }}\n                </Popper>\n            )}\n        </Manager>\n    );\n};\n\nPopperComponent.defaultProps = {\n    placement: PLACEMENT_AUTO,\n};\n\nexport default PopperComponent;\n"]},"metadata":{},"sourceType":"module"}