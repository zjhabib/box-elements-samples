{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// @deprecated, use Collapsible\n\n/**\n * \n * @file Preview sidebar section component\n * @author Box\n */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport IconCaretDown from '../../icons/general/IconCaretDown';\nimport { COLOR_999 } from '../../constants';\nimport './SidebarSection.scss';\nvar SidebarSection = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(SidebarSection, _React$PureComponent);\n\n  /**\n   * [constructor]\n   *\n   * @private\n   * @return {ContentPreview}\n   */\n  function SidebarSection(props) {\n    var _this;\n    _classCallCheck(this, SidebarSection);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SidebarSection).call(this, props));\n    _defineProperty(_assertThisInitialized(_this), \"toggleVisibility\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpen: !prevState.isOpen\n        };\n      });\n    });\n    _this.state = {\n      isOpen: props.isOpen\n    };\n    return _this;\n  }\n  /**\n   * Click handler for toggling the section\n   *\n   * @private\n   * @param {Event} event - click event\n   * @return {void}\n   */\n\n  _createClass(SidebarSection, [{\n    key: \"render\",\n    /**\n     * Renders the section\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    value: function render() {\n      var isOpen = this.state.isOpen;\n      var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        title = _this$props.title,\n        interactionTarget = _this$props.interactionTarget;\n      var sectionClassName = classNames('bcs-section', {\n        'bcs-section-open': isOpen\n      }, className);\n      return React.createElement(\"div\", {\n        className: sectionClassName\n      }, title && React.createElement(PlainButton, {\n        className: \"bcs-section-title\",\n        \"data-resin-target\": interactionTarget,\n        onClick: this.toggleVisibility,\n        type: \"button\"\n      }, title, React.createElement(IconCaretDown, {\n        color: COLOR_999,\n        width: 8\n      })), (isOpen || !title) && React.createElement(\"div\", {\n        className: \"bcs-section-content\"\n      }, children));\n    }\n  }]);\n  return SidebarSection;\n}(React.PureComponent);\n_defineProperty(SidebarSection, \"defaultProps\", {\n  className: '',\n  isOpen: true\n});\nexport default SidebarSection;","map":{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarSection.js"],"names":["React","classNames","PlainButton","IconCaretDown","COLOR_999","SidebarSection","PureComponent","className","isOpen","props","state","setState","prevState","children","title","interactionTarget","sectionClassName","toggleVisibility"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAO,uBAAP;IAcMC,c;;;;EAUF;;;;;;EAMA,SAAA,cAAA,CAAYI,KAAZ,EAA0B;IAAA,IAAA,KAAA;IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,CAAA;IACtB,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,cAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAN,CAAA,CAAA;IADsB,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,kBAAA,EAcP,YAAM;MACrB,KAAA,CAAKE,QAAL,CAAc,UAAA,SAAS,EAAA;QAAA,OAAK;UACxBH,MAAM,EAAE,CAACI,SAAS,CAACJ;QADK,CAAL;MAAA,CAAvB,CAAA;IAGH,CAlByB,CAAA;IAEtB,KAAA,CAAKE,KAAL,GAAa;MACTF,MAAM,EAAEC,KAAK,CAACD;IADL,CAAb;IAFsB,OAAA,KAAA;EAKzB;EAED;;;;;;;;;;IAaA;;;;;;;6BAOS;MAAA,IACGA,MADH,GACqB,IAAA,CAAKE,KAD1B,CACGF,MADH;MAAA,IAAA,WAAA,GAE4D,IAAA,CAAKC,KAFjE;QAEGI,QAFH,GAAA,WAAA,CAEGA,QAFH;QAEaN,SAFb,GAAA,WAAA,CAEaA,SAFb;QAEwBO,KAFxB,GAAA,WAAA,CAEwBA,KAFxB;QAE+BC,iBAF/B,GAAA,WAAA,CAE+BA,iBAF/B;MAIL,IAAMC,gBAAgB,GAAGf,UAAU,CAC/B,aAD+B,EAE/B;QACI,kBAAA,EAAoBO;MADxB,CAF+B,EAK/BD,SAL+B,CAAnC;MAQA,OACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;QAAK,SAAS,EAAES;MAAhB,CAAA,EACKF,KAAK,IACF,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA;QACI,SAAS,EAAC,mBADd;QAEI,mBAAA,EAAmBC,iBAFvB;QAGI,OAAO,EAAE,IAAA,CAAKE,gBAHlB;QAII,IAAI,EAAC;MAJT,CAAA,EAMKH,KANL,EAOI,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA;QAAe,KAAK,EAAEV,SAAtB;QAAiC,KAAK,EAAE;MAAxC,CAAA,CAPJ,CAFR,EAYK,CAACI,MAAM,IAAI,CAACM,KAAZ,KAAsB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;QAAK,SAAS,EAAC;MAAf,CAAA,EAAsCD,QAAtC,CAZ3B,CADJ;IAgBH;;;EAvEwBb,KAAK,CAACM,a;gBAA7BD,c,kBAKoB;EAClBE,SAAS,EAAE,EADO;EAElBC,MAAM,EAAE;AAFU,C;AAqE1B,eAAeH,cAAf","sourcesContent":["// @deprecated, use Collapsible\n\n/**\n * @flow\n * @file Preview sidebar section component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport IconCaretDown from '../../icons/general/IconCaretDown';\nimport { COLOR_999 } from '../../constants';\nimport './SidebarSection.scss';\n\ntype Props = {\n    children?: any,\n    className: string,\n    interactionTarget?: string,\n    isOpen: boolean,\n    title?: string | React.Node,\n};\n\ntype State = {\n    isOpen: boolean,\n};\n\nclass SidebarSection extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State;\n\n    static defaultProps = {\n        className: '',\n        isOpen: true,\n    };\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {ContentPreview}\n     */\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isOpen: props.isOpen,\n        };\n    }\n\n    /**\n     * Click handler for toggling the section\n     *\n     * @private\n     * @param {Event} event - click event\n     * @return {void}\n     */\n    toggleVisibility = () => {\n        this.setState(prevState => ({\n            isOpen: !prevState.isOpen,\n        }));\n    };\n\n    /**\n     * Renders the section\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    render() {\n        const { isOpen }: State = this.state;\n        const { children, className, title, interactionTarget }: Props = this.props;\n\n        const sectionClassName = classNames(\n            'bcs-section',\n            {\n                'bcs-section-open': isOpen,\n            },\n            className,\n        );\n\n        return (\n            <div className={sectionClassName}>\n                {title && (\n                    <PlainButton\n                        className=\"bcs-section-title\"\n                        data-resin-target={interactionTarget}\n                        onClick={this.toggleVisibility}\n                        type=\"button\"\n                    >\n                        {title}\n                        <IconCaretDown color={COLOR_999} width={8} />\n                    </PlainButton>\n                )}\n                {(isOpen || !title) && <div className=\"bcs-section-content\">{children}</div>}\n            </div>\n        );\n    }\n}\n\nexport default SidebarSection;\n"]},"metadata":{},"sourceType":"module"}