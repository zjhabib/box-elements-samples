{"ast":null,"code":"/**\n * NOTE: we don't use the NPM package directly because it has an unnecessary dependency on es6-promise + its commonjs format.\n * Returns the first promise in `promises` to successfully resolve.\n * If all fail, reject.\n * @see {@link https://github.com/jarofghosts/promise-one}\n */\nfunction promiseOne(promises) {\n  var errors = [];\n  var errorCount = 0;\n  var error;\n  return new Promise(function (resolve, reject) {\n    var pushErrors = function pushErrors(idx) {\n      return function (err) {\n        errors[idx] = err;\n        errorCount += 1;\n        if (errorCount === promises.length) {\n          error = new Error('no promises resolved');\n          reject(error);\n        }\n      };\n    };\n    promises.forEach(function (promise, idx) {\n      promise.then(resolve).catch(pushErrors(idx));\n    });\n  });\n}\nexport default promiseOne;","map":{"version":3,"sources":["../../../src/api/box-edit/promise.js"],"names":["promiseOne","promises","errors","errorCount","error","Promise","resolve","reject","pushErrors","idx","err","length","Error","forEach","promise","then","catch"],"mappings":"AACA;;;;;;AAMA,SAASA,UAAT,CAAoBC,QAApB,EAAiE;EAC7D,IAAMC,MAAM,GAAG,EAAf;EACA,IAAIC,UAAU,GAAG,CAAjB;EACA,IAAIC,KAAJ;EAEA,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;IACpC,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,GAAG,EAAA;MAAA,OAAI,UAAA,GAAG,EAAI;QAC7BN,MAAM,CAACO,GAAD,CAANP,GAAcQ,GAAdR;QACAC,UAAU,IAAI,CAAdA;QAEA,IAAIA,UAAU,KAAKF,QAAQ,CAACU,MAA5B,EAAoC;UAChCP,KAAK,GAAG,IAAIQ,KAAJ,CAAU,sBAAV,CAARR;UAEAG,MAAM,CAACH,KAAD,CAANG;QACH;MACJ,CATqB;IAAA,CAAtB;IAWAN,QAAQ,CAACY,OAATZ,CAAiB,UAACa,OAAD,EAAUL,GAAV,EAAkB;MAC/BK,OAAO,CAACC,IAARD,CAAaR,OAAbQ,CAAAA,CAAsBE,KAAtBF,CAA4BN,UAAU,CAACC,GAAD,CAAtCK,CAAAA;IACH,CAFDb,CAAAA;EAGH,CAfM,CAAP;AAgBH;AAED,eAAeD,UAAf","sourcesContent":["// @flow\n/**\n * NOTE: we don't use the NPM package directly because it has an unnecessary dependency on es6-promise + its commonjs format.\n * Returns the first promise in `promises` to successfully resolve.\n * If all fail, reject.\n * @see {@link https://github.com/jarofghosts/promise-one}\n */\nfunction promiseOne(promises: Array<Promise<any>>): Promise<any> {\n    const errors = [];\n    let errorCount = 0;\n    let error;\n\n    return new Promise((resolve, reject) => {\n        const pushErrors = idx => err => {\n            errors[idx] = err;\n            errorCount += 1;\n\n            if (errorCount === promises.length) {\n                error = new Error('no promises resolved');\n\n                reject(error);\n            }\n        };\n\n        promises.forEach((promise, idx) => {\n            promise.then(resolve).catch(pushErrors(idx));\n        });\n    });\n}\n\nexport default promiseOne;\n"]},"metadata":{},"sourceType":"module"}