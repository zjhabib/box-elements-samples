{"ast":null,"code":"/**\n * \n * @file Allows react to render a component in an arbitrary DOM node, in this case in a new window.\n * @author Box\n */\nimport { createPortal } from 'react-dom';\n\n/**\n * Copies stylesheets to the new window.\n *\n * @private\n * @param {HTMLDocument} documentElement - an HTML document\n * @param {Window} integrationWindow - a browser window\n * @return {void}\n */\nexport function copyStyles(documentElement, integrationWindow) {\n  // The new window will have no CSS, so we copy all style sheets as a safe way\n  // of ensuring required styles are present\n  Array.from(documentElement.styleSheets).forEach(function (styleSheet) {\n    if (!styleSheet.href) {\n      return;\n    }\n    var copiedStyleSheet = integrationWindow.document.createElement('link');\n    copiedStyleSheet.rel = 'stylesheet';\n    copiedStyleSheet.href = styleSheet.href;\n    integrationWindow.document.head.appendChild(copiedStyleSheet);\n  }); // Reset margin and padding in our new window\n\n  integrationWindow.document.body.style.margin = 0;\n  integrationWindow.document.body.style.padding = 0;\n}\nvar IntegrationPortal = function IntegrationPortal(_ref) {\n  var integrationWindow = _ref.integrationWindow,\n    children = _ref.children;\n  var containerElement = integrationWindow.document.createElement('div');\n  copyStyles(document, integrationWindow);\n  integrationWindow.document.body.appendChild(containerElement);\n  return createPortal(children, containerElement);\n};\nexport default IntegrationPortal;","map":{"version":3,"sources":["../../../src/elements/content-open-with/IntegrationPortal.js"],"names":["createPortal","copyStyles","documentElement","integrationWindow","Array","from","styleSheets","forEach","styleSheet","href","copiedStyleSheet","document","createElement","rel","head","appendChild","body","style","margin","padding","IntegrationPortal","children","containerElement"],"mappings":"AAAA;;;;;AAMA,SAASA,YAAT,QAA6B,WAA7B;;AAOA;;;;;;;;AAQA,OAAO,SAASC,UAAT,CAAoBC,eAApB,EAA+CC,iBAA/C,EAAuE;EAC1E;EACA;EACAC,KAAK,CAACC,IAAND,CAAWF,eAAe,CAACI,WAA3BF,CAAAA,CAAwCG,OAAxCH,CAAgD,UAAA,UAAU,EAAI;IAC1D,IAAI,CAACI,UAAU,CAACC,IAAhB,EAAsB;MAClB;IACH;IAED,IAAMC,gBAAgB,GAAGP,iBAAiB,CAACQ,QAAlBR,CAA2BS,aAA3BT,CAAyC,MAAzCA,CAAzB;IACAO,gBAAgB,CAACG,GAAjBH,GAAuB,YAAvBA;IACAA,gBAAgB,CAACD,IAAjBC,GAAwBF,UAAU,CAACC,IAAnCC;IACAP,iBAAiB,CAACQ,QAAlBR,CAA2BW,IAA3BX,CAAgCY,WAAhCZ,CAA4CO,gBAA5CP,CAAAA;EACH,CATDC,CAAAA,CAH0E,CAc1E;;EACAD,iBAAiB,CAACQ,QAAlBR,CAA2Ba,IAA3Bb,CAAgCc,KAAhCd,CAAsCe,MAAtCf,GAA+C,CAA/CA;EACAA,iBAAiB,CAACQ,QAAlBR,CAA2Ba,IAA3Bb,CAAgCc,KAAhCd,CAAsCgB,OAAtChB,GAAgD,CAAhDA;AACH;AAED,IAAMiB,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,IAAA,EAA4C;EAAA,IAAzCjB,iBAAyC,GAAA,IAAA,CAAzCA,iBAAyC;IAAtBkB,QAAsB,GAAA,IAAA,CAAtBA,QAAsB;EAClE,IAAMC,gBAAgB,GAAGnB,iBAAiB,CAACQ,QAAlBR,CAA2BS,aAA3BT,CAAyC,KAAzCA,CAAzB;EACAF,UAAU,CAACU,QAAD,EAAWR,iBAAX,CAAVF;EACAE,iBAAiB,CAACQ,QAAlBR,CAA2Ba,IAA3Bb,CAAgCY,WAAhCZ,CAA4CmB,gBAA5CnB,CAAAA;EACA,OAAOH,YAAY,CAACqB,QAAD,EAAWC,gBAAX,CAAnB;AACH,CALD;AAOA,eAAeF,iBAAf","sourcesContent":["/**\n * @flow\n * @file Allows react to render a component in an arbitrary DOM node, in this case in a new window.\n * @author Box\n */\n\nimport { createPortal } from 'react-dom';\n\ntype Props = {\n    children: any,\n    integrationWindow: any,\n};\n\n/**\n * Copies stylesheets to the new window.\n *\n * @private\n * @param {HTMLDocument} documentElement - an HTML document\n * @param {Window} integrationWindow - a browser window\n * @return {void}\n */\nexport function copyStyles(documentElement: Document, integrationWindow: any) {\n    // The new window will have no CSS, so we copy all style sheets as a safe way\n    // of ensuring required styles are present\n    Array.from(documentElement.styleSheets).forEach(styleSheet => {\n        if (!styleSheet.href) {\n            return;\n        }\n\n        const copiedStyleSheet = integrationWindow.document.createElement('link');\n        copiedStyleSheet.rel = 'stylesheet';\n        copiedStyleSheet.href = styleSheet.href;\n        integrationWindow.document.head.appendChild(copiedStyleSheet);\n    });\n\n    // Reset margin and padding in our new window\n    integrationWindow.document.body.style.margin = 0;\n    integrationWindow.document.body.style.padding = 0;\n}\n\nconst IntegrationPortal = ({ integrationWindow, children }: Props) => {\n    const containerElement = integrationWindow.document.createElement('div');\n    copyStyles(document, integrationWindow);\n    integrationWindow.document.body.appendChild(containerElement);\n    return createPortal(children, containerElement);\n};\n\nexport default IntegrationPortal;\n"]},"metadata":{},"sourceType":"module"}