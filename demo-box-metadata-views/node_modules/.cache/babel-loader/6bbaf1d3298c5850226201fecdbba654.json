{"ast":null,"code":"/**\n * \n * @file Function to render the icon table cell\n * @author Box\n */\nimport React from 'react';\nimport FileIcon from '../../../icons/file-icon/FileIcon';\nimport FolderIcon from '../../../icons/folder-icon/FolderIcon';\nimport BookmarkIcon from '../../../icons/bookmark-icon/BookmarkIcon';\nimport { TYPE_FOLDER, TYPE_FILE, TYPE_WEBLINK } from '../../../constants';\nimport './IconCell.scss';\nexport function getIcon(dimension, rowData) {\n  var type = rowData.type,\n    extension = rowData.extension,\n    has_collaborations = rowData.has_collaborations,\n    is_externally_owned = rowData.is_externally_owned;\n  switch (type) {\n    case TYPE_FOLDER:\n      return React.createElement(FolderIcon, {\n        dimension: dimension,\n        isCollab: has_collaborations,\n        isExternal: is_externally_owned\n      });\n    case TYPE_FILE:\n      return React.createElement(FileIcon, {\n        dimension: dimension,\n        extension: extension\n      });\n    case TYPE_WEBLINK:\n      return React.createElement(BookmarkIcon, {\n        height: dimension,\n        width: dimension\n      });\n    default:\n      throw new Error('Unsupported item type!');\n  }\n}\nexport default (function () {\n  var dimension = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n  return function (_ref) {\n    var rowData = _ref.rowData;\n    return React.createElement(\"div\", {\n      className: \"be-item-icon\"\n    }, getIcon(dimension, rowData));\n  };\n});","map":{"version":3,"sources":["../../../../src/elements/common/item/iconCellRenderer.js"],"names":["React","FileIcon","FolderIcon","BookmarkIcon","TYPE_FOLDER","TYPE_FILE","TYPE_WEBLINK","getIcon","dimension","rowData","type","extension","has_collaborations","is_externally_owned","Error"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,YAAjC,QAAqD,oBAArD;AAGA,OAAO,iBAAP;AAEA,OAAO,SAASC,OAAT,CAAiBC,SAAjB,EAAoCC,OAApC,EAAsD;EAAA,IACjDC,IADiD,GACqBD,OADrB,CACjDC,IADiD;IAC3CC,SAD2C,GACqBF,OADrB,CAC3CE,SAD2C;IAChCC,kBADgC,GACqBH,OADrB,CAChCG,kBADgC;IACZC,mBADY,GACqBJ,OADrB,CACZI,mBADY;EAEzD,QAAQH,IAAR;IACI,KAAKN,WAAL;MACI,OAAO,KAAA,CAAA,aAAA,CAAC,UAAD,EAAA;QAAY,SAAS,EAAEI,SAAvB;QAAkC,QAAQ,EAAEI,kBAA5C;QAAgE,UAAU,EAAEC;MAA5E,CAAA,CAAP;IACJ,KAAKR,SAAL;MACI,OAAO,KAAA,CAAA,aAAA,CAAC,QAAD,EAAA;QAAU,SAAS,EAAEG,SAArB;QAAgC,SAAS,EAAEG;MAA3C,CAAA,CAAP;IACJ,KAAKL,YAAL;MACI,OAAO,KAAA,CAAA,aAAA,CAAC,YAAD,EAAA;QAAc,MAAM,EAAEE,SAAtB;QAAiC,KAAK,EAAEA;MAAxC,CAAA,CAAP;IACJ;MACI,MAAM,IAAIM,KAAJ,CAAU,wBAAV,CAAN;EARR;AAUH;AAED,gBAAe,YAAA;EAAA,IAACN,SAAD,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAqB,EAArB;EAAA,OAAsC,UAAA,IAAA,EAAA;IAAA,IAAGC,OAAH,GAAA,IAAA,CAAGA,OAAH;IAAA,OACjD,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAC;IAAf,CAAA,EAA+BF,OAAO,CAACC,SAAD,EAAYC,OAAZ,CAAtC,CADiD;EAAA,CAAtC;AAAA,CAAf","sourcesContent":["/**\n * @flow\n * @file Function to render the icon table cell\n * @author Box\n */\n\nimport React from 'react';\nimport FileIcon from '../../../icons/file-icon/FileIcon';\nimport FolderIcon from '../../../icons/folder-icon/FolderIcon';\nimport BookmarkIcon from '../../../icons/bookmark-icon/BookmarkIcon';\nimport { TYPE_FOLDER, TYPE_FILE, TYPE_WEBLINK } from '../../../constants';\nimport type { BoxItem } from '../../../common/types/core';\n\nimport './IconCell.scss';\n\nexport function getIcon(dimension: number, rowData: BoxItem) {\n    const { type, extension, has_collaborations, is_externally_owned }: BoxItem = rowData;\n    switch (type) {\n        case TYPE_FOLDER:\n            return <FolderIcon dimension={dimension} isCollab={has_collaborations} isExternal={is_externally_owned} />;\n        case TYPE_FILE:\n            return <FileIcon dimension={dimension} extension={extension} />;\n        case TYPE_WEBLINK:\n            return <BookmarkIcon height={dimension} width={dimension} />;\n        default:\n            throw new Error('Unsupported item type!');\n    }\n}\n\nexport default (dimension: number = 32): Function => ({ rowData }: { rowData: BoxItem }) => (\n    <div className=\"be-item-icon\">{getIcon(dimension, rowData)}</div>\n);\n"]},"metadata":{},"sourceType":"module"}