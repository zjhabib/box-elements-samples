{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport classNames from 'classnames';\nvar InlineNotice = function InlineNotice(_ref) {\n  var children = _ref.children,\n    _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    title = _ref.title,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'warning' : _ref$type,\n    rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"title\", \"type\"]);\n  return React.createElement(\"div\", _extends({\n    className: classNames(className, 'inline-alert', 'inline-alert-visible', \"inline-alert-\".concat(type))\n  }, rest), title ? React.createElement(\"strong\", null, title) : null, React.createElement(\"div\", null, children));\n};\nexport default InlineNotice;","map":{"version":3,"sources":["../../../src/components/inline-notice/InlineNotice.js"],"names":["React","classNames","InlineNotice","children","className","title","type","rest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAWA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAAA;EAAA,IAAGC,QAAH,GAAA,IAAA,CAAGA,QAAH;IAAA,cAAA,GAAA,IAAA,CAAaC,SAAb;IAAaA,SAAb,GAAA,cAAA,KAAA,KAAA,CAAA,GAAyB,EAAzB,GAAA,cAAA;IAA6BC,KAA7B,GAAA,IAAA,CAA6BA,KAA7B;IAAA,SAAA,GAAA,IAAA,CAAoCC,IAApC;IAAoCA,IAApC,GAAA,SAAA,KAAA,KAAA,CAAA,GAA2C,SAA3C,GAAA,SAAA;IAAyDC,IAAzD,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,OAAA,EAAA,MAAA,CAAA,CAAA;EAAA,OACjB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;IAAK,SAAS,EAAEN,UAAU,CAACG,SAAD,EAAY,cAAZ,EAA4B,sBAA5B,EAAA,eAAA,CAAA,MAAA,CAAoEE,IAApE,CAAA;EAA1B,CAAA,EAA2GC,IAA3G,CAAA,EACKF,KAAK,GAAG,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAA,EAASA,KAAT,CAAH,GAA8B,IADxC,EAEI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAMF,QAAN,CAFJ,CADiB;AAAA,CAArB;AAOA,eAAeD,YAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport type { InlineNoticeType } from '../../common/types/core';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    title?: React.Node,\n    type?: InlineNoticeType,\n};\n\nconst InlineNotice = ({ children, className = '', title, type = 'warning', ...rest }: Props) => (\n    <div className={classNames(className, 'inline-alert', 'inline-alert-visible', `inline-alert-${type}`)} {...rest}>\n        {title ? <strong>{title}</strong> : null}\n        <div>{children}</div>\n    </div>\n);\n\nexport default InlineNotice;\n"]},"metadata":{},"sourceType":"module"}