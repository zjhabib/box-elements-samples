{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\n/**\n * \n * @file withErrorHandling higher order component\n * @author Box\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorMask from '../../components/error-mask/ErrorMask';\nimport InlineError from '../../components/inline-error/InlineError';\nimport SidebarSection from './SidebarSection';\nvar withErrorHandling = function withErrorHandling(WrappedComponent) {\n  return function (_ref) {\n    var maskError = _ref.maskError,\n      inlineError = _ref.inlineError,\n      errorCode = _ref.errorCode,\n      rest = _objectWithoutProperties(_ref, [\"maskError\", \"inlineError\", \"errorCode\"]);\n    if (maskError) {\n      return React.createElement(SidebarSection, null, React.createElement(ErrorMask, {\n        errorHeader: React.createElement(FormattedMessage, maskError.errorHeader),\n        errorSubHeader: maskError.errorSubHeader ? React.createElement(FormattedMessage, maskError.errorSubHeader) : undefined\n      }));\n    }\n    if (inlineError) {\n      return React.createElement(React.Fragment, null, React.createElement(InlineError, {\n        title: React.createElement(FormattedMessage, inlineError.title)\n      }, React.createElement(FormattedMessage, inlineError.content)), React.createElement(WrappedComponent, rest));\n    }\n    return React.createElement(WrappedComponent, rest);\n  };\n};\nexport default withErrorHandling;","map":{"version":3,"sources":["../../../src/elements/content-sidebar/withErrorHandling.js"],"names":["React","FormattedMessage","ErrorMask","InlineError","SidebarSection","withErrorHandling","WrappedComponent","maskError","inlineError","errorCode","rest","errorHeader","errorSubHeader","undefined","title","content"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AAQA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,gBAAD,EAAA;EAAA,OAAgD,UAAA,IAAA,EAK7D;IAAA,IAJTC,SAIS,GAAA,IAAA,CAJTA,SAIS;MAHTC,WAGS,GAAA,IAAA,CAHTA,WAGS;MAFTC,SAES,GAAA,IAAA,CAFTA,SAES;MADNC,IACM,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,aAAA,EAAA,WAAA,CAAA,CAAA;IACT,IAAIH,SAAJ,EAAe;MACX,OACI,KAAA,CAAA,aAAA,CAAC,cAAD,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA;QACI,WAAW,EAAE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBA,SAAS,CAACI,WAAhC,CADjB;QAEI,cAAc,EACVJ,SAAS,CAACK,cAAVL,GAA2B,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBA,SAAS,CAACK,cAAhC,CAA3BL,GAAgFM;MAHxF,CAAA,CADJ,CADJ;IAUH;IACD,IAAIL,WAAJ,EAAiB;MACb,OACI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA;QAAa,KAAK,EAAE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBA,WAAW,CAACM,KAAlC;MAApB,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBN,WAAW,CAACO,OAAlC,CADJ,CADJ,EAII,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBL,IAAtB,CAJJ,CADJ;IAQH;IAED,OAAO,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBA,IAAtB,CAAP;EACH,CA9ByB;AAAA,CAA1B;AAgCA,eAAeL,iBAAf","sourcesContent":["/**\n * @flow\n * @file withErrorHandling higher order component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorMask from '../../components/error-mask/ErrorMask';\nimport InlineError from '../../components/inline-error/InlineError';\n\nimport SidebarSection from './SidebarSection';\n\nimport type { Errors } from './flowTypes';\n\ntype Props = {\n    errorCode?: string,\n} & Errors;\n\nconst withErrorHandling = (WrappedComponent: React.ComponentType<any>) => ({\n    maskError,\n    inlineError,\n    errorCode,\n    ...rest\n}: Props) => {\n    if (maskError) {\n        return (\n            <SidebarSection>\n                <ErrorMask\n                    errorHeader={<FormattedMessage {...maskError.errorHeader} />}\n                    errorSubHeader={\n                        maskError.errorSubHeader ? <FormattedMessage {...maskError.errorSubHeader} /> : undefined\n                    }\n                />\n            </SidebarSection>\n        );\n    }\n    if (inlineError) {\n        return (\n            <>\n                <InlineError title={<FormattedMessage {...inlineError.title} />}>\n                    <FormattedMessage {...inlineError.content} />\n                </InlineError>\n                <WrappedComponent {...rest} />\n            </>\n        );\n    }\n\n    return <WrappedComponent {...rest} />;\n};\n\nexport default withErrorHandling;\n"]},"metadata":{},"sourceType":"module"}