{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport AccessStatsItemsList from './AccessStatsItemsList';\nimport messages from './messages';\nimport './AccessStats.scss';\nvar AccessStats = function AccessStats(_ref) {\n  var _ref$commentCount = _ref.commentCount,\n    commentCount = _ref$commentCount === void 0 ? 0 : _ref$commentCount,\n    _ref$commentStatButto = _ref.commentStatButtonProps,\n    commentStatButtonProps = _ref$commentStatButto === void 0 ? {} : _ref$commentStatButto,\n    _ref$downloadCount = _ref.downloadCount,\n    downloadCount = _ref$downloadCount === void 0 ? 0 : _ref$downloadCount,\n    _ref$downloadStatButt = _ref.downloadStatButtonProps,\n    downloadStatButtonProps = _ref$downloadStatButt === void 0 ? {} : _ref$downloadStatButt,\n    _ref$editCount = _ref.editCount,\n    editCount = _ref$editCount === void 0 ? 0 : _ref$editCount,\n    _ref$editStatButtonPr = _ref.editStatButtonProps,\n    editStatButtonProps = _ref$editStatButtonPr === void 0 ? {} : _ref$editStatButtonPr,\n    errorMessage = _ref.errorMessage,\n    _ref$hasCountOverflow = _ref.hasCountOverflowed,\n    hasCountOverflowed = _ref$hasCountOverflow === void 0 ? false : _ref$hasCountOverflow,\n    _ref$isBoxNote = _ref.isBoxNote,\n    isBoxNote = _ref$isBoxNote === void 0 ? false : _ref$isBoxNote,\n    openAccessStatsModal = _ref.openAccessStatsModal,\n    _ref$previewCount = _ref.previewCount,\n    previewCount = _ref$previewCount === void 0 ? 0 : _ref$previewCount,\n    _ref$previewStatButto = _ref.previewStatButtonProps,\n    previewStatButtonProps = _ref$previewStatButto === void 0 ? {} : _ref$previewStatButto,\n    _ref$viewMoreButtonPr = _ref.viewMoreButtonProps,\n    viewMoreButtonProps = _ref$viewMoreButtonPr === void 0 ? {} : _ref$viewMoreButtonPr,\n    _ref$viewStatButtonPr = _ref.viewStatButtonProps,\n    viewStatButtonProps = _ref$viewStatButtonPr === void 0 ? {} : _ref$viewStatButtonPr;\n  return React.createElement(\"div\", {\n    className: \"access-stats\"\n  }, errorMessage ? React.createElement(\"p\", null, errorMessage) : React.createElement(React.Fragment, null, React.createElement(AccessStatsItemsList, {\n    commentCount: commentCount,\n    commentStatButtonProps: commentStatButtonProps,\n    downloadCount: downloadCount,\n    downloadStatButtonProps: downloadStatButtonProps,\n    editCount: editCount,\n    editStatButtonProps: editStatButtonProps,\n    hasCountOverflowed: hasCountOverflowed,\n    isBoxNote: isBoxNote,\n    openAccessStatsModal: openAccessStatsModal,\n    previewCount: previewCount,\n    previewStatButtonProps: previewStatButtonProps,\n    viewStatButtonProps: viewStatButtonProps\n  }), openAccessStatsModal && React.createElement(PlainButton, _extends({\n    className: \"lnk access-stats-view-details\",\n    onClick: openAccessStatsModal\n  }, viewMoreButtonProps), React.createElement(FormattedMessage, messages.accessStatsViewDetails))));\n};\nexport default AccessStats;","map":{"version":3,"sources":["../../../src/features/access-stats/AccessStats.js"],"names":["React","FormattedMessage","PlainButton","AccessStatsItemsList","messages","AccessStats","commentCount","commentStatButtonProps","downloadCount","downloadStatButtonProps","editCount","editStatButtonProps","errorMessage","hasCountOverflowed","isBoxNote","openAccessStatsModal","previewCount","previewStatButtonProps","viewMoreButtonProps","viewStatButtonProps","accessStatsViewDetails"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport AccessStatsItemsList from './AccessStatsItemsList';\n\nimport messages from './messages';\n\nimport './AccessStats.scss';\n\ntype AccessStatsType = {\n    commentCount?: number,\n    /**\n     * Props for comment stat PlainButton\n     */\n    commentStatButtonProps?: Object,\n    downloadCount?: number,\n    /**\n     * Props for download stat PlainButton\n     */\n    downloadStatButtonProps?: Object,\n    editCount?: number,\n    /**\n     * Props for edit stat PlainButton\n     */\n    editStatButtonProps?: Object,\n    errorMessage?: string,\n    hasCountOverflowed?: boolean,\n    isBoxNote?: boolean,\n    /**\n     * A function that opens the access stats modal\n     */\n    openAccessStatsModal?: Function,\n    previewCount?: number,\n    /**\n     * Props for preview stat PlainButton\n     */\n    previewStatButtonProps?: Object,\n    /**\n     * Props for View More PlainButton\n     */\n    viewMoreButtonProps?: Object,\n    /**\n     * Props for view stat PlainButton\n     */\n    viewStatButtonProps?: Object,\n};\n\nconst AccessStats = ({\n    commentCount = 0,\n    commentStatButtonProps = {},\n    downloadCount = 0,\n    downloadStatButtonProps = {},\n    editCount = 0,\n    editStatButtonProps = {},\n    errorMessage,\n    hasCountOverflowed = false,\n    isBoxNote = false,\n    openAccessStatsModal,\n    previewCount = 0,\n    previewStatButtonProps = {},\n    viewMoreButtonProps = {},\n    viewStatButtonProps = {},\n}: AccessStatsType) => (\n    <div className=\"access-stats\">\n        {errorMessage ? (\n            <p>{errorMessage}</p>\n        ) : (\n            <>\n                <AccessStatsItemsList\n                    commentCount={commentCount}\n                    commentStatButtonProps={commentStatButtonProps}\n                    downloadCount={downloadCount}\n                    downloadStatButtonProps={downloadStatButtonProps}\n                    editCount={editCount}\n                    editStatButtonProps={editStatButtonProps}\n                    hasCountOverflowed={hasCountOverflowed}\n                    isBoxNote={isBoxNote}\n                    openAccessStatsModal={openAccessStatsModal}\n                    previewCount={previewCount}\n                    previewStatButtonProps={previewStatButtonProps}\n                    viewStatButtonProps={viewStatButtonProps}\n                />\n                {openAccessStatsModal && (\n                    <PlainButton\n                        className=\"lnk access-stats-view-details\"\n                        onClick={openAccessStatsModal}\n                        {...viewMoreButtonProps}\n                    >\n                        <FormattedMessage {...messages.accessStatsViewDetails} />\n                    </PlainButton>\n                )}\n            </>\n        )}\n    </div>\n);\n\nexport default AccessStats;\n"]},"metadata":{},"sourceType":"module"}