{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zhabib/Documents/GitHub/box-elements-samples/demo-box-metadata-views/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\n/**\n * \n * @file Helper for the box web link api\n * @author Box\n */\nimport Item from './Item';\nimport { CACHE_PREFIX_WEBLINK, ERROR_CODE_FETCH_WEBLINK } from '../constants';\nimport { findMissingProperties } from '../utils/fields';\nvar WebLink = /*#__PURE__*/\nfunction (_Item) {\n  _inherits(WebLink, _Item);\n  function WebLink() {\n    _classCallCheck(this, WebLink);\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebLink).apply(this, arguments));\n  }\n  _createClass(WebLink, [{\n    key: \"getCacheKey\",\n    /**\n     * Creates a key for the cache\n     *\n     * @param {string} id folder id\n     * @return {string} key\n     */\n    value: function getCacheKey(id) {\n      return \"\".concat(CACHE_PREFIX_WEBLINK).concat(id);\n    }\n    /**\n     * URL for weblink api\n     *\n     * @param {string} [id] optional file id\n     * @return {string} base url for files\n     */\n  }, {\n    key: \"getUrl\",\n    value: function getUrl(id) {\n      var suffix = id ? \"/\".concat(id) : '';\n      return \"\".concat(this.getBaseApiUrl(), \"/web_links\").concat(suffix);\n    }\n    /**\n     * Gets a Box weblink\n     *\n     * @param {string} id - Weblink id\n     * @param {(newItem: BoxItem) => void} successCallback - Function to call with results\n     * @param {Function} errorCallback - Function to call with errors\n     * @param {Array<String>} fields - Array of field strings\n     * @returns {Promise}\n     */\n  }, {\n    key: \"getWeblink\",\n    value: function () {\n      var _getWeblink = _asyncToGenerator( /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id, successCallback, errorCallback) {\n        var _ref,\n          fields,\n          cache,\n          key,\n          missingFields,\n          xhrOptions,\n          _ref2,\n          data,\n          _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _ref = _args.length > 3 && _args[3] !== undefined ? _args[3] : {}, fields = _ref.fields;\n                if (!this.isDestroyed()) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                cache = this.getCache();\n                key = this.getCacheKey(id);\n                this.errorCode = ERROR_CODE_FETCH_WEBLINK;\n                this.successCallback = successCallback;\n                this.errorCallback = errorCallback;\n                if (!cache.has(key)) {\n                  _context.next = 13;\n                  break;\n                }\n                missingFields = findMissingProperties(cache.get(key), fields);\n                if (!(missingFields.length === 0)) {\n                  _context.next = 13;\n                  break;\n                }\n                successCallback(cache.get(key));\n                return _context.abrupt(\"return\");\n              case 13:\n                xhrOptions = {\n                  url: this.getUrl(id)\n                };\n                if (fields) {\n                  xhrOptions.params = {\n                    fields: fields.toString()\n                  };\n                }\n                _context.prev = 15;\n                _context.next = 18;\n                return this.xhr.get(xhrOptions);\n              case 18:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                if (!this.isDestroyed()) {\n                  _context.next = 22;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 22:\n                // Cache check is again done since this code is executed async\n                if (cache.has(key)) {\n                  cache.merge(key, data);\n                } else {\n                  // If there was nothing in the cache\n                  cache.set(key, data);\n                }\n                this.successHandler(cache.get(key));\n                _context.next = 29;\n                break;\n              case 26:\n                _context.prev = 26;\n                _context.t0 = _context[\"catch\"](15);\n                this.errorHandler(_context.t0);\n              case 29:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[15, 26]]);\n      }));\n      function getWeblink(_x, _x2, _x3) {\n        return _getWeblink.apply(this, arguments);\n      }\n      return getWeblink;\n    }()\n  }]);\n  return WebLink;\n}(Item);\nexport default WebLink;","map":{"version":3,"sources":["../../src/api/WebLink.js"],"names":["Item","CACHE_PREFIX_WEBLINK","ERROR_CODE_FETCH_WEBLINK","findMissingProperties","WebLink","id","suffix","getBaseApiUrl","successCallback","errorCallback","fields","isDestroyed","cache","getCache","key","getCacheKey","errorCode","has","missingFields","get","length","xhrOptions","url","getUrl","params","toString","data","xhr","merge","set","successHandler","errorHandler"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,oBAAT,EAA+BC,wBAA/B,QAA+D,cAA/D;AACA,SAASC,qBAAT,QAAsC,iBAAtC;IAKMC,O;;;;;;;;;IACF;;;;;;gCAMYC,E,EAAoB;MAC5B,OAAA,EAAA,CAAA,MAAA,CAAUJ,oBAAV,CAAA,CAAA,MAAA,CAAiCI,EAAjC,CAAA;IACH;IAED;;;;;;;;2BAMOA,E,EAAoB;MACvB,IAAMC,MAAc,GAAGD,EAAE,GAAA,GAAA,CAAA,MAAA,CAAOA,EAAP,CAAA,GAAc,EAAvC;MACA,OAAA,EAAA,CAAA,MAAA,CAAU,IAAA,CAAKE,aAAL,CAAA,CAAV,EAAA,YAAA,CAAA,CAAA,MAAA,CAA2CD,MAA3C,CAAA;IACH;IAED;;;;;;;;;;;;;gDAUID,E,EACAG,e,EACAC,a;;;;;;;;;;;;;;+EAC6B,CAAA,C,EAA3BC,M,QAAAA,M;qBAEE,IAAA,CAAKC,WAAL,CAAA,C;;;;;;gBAIEC,K,GAAkB,IAAA,CAAKC,QAAL,CAAA,C;gBAClBC,G,GAAc,IAAA,CAAKC,WAAL,CAAiBV,EAAjB,C;gBACpB,IAAA,CAAKW,SAAL,GAAiBd,wBAAjB;gBACA,IAAA,CAAKM,eAAL,GAAuBA,eAAvB;gBACA,IAAA,CAAKC,aAAL,GAAqBA,aAArB;qBAEIG,KAAK,CAACK,GAANL,CAAUE,GAAVF,C;;;;gBACMM,a,GAA+Bf,qBAAqB,CAACS,KAAK,CAACO,GAANP,CAAUE,GAAVF,CAAD,EAAiBF,MAAjB,C;sBACtDQ,aAAa,CAACE,MAAdF,KAAyB,C;;;;gBACzBV,eAAe,CAACI,KAAK,CAACO,GAANP,CAAUE,GAAVF,CAAD,CAAfJ;;;gBAKFa,U,GAAqB;kBACvBC,GAAG,EAAE,IAAA,CAAKC,MAAL,CAAYlB,EAAZ;gBADkB,C;gBAI3B,IAAIK,MAAJ,EAAY;kBACRW,UAAU,CAACG,MAAXH,GAAoB;oBAChBX,MAAM,EAAEA,MAAM,CAACe,QAAPf,CAAAA;kBADQ,CAApBW;gBAGH;;;uBAG0B,IAAA,CAAKM,GAAL,CAASR,GAAT,CAAaE,UAAb,C;;;gBAAfK,I,SAAAA,I;qBAEJ,IAAA,CAAKf,WAAL,CAAA,C;;;;;;gBAIJ;gBACA,IAAIC,KAAK,CAACK,GAANL,CAAUE,GAAVF,CAAJ,EAAoB;kBAChBA,KAAK,CAACgB,KAANhB,CAAYE,GAAZF,EAAiBc,IAAjBd,CAAAA;gBACH,CAFD,MAEO;kBACH;kBACAA,KAAK,CAACiB,GAANjB,CAAUE,GAAVF,EAAec,IAAfd,CAAAA;gBACH;gBAED,IAAA,CAAKkB,cAAL,CAAoBlB,KAAK,CAACO,GAANP,CAAUE,GAAVF,CAApB,CAAA;;;;;;gBAEA,IAAA,CAAKmB,YAAL,CAAA,QAAA,CAAA,EAAA,CAAA;;;;;;;;;;;;;;;EAlFU/B,I;AAuFtB,eAAeI,OAAf","sourcesContent":["/**\n * @flow\n * @file Helper for the box web link api\n * @author Box\n */\n\nimport Item from './Item';\nimport { CACHE_PREFIX_WEBLINK, ERROR_CODE_FETCH_WEBLINK } from '../constants';\nimport { findMissingProperties } from '../utils/fields';\nimport type { RequestOptions } from '../common/types/api';\nimport type { BoxItem } from '../common/types/core';\nimport type APICache from '../utils/Cache';\n\nclass WebLink extends Item {\n    /**\n     * Creates a key for the cache\n     *\n     * @param {string} id folder id\n     * @return {string} key\n     */\n    getCacheKey(id: string): string {\n        return `${CACHE_PREFIX_WEBLINK}${id}`;\n    }\n\n    /**\n     * URL for weblink api\n     *\n     * @param {string} [id] optional file id\n     * @return {string} base url for files\n     */\n    getUrl(id: string): string {\n        const suffix: string = id ? `/${id}` : '';\n        return `${this.getBaseApiUrl()}/web_links${suffix}`;\n    }\n\n    /**\n     * Gets a Box weblink\n     *\n     * @param {string} id - Weblink id\n     * @param {(newItem: BoxItem) => void} successCallback - Function to call with results\n     * @param {Function} errorCallback - Function to call with errors\n     * @param {Array<String>} fields - Array of field strings\n     * @returns {Promise}\n     */\n    async getWeblink(\n        id: string,\n        successCallback: (newItem: BoxItem) => void,\n        errorCallback: Function,\n        { fields }: RequestOptions = {},\n    ): Promise<void> {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        const cache: APICache = this.getCache();\n        const key: string = this.getCacheKey(id);\n        this.errorCode = ERROR_CODE_FETCH_WEBLINK;\n        this.successCallback = successCallback;\n        this.errorCallback = errorCallback;\n\n        if (cache.has(key)) {\n            const missingFields: Array<string> = findMissingProperties(cache.get(key), fields);\n            if (missingFields.length === 0) {\n                successCallback(cache.get(key));\n                return;\n            }\n        }\n\n        const xhrOptions: Object = {\n            url: this.getUrl(id),\n        };\n\n        if (fields) {\n            xhrOptions.params = {\n                fields: fields.toString(),\n            };\n        }\n\n        try {\n            const { data } = await this.xhr.get(xhrOptions);\n\n            if (this.isDestroyed()) {\n                return;\n            }\n\n            // Cache check is again done since this code is executed async\n            if (cache.has(key)) {\n                cache.merge(key, data);\n            } else {\n                // If there was nothing in the cache\n                cache.set(key, data);\n            }\n\n            this.successHandler(cache.get(key));\n        } catch (e) {\n            this.errorHandler(e);\n        }\n    }\n}\n\nexport default WebLink;\n"]},"metadata":{},"sourceType":"module"}