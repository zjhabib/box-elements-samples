{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { Route } from 'react-router-dom'; // Basically a workaround for the fact that react-router's withRouter cannot forward ref's through\n// functional components. Use this instead to gain the benefits of withRouter but also ref forwarding\n\nexport default function withRouterAndRef(Wrapped) {\n  var WithRouterAndRef = React.forwardRef(function (props, ref) {\n    return React.createElement(Route, null, function (routeProps) {\n      return React.createElement(Wrapped, _extends({\n        ref: ref\n      }, routeProps, props));\n    });\n  });\n  var name = Wrapped.displayName || Wrapped.name || 'Component';\n  WithRouterAndRef.displayName = \"withRouterAndRef(\".concat(name, \")\");\n  return WithRouterAndRef;\n}","map":{"version":3,"sources":["../../../../src/elements/common/routing/withRouterAndRef.js"],"names":["React","Route","withRouterAndRef","Wrapped","WithRouterAndRef","forwardRef","props","ref","routeProps","name","displayName"],"mappings":";;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CAEA;AACA;;AACA,eAAe,SAASC,gBAAT,CAA0BC,OAA1B,EAA6D;EACxE,IAAMC,gBAAgB,GAAG,KAAK,CAACC,UAAN,CAAyC,UAACC,KAAD,EAAQC,GAAR,EAAA;IAAA,OAC9D,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EAAQ,UAAA,UAAU,EAAA;MAAA,OAAI,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA,QAAA,CAAA;QAAS,GAAG,EAAEA;MAAd,CAAA,EAAuBC,UAAvB,EAAuCF,KAAvC,CAAA,CAAJ;IAAA,CAAlB,CAD8D;EAAA,CAAzC,CAAzB;EAGA,IAAMG,IAAI,GAAGN,OAAO,CAACO,WAARP,IAAuBA,OAAO,CAACM,IAA/BN,IAAuC,WAApD;EACAC,gBAAgB,CAACM,WAAjBN,GAAAA,mBAAAA,CAAAA,MAAAA,CAAmDK,IAAnDL,EAAAA,GAAAA,CAAAA;EACA,OAAOA,gBAAP;AACH","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { Route } from 'react-router-dom';\n\n// Basically a workaround for the fact that react-router's withRouter cannot forward ref's through\n// functional components. Use this instead to gain the benefits of withRouter but also ref forwarding\nexport default function withRouterAndRef(Wrapped: React.ComponentType<any>) {\n    const WithRouterAndRef = React.forwardRef<Object, React.Ref<any>>((props, ref) => (\n        <Route>{routeProps => <Wrapped ref={ref} {...routeProps} {...props} />}</Route>\n    ));\n    const name = Wrapped.displayName || Wrapped.name || 'Component';\n    WithRouterAndRef.displayName = `withRouterAndRef(${name})`;\n    return WithRouterAndRef;\n}\n"]},"metadata":{},"sourceType":"module"}