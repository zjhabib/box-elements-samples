{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\n/**\n * \n * @file Nav Button component intended to mimic React Router's NavLink component for non-anchor elements\n * @author Box\n */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Route } from 'react-router-dom';\nimport PlainButton from '../../../components/plain-button';\nimport { isLeftClick } from '../../../utils/dom';\nvar NavButton = React.forwardRef(function (props, ref) {\n  var _props$activeClassNam = props.activeClassName,\n    activeClassName = _props$activeClassNam === void 0 ? 'bdl-is-active' : _props$activeClassNam,\n    children = props.children,\n    _props$className = props.className,\n    className = _props$className === void 0 ? 'bdl-NavButton' : _props$className,\n    _props$component = props.component,\n    Component = _props$component === void 0 ? PlainButton : _props$component,\n    exact = props.exact,\n    isActive = props.isActive,\n    _onClick = props.onClick,\n    replace = props.replace,\n    strict = props.strict,\n    to = props.to,\n    rest = _objectWithoutProperties(props, [\"activeClassName\", \"children\", \"className\", \"component\", \"exact\", \"isActive\", \"onClick\", \"replace\", \"strict\", \"to\"]);\n  var path = _typeof(to) === 'object' ? to.pathname : to;\n  return React.createElement(Route, {\n    exact: exact,\n    path: path,\n    strict: strict\n  }, function (_ref) {\n    var history = _ref.history,\n      location = _ref.location,\n      match = _ref.match;\n    var isActiveValue = !!(isActive ? isActive(match, location) : match);\n    return React.createElement(Component, _extends({\n      className: classNames(className, _defineProperty({}, activeClassName, isActiveValue)),\n      onClick: function onClick(event) {\n        if (_onClick) {\n          _onClick(event);\n        }\n        if (!event.defaultPrevented && isLeftClick(event)) {\n          var method = replace ? history.replace : history.push;\n          method(to);\n        }\n      },\n      ref: ref\n    }, rest), children);\n  });\n});\nexport default NavButton;","map":{"version":3,"sources":["../../../../src/elements/common/nav-button/NavButton.js"],"names":["React","classNames","Route","PlainButton","isLeftClick","NavButton","forwardRef","props","ref","activeClassName","children","className","component","Component","exact","isActive","onClick","replace","strict","to","rest","path","pathname","history","location","match","isActiveValue","event","defaultPrevented","method","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAeA,IAAMC,SAAS,GAAG,KAAK,CAACC,UAAN,CAAwC,UAACC,KAAD,EAAeC,GAAf,EAAuC;EAAA,IAAA,qBAAA,GAazFD,KAbyF,CAEzFE,eAFyF;IAEzFA,eAFyF,GAAA,qBAAA,KAAA,KAAA,CAAA,GAEvE,eAFuE,GAAA,qBAAA;IAGzFC,QAHyF,GAazFH,KAbyF,CAGzFG,QAHyF;IAAA,gBAAA,GAazFH,KAbyF,CAIzFI,SAJyF;IAIzFA,SAJyF,GAAA,gBAAA,KAAA,KAAA,CAAA,GAI7E,eAJ6E,GAAA,gBAAA;IAAA,gBAAA,GAazFJ,KAbyF,CAKzFK,SALyF;IAK9EC,SAL8E,GAAA,gBAAA,KAAA,KAAA,CAAA,GAKlEV,WALkE,GAAA,gBAAA;IAMzFW,KANyF,GAazFP,KAbyF,CAMzFO,KANyF;IAOzFC,QAPyF,GAazFR,KAbyF,CAOzFQ,QAPyF;IAQzFC,QARyF,GAazFT,KAbyF,CAQzFS,OARyF;IASzFC,OATyF,GAazFV,KAbyF,CASzFU,OATyF;IAUzFC,MAVyF,GAazFX,KAbyF,CAUzFW,MAVyF;IAWzFC,EAXyF,GAazFZ,KAbyF,CAWzFY,EAXyF;IAYtFC,IAZsF,GAAA,wBAAA,CAazFb,KAbyF,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA,SAAA,EAAA,QAAA,EAAA,IAAA,CAAA,CAAA;EAc7F,IAAMc,IAAI,GAAG,OAAA,CAAOF,EAAP,CAAA,KAAc,QAAd,GAAyBA,EAAE,CAACG,QAA5B,GAAuCH,EAApD;EAEA,OACI,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA;IAAO,KAAK,EAAEL,KAAd;IAAqB,IAAI,EAAEO,IAA3B;IAAiC,MAAM,EAAEH;EAAzC,CAAA,EACK,UAAA,IAAA,EAAkC;IAAA,IAA/BK,OAA+B,GAAA,IAAA,CAA/BA,OAA+B;MAAtBC,QAAsB,GAAA,IAAA,CAAtBA,QAAsB;MAAZC,KAAY,GAAA,IAAA,CAAZA,KAAY;IAC/B,IAAMC,aAAa,GAAG,CAAC,EAAEX,QAAQ,GAAGA,QAAQ,CAACU,KAAD,EAAQD,QAAR,CAAX,GAA+BC,KAAzC,CAAvB;IAEA,OACI,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,QAAA,CAAA;MACI,SAAS,EAAExB,UAAU,CAACU,SAAD,EAAA,eAAA,CAAA,CAAA,CAAA,EAAeF,eAAf,EAAiCiB,aAAjC,CAAA,CADzB;MAEI,OAAO,EAAE,SAAA,OAAA,CAAA,KAAK,EAAI;QACd,IAAIV,QAAJ,EAAa;UACTA,QAAO,CAACW,KAAD,CAAPX;QACH;QAED,IAAI,CAACW,KAAK,CAACC,gBAAP,IAA2BxB,WAAW,CAACuB,KAAD,CAA1C,EAAmD;UAC/C,IAAME,MAAM,GAAGZ,OAAO,GAAGM,OAAO,CAACN,OAAX,GAAqBM,OAAO,CAACO,IAAnD;UACAD,MAAM,CAACV,EAAD,CAANU;QACH;MACJ,CAXL;MAYI,GAAG,EAAErB;IAZT,CAAA,EAaQY,IAbR,CAAA,EAeKV,QAfL,CADJ;EAmBH,CAvBL,CADJ;AA2BH,CA3CiB,CAAlB;AA6CA,eAAeL,SAAf","sourcesContent":["/**\n * @flow\n * @file Nav Button component intended to mimic React Router's NavLink component for non-anchor elements\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Route } from 'react-router-dom';\nimport type { Match, Location } from 'react-router-dom';\nimport PlainButton from '../../../components/plain-button';\nimport { isLeftClick } from '../../../utils/dom';\n\ntype Props = {\n    activeClassName?: string,\n    children: React.Node,\n    className?: string,\n    component?: React.ComponentType<any>,\n    exact?: boolean,\n    isActive?: (match: Match, location: Location) => ?boolean,\n    onClick?: (event: SyntheticEvent<>) => void,\n    replace?: boolean,\n    strict?: boolean,\n    to: string | Location,\n};\n\nconst NavButton = React.forwardRef<Props, React.Ref<any>>((props: Props, ref: React.Ref<any>) => {\n    const {\n        activeClassName = 'bdl-is-active',\n        children,\n        className = 'bdl-NavButton',\n        component: Component = PlainButton,\n        exact,\n        isActive,\n        onClick,\n        replace,\n        strict,\n        to,\n        ...rest\n    } = props;\n    const path = typeof to === 'object' ? to.pathname : to;\n\n    return (\n        <Route exact={exact} path={path} strict={strict}>\n            {({ history, location, match }) => {\n                const isActiveValue = !!(isActive ? isActive(match, location) : match);\n\n                return (\n                    <Component\n                        className={classNames(className, { [activeClassName]: isActiveValue })}\n                        onClick={event => {\n                            if (onClick) {\n                                onClick(event);\n                            }\n\n                            if (!event.defaultPrevented && isLeftClick(event)) {\n                                const method = replace ? history.replace : history.push;\n                                method(to);\n                            }\n                        }}\n                        ref={ref}\n                        {...rest}\n                    >\n                        {children}\n                    </Component>\n                );\n            }}\n        </Route>\n    );\n});\n\nexport default NavButton;\n"]},"metadata":{},"sourceType":"module"}