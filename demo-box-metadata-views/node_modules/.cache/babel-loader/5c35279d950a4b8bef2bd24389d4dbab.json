{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\n/**\n * \n * @file Helper for the box TaskLinks API\n * @author Box\n */\nimport TasksBase from './TasksBase';\nimport { ERROR_CODE_CREATE_TASK_LINK } from '../../constants';\nvar TaskLinks = /*#__PURE__*/\nfunction (_TasksBase) {\n  _inherits(TaskLinks, _TasksBase);\n  function TaskLinks() {\n    _classCallCheck(this, TaskLinks);\n    return _possibleConstructorReturn(this, _getPrototypeOf(TaskLinks).apply(this, arguments));\n  }\n  _createClass(TaskLinks, [{\n    key: \"getUrlForTaskLinkCreate\",\n    value: function getUrlForTaskLinkCreate() {\n      return \"\".concat(this.getBaseApiUrl(), \"/undoc/task_links\");\n    }\n  }, {\n    key: \"createTaskLink\",\n    value: function createTaskLink(_ref) {\n      var errorCallback = _ref.errorCallback,\n        file = _ref.file,\n        successCallback = _ref.successCallback,\n        task = _ref.task;\n      this.errorCode = ERROR_CODE_CREATE_TASK_LINK;\n      var requestData = {\n        data: {\n          target: {\n            id: file.id,\n            type: 'file'\n          },\n          task: {\n            id: task.id,\n            type: 'task'\n          }\n        }\n      };\n      this.post({\n        id: file.id,\n        url: this.getUrlForTaskLinkCreate(),\n        data: _objectSpread({}, requestData),\n        successCallback: successCallback,\n        errorCallback: errorCallback\n      });\n    }\n  }]);\n  return TaskLinks;\n}(TasksBase);\nexport default TaskLinks;","map":{"version":3,"sources":["../../../src/api/tasks/TaskLinks.js"],"names":["TasksBase","ERROR_CODE_CREATE_TASK_LINK","TaskLinks","getBaseApiUrl","errorCallback","file","successCallback","task","errorCode","requestData","data","target","id","type","post","url","getUrlForTaskLinkCreate"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,2BAAT,QAA4C,iBAA5C;IAIMC,S;;;;;;;;;8CACgC;MAC9B,OAAA,EAAA,CAAA,MAAA,CAAU,IAAA,CAAKC,aAAL,CAAA,CAAV,EAAA,mBAAA,CAAA;IACH;;;yCAYQ;MAAA,IATLC,aASK,GAAA,IAAA,CATLA,aASK;QARLC,IAQK,GAAA,IAAA,CARLA,IAQK;QAPLC,eAOK,GAAA,IAAA,CAPLA,eAOK;QANLC,IAMK,GAAA,IAAA,CANLA,IAMK;MACL,IAAA,CAAKC,SAAL,GAAiBP,2BAAjB;MAEA,IAAMQ,WAAW,GAAG;QAChBC,IAAI,EAAE;UACFC,MAAM,EAAE;YACJC,EAAE,EAAEP,IAAI,CAACO,EADL;YAEJC,IAAI,EAAE;UAFF,CADN;UAKFN,IAAI,EAAE;YACFK,EAAE,EAAEL,IAAI,CAACK,EADP;YAEFC,IAAI,EAAE;UAFJ;QALJ;MADU,CAApB;MAaA,IAAA,CAAKC,IAAL,CAAU;QACNF,EAAE,EAAEP,IAAI,CAACO,EADH;QAENG,GAAG,EAAE,IAAA,CAAKC,uBAAL,CAAA,CAFC;QAGNN,IAAI,EAAA,aAAA,CAAA,CAAA,CAAA,EAAOD,WAAP,CAHE;QAINH,eAAe,EAAfA,eAJM;QAKNF,aAAa,EAAbA;MALM,CAAV,CAAA;IAOH;;;EAtCmBJ,S;AAyCxB,eAAeE,SAAf","sourcesContent":["/**\n * @flow\n * @file Helper for the box TaskLinks API\n * @author Box\n */\n\nimport TasksBase from './TasksBase';\nimport { ERROR_CODE_CREATE_TASK_LINK } from '../../constants';\nimport type { ElementsXhrError } from '../../common/types/api';\nimport type { BoxItem } from '../../common/types/core';\n\nclass TaskLinks extends TasksBase {\n    getUrlForTaskLinkCreate(): string {\n        return `${this.getBaseApiUrl()}/undoc/task_links`;\n    }\n\n    createTaskLink({\n        errorCallback,\n        file,\n        successCallback,\n        task,\n    }: {\n        errorCallback: (e: ElementsXhrError, code: string) => void,\n        file: BoxItem,\n        successCallback: Function,\n        task: { id: string },\n    }): void {\n        this.errorCode = ERROR_CODE_CREATE_TASK_LINK;\n\n        const requestData = {\n            data: {\n                target: {\n                    id: file.id,\n                    type: 'file',\n                },\n                task: {\n                    id: task.id,\n                    type: 'task',\n                },\n            },\n        };\n\n        this.post({\n            id: file.id,\n            url: this.getUrlForTaskLinkCreate(),\n            data: { ...requestData },\n            successCallback,\n            errorCallback,\n        });\n    }\n}\n\nexport default TaskLinks;\n"]},"metadata":{},"sourceType":"module"}