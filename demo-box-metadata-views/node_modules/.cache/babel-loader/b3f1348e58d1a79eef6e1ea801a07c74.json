{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport CheckboxPrimitive from './Checkbox';\nvar CheckboxField = function CheckboxField(_ref) {\n  var field = _ref.field,\n    rest = _objectWithoutProperties(_ref, [\"field\"]);\n  if (!field) {\n    return React.createElement(CheckboxPrimitive, rest);\n  }\n  var value = field.value;\n  return React.createElement(CheckboxPrimitive, _extends({}, field, rest, {\n    isChecked: !!value\n  }));\n};\nexport default CheckboxField;","map":{"version":3,"sources":["../../../src/components/checkbox/CheckboxField.tsx"],"names":["React","CheckboxPrimitive","CheckboxField","field","rest","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,iBAAP,MAAiD,YAAjD;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAA4C;EAAA,IAAzCC,KAAyC,GAAA,IAAA,CAAzCA,KAAyC;IAA/BC,IAA+B,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,CAAA;EAC9D,IAAI,CAACD,KAAL,EAAY;IACR,OAAO,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAuBC,IAAvB,CAAP;EACH;EAH6D,IAItDC,KAJsD,GAI5CF,KAJ4C,CAItDE,KAJsD;EAK9D,OAAO,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAuBF,KAAvB,EAAkCC,IAAlC,EAAA;IAAwC,SAAS,EAAE,CAAC,CAACC;EAArD,CAAA,CAAA,CAAP;AACH,CAND;AAQA,eAAeH,aAAf","sourcesContent":["import * as React from 'react';\nimport { FieldProps } from 'formik';\n\nimport CheckboxPrimitive, { CheckboxProps } from './Checkbox';\n\nexport type CheckboxFieldProps = Partial<FieldProps> & CheckboxProps;\n\nconst CheckboxField = ({ field, ...rest }: CheckboxFieldProps) => {\n    if (!field) {\n        return <CheckboxPrimitive {...rest} />;\n    }\n    const { value } = field;\n    return <CheckboxPrimitive {...field} {...rest} isChecked={!!value} />;\n};\n\nexport default CheckboxField;\n"]},"metadata":{},"sourceType":"module"}