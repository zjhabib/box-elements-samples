{"ast":null,"code":"/**\n * \n * @file Transcript row component\n * @author Box\n */\nimport React from 'react';\nimport { formatTime } from '../../../../utils/datetime';\nimport ReadOnlyTranscriptRow from './ReadOnlyTranscriptRow';\nimport EditingTranscriptRow from './EditingTranscriptRow';\nimport { isValidTimeSlice } from './timeSliceUtils';\nimport './TranscriptRow.scss';\nvar TranscriptRow = function TranscriptRow(_ref) {\n  var appears = _ref.appears,\n    text = _ref.text,\n    isEditing = _ref.isEditing,\n    onClick = _ref.onClick,\n    onSave = _ref.onSave,\n    onCancel = _ref.onCancel,\n    onChange = _ref.onChange,\n    interactionTarget = _ref.interactionTarget;\n  var isValid = isValidTimeSlice(appears) && Array.isArray(appears) && appears.length === 1;\n  var timeSlice = appears;\n  var start = isValid ? formatTime(timeSlice[0].start) : undefined;\n  return isEditing ? React.createElement(EditingTranscriptRow, {\n    onCancel: onCancel,\n    onChange: onChange,\n    onSave: onSave,\n    text: text,\n    time: start\n  }) : React.createElement(ReadOnlyTranscriptRow, {\n    interactionTarget: interactionTarget,\n    onClick: onClick,\n    text: text,\n    time: start\n  });\n};\nexport default TranscriptRow;","map":{"version":3,"sources":["../../../../../src/elements/content-sidebar/skills/transcript/TranscriptRow.js"],"names":["React","formatTime","ReadOnlyTranscriptRow","EditingTranscriptRow","isValidTimeSlice","TranscriptRow","appears","text","isEditing","onClick","onSave","onCancel","onChange","interactionTarget","isValid","Array","isArray","length","timeSlice","start","undefined"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAGA,OAAO,sBAAP;AAaA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAiG;EAAA,IAA9FC,OAA8F,GAAA,IAAA,CAA9FA,OAA8F;IAArFC,IAAqF,GAAA,IAAA,CAArFA,IAAqF;IAA/EC,SAA+E,GAAA,IAAA,CAA/EA,SAA+E;IAApEC,OAAoE,GAAA,IAAA,CAApEA,OAAoE;IAA3DC,MAA2D,GAAA,IAAA,CAA3DA,MAA2D;IAAnDC,QAAmD,GAAA,IAAA,CAAnDA,QAAmD;IAAzCC,QAAyC,GAAA,IAAA,CAAzCA,QAAyC;IAA/BC,iBAA+B,GAAA,IAAA,CAA/BA,iBAA+B;EACnH,IAAMC,OAAO,GAAGV,gBAAgB,CAACE,OAAD,CAAhBF,IAA6BW,KAAK,CAACC,OAAND,CAAcT,OAAdS,CAA7BX,IAAuDE,OAAO,CAACW,MAARX,KAAmB,CAA1F;EACA,IAAMY,SAAS,GAAKZ,OAApB;EACA,IAAMa,KAAK,GAAGL,OAAO,GAAGb,UAAU,CAACiB,SAAS,CAAC,CAAD,CAATA,CAAaC,KAAd,CAAb,GAAoCC,SAAzD;EAEA,OAAOZ,SAAS,GACZ,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAA;IAAsB,QAAQ,EAAEG,QAAhC;IAA0C,QAAQ,EAAEC,QAApD;IAA8D,MAAM,EAAEF,MAAtE;IAA8E,IAAI,EAAEH,IAApF;IAA0F,IAAI,EAAEY;EAAhG,CAAA,CADY,GAGZ,KAAA,CAAA,aAAA,CAAC,qBAAD,EAAA;IAAuB,iBAAiB,EAAEN,iBAA1C;IAA6D,OAAO,EAAEJ,OAAtE;IAA+E,IAAI,EAAEF,IAArF;IAA2F,IAAI,EAAEY;EAAjG,CAAA,CAHJ;AAKH,CAVD;AAYA,eAAed,aAAf","sourcesContent":["/**\n * @flow\n * @file Transcript row component\n * @author Box\n */\n\nimport React from 'react';\nimport { formatTime } from '../../../../utils/datetime';\nimport ReadOnlyTranscriptRow from './ReadOnlyTranscriptRow';\nimport EditingTranscriptRow from './EditingTranscriptRow';\nimport { isValidTimeSlice } from './timeSliceUtils';\nimport type { SkillCardEntryTimeSlice } from '../../../../common/types/skills';\n\nimport './TranscriptRow.scss';\n\ntype Props = {\n    appears?: Array<SkillCardEntryTimeSlice>,\n    interactionTarget: string,\n    isEditing: boolean,\n    onCancel: Function,\n    onChange: Function,\n    onClick: Function,\n    onSave: Function,\n    text?: string,\n};\n\nconst TranscriptRow = ({ appears, text, isEditing, onClick, onSave, onCancel, onChange, interactionTarget }: Props) => {\n    const isValid = isValidTimeSlice(appears) && Array.isArray(appears) && appears.length === 1;\n    const timeSlice = ((appears: any): Array<SkillCardEntryTimeSlice>);\n    const start = isValid ? formatTime(timeSlice[0].start) : undefined;\n\n    return isEditing ? (\n        <EditingTranscriptRow onCancel={onCancel} onChange={onChange} onSave={onSave} text={text} time={start} />\n    ) : (\n        <ReadOnlyTranscriptRow interactionTarget={interactionTarget} onClick={onClick} text={text} time={start} />\n    );\n};\n\nexport default TranscriptRow;\n"]},"metadata":{},"sourceType":"module"}