{"ast":null,"code":"/**\n * \n * @file Empty state component\n * @author Box\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorEmptyState from '../../../icons/states/ErrorEmptyState';\nimport FolderEmptyState from '../../../icons/states/FolderEmptyState';\nimport SelectedItemsEmptyState from '../../../icons/states/SelectedItemsEmptyState';\nimport SearchEmptyState from '../../../icons/states/SearchEmptyState';\nimport messages from '../messages';\nimport { VIEW_ERROR, VIEW_FOLDER, VIEW_METADATA, VIEW_SEARCH, VIEW_SELECTED } from '../../../constants';\nimport './EmptyState.scss';\nvar EmptyState = function EmptyState(_ref) {\n  var view = _ref.view,\n    isLoading = _ref.isLoading;\n  var type;\n  var message = isLoading && (view === VIEW_FOLDER || view === VIEW_METADATA) ? React.createElement(FormattedMessage, messages.loadingState) : React.createElement(FormattedMessage, messages[\"\".concat(view, \"State\")]);\n  switch (view) {\n    case VIEW_ERROR:\n      type = React.createElement(ErrorEmptyState, null);\n      break;\n    case VIEW_SELECTED:\n      type = React.createElement(SelectedItemsEmptyState, null);\n      break;\n    case VIEW_SEARCH:\n      type = React.createElement(SearchEmptyState, null);\n      break;\n    default:\n      type = React.createElement(FolderEmptyState, null);\n      break;\n  }\n  return React.createElement(\"div\", {\n    className: \"be-empty\"\n  }, type, React.createElement(\"div\", null, message));\n};\nexport default EmptyState;","map":{"version":3,"sources":["../../../../src/elements/common/empty-state/EmptyState.js"],"names":["React","FormattedMessage","ErrorEmptyState","FolderEmptyState","SelectedItemsEmptyState","SearchEmptyState","messages","VIEW_ERROR","VIEW_FOLDER","VIEW_METADATA","VIEW_SEARCH","VIEW_SELECTED","EmptyState","view","isLoading","type","message","loadingState"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,uBAAP,MAAoC,+CAApC;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,EAAiDC,WAAjD,EAA8DC,aAA9D,QAAmF,oBAAnF;AAGA,OAAO,mBAAP;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAgC;EAAA,IAA7BC,IAA6B,GAAA,IAAA,CAA7BA,IAA6B;IAAvBC,SAAuB,GAAA,IAAA,CAAvBA,SAAuB;EAC/C,IAAIC,IAAJ;EACA,IAAMC,OAAO,GACTF,SAAS,KAAKD,IAAI,KAAKL,WAATK,IAAwBA,IAAI,KAAKJ,aAAtC,CAATK,GACI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBR,QAAQ,CAACW,YAA/B,CADJH,GAGI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBR,QAAQ,CAAA,EAAA,CAAA,MAAA,CAAIO,IAAJ,EAAA,OAAA,CAAA,CAA9B,CAJR;EAOA,QAAQA,IAAR;IACI,KAAKN,UAAL;MACIQ,IAAI,GAAG,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA,IAAA,CAAPA;MACA;IACJ,KAAKJ,aAAL;MACII,IAAI,GAAG,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAA,IAAA,CAAPA;MACA;IACJ,KAAKL,WAAL;MACIK,IAAI,GAAG,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,IAAA,CAAPA;MACA;IACJ;MACIA,IAAI,GAAG,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,IAAA,CAAPA;MACA;EAZR;EAeA,OACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EACKA,IADL,EAEI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAMC,OAAN,CAFJ,CADJ;AAMH,CA9BD;AAgCA,eAAeJ,UAAf","sourcesContent":["/**\n * @flow\n * @file Empty state component\n * @author Box\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorEmptyState from '../../../icons/states/ErrorEmptyState';\nimport FolderEmptyState from '../../../icons/states/FolderEmptyState';\nimport SelectedItemsEmptyState from '../../../icons/states/SelectedItemsEmptyState';\nimport SearchEmptyState from '../../../icons/states/SearchEmptyState';\nimport messages from '../messages';\nimport { VIEW_ERROR, VIEW_FOLDER, VIEW_METADATA, VIEW_SEARCH, VIEW_SELECTED } from '../../../constants';\nimport type { View } from '../../../common/types/core';\n\nimport './EmptyState.scss';\n\ntype Props = {\n    isLoading: boolean,\n    view: View,\n};\n\nconst EmptyState = ({ view, isLoading }: Props) => {\n    let type;\n    const message =\n        isLoading && (view === VIEW_FOLDER || view === VIEW_METADATA) ? (\n            <FormattedMessage {...messages.loadingState} />\n        ) : (\n            <FormattedMessage {...messages[`${view}State`]} />\n        );\n\n    switch (view) {\n        case VIEW_ERROR:\n            type = <ErrorEmptyState />;\n            break;\n        case VIEW_SELECTED:\n            type = <SelectedItemsEmptyState />;\n            break;\n        case VIEW_SEARCH:\n            type = <SearchEmptyState />;\n            break;\n        default:\n            type = <FolderEmptyState />;\n            break;\n    }\n\n    return (\n        <div className=\"be-empty\">\n            {type}\n            <div>{message}</div>\n        </div>\n    );\n};\n\nexport default EmptyState;\n"]},"metadata":{},"sourceType":"module"}