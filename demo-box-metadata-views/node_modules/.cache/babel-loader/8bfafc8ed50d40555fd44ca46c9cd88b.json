{"ast":null,"code":"import * as React from 'react';\nimport AccessStatsItem from './AccessStatsItem';\nvar AccessStatsItemsList = function AccessStatsItemsList(_ref) {\n  var commentCount = _ref.commentCount,\n    commentStatButtonProps = _ref.commentStatButtonProps,\n    downloadCount = _ref.downloadCount,\n    downloadStatButtonProps = _ref.downloadStatButtonProps,\n    editCount = _ref.editCount,\n    editStatButtonProps = _ref.editStatButtonProps,\n    _ref$hasCountOverflow = _ref.hasCountOverflowed,\n    hasCountOverflowed = _ref$hasCountOverflow === void 0 ? false : _ref$hasCountOverflow,\n    isBoxNote = _ref.isBoxNote,\n    openAccessStatsModal = _ref.openAccessStatsModal,\n    previewCount = _ref.previewCount,\n    previewStatButtonProps = _ref.previewStatButtonProps,\n    viewStatButtonProps = _ref.viewStatButtonProps;\n  return React.createElement(\"ul\", {\n    className: \"access-stats-list\"\n  }, React.createElement(AccessStatsItem, {\n    count: previewCount,\n    hasCountOverflowed: hasCountOverflowed,\n    openAccessStatsModal: openAccessStatsModal,\n    statButtonProps: isBoxNote ? viewStatButtonProps : previewStatButtonProps,\n    type: isBoxNote ? 'view' : 'preview'\n  }), React.createElement(AccessStatsItem, {\n    count: editCount,\n    hasCountOverflowed: hasCountOverflowed,\n    openAccessStatsModal: openAccessStatsModal,\n    statButtonProps: editStatButtonProps,\n    type: \"edit\"\n  }), React.createElement(AccessStatsItem, {\n    count: commentCount,\n    hasCountOverflowed: hasCountOverflowed,\n    openAccessStatsModal: openAccessStatsModal,\n    statButtonProps: commentStatButtonProps,\n    type: \"comment\"\n  }), !isBoxNote && React.createElement(AccessStatsItem, {\n    count: downloadCount,\n    hasCountOverflowed: hasCountOverflowed,\n    openAccessStatsModal: openAccessStatsModal,\n    statButtonProps: downloadStatButtonProps,\n    type: \"download\"\n  }));\n};\nexport default AccessStatsItemsList;","map":{"version":3,"sources":["../../../src/features/access-stats/AccessStatsItemsList.js"],"names":["React","AccessStatsItem","AccessStatsItemsList","commentCount","commentStatButtonProps","downloadCount","downloadStatButtonProps","editCount","editStatButtonProps","hasCountOverflowed","isBoxNote","openAccessStatsModal","previewCount","previewStatButtonProps","viewStatButtonProps"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AAiBA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,IAAA,EAAA;EAAA,IACzBC,YADyB,GAAA,IAAA,CACzBA,YADyB;IAEzBC,sBAFyB,GAAA,IAAA,CAEzBA,sBAFyB;IAGzBC,aAHyB,GAAA,IAAA,CAGzBA,aAHyB;IAIzBC,uBAJyB,GAAA,IAAA,CAIzBA,uBAJyB;IAKzBC,SALyB,GAAA,IAAA,CAKzBA,SALyB;IAMzBC,mBANyB,GAAA,IAAA,CAMzBA,mBANyB;IAAA,qBAAA,GAAA,IAAA,CAOzBC,kBAPyB;IAOzBA,kBAPyB,GAAA,qBAAA,KAAA,KAAA,CAAA,GAOJ,KAPI,GAAA,qBAAA;IAQzBC,SARyB,GAAA,IAAA,CAQzBA,SARyB;IASzBC,oBATyB,GAAA,IAAA,CASzBA,oBATyB;IAUzBC,YAVyB,GAAA,IAAA,CAUzBA,YAVyB;IAWzBC,sBAXyB,GAAA,IAAA,CAWzBA,sBAXyB;IAYzBC,mBAZyB,GAAA,IAAA,CAYzBA,mBAZyB;EAAA,OAczB,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IAAI,SAAS,EAAC;EAAd,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA;IACI,KAAK,EAAEF,YADX;IAEI,kBAAkB,EAAEH,kBAFxB;IAGI,oBAAoB,EAAEE,oBAH1B;IAII,eAAe,EAAED,SAAS,GAAGI,mBAAH,GAAyBD,sBAJvD;IAKI,IAAI,EAAEH,SAAS,GAAG,MAAH,GAAY;EAL/B,CAAA,CADJ,EAQI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA;IACI,KAAK,EAAEH,SADX;IAEI,kBAAkB,EAAEE,kBAFxB;IAGI,oBAAoB,EAAEE,oBAH1B;IAII,eAAe,EAAEH,mBAJrB;IAKI,IAAI,EAAC;EALT,CAAA,CARJ,EAeI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA;IACI,KAAK,EAAEL,YADX;IAEI,kBAAkB,EAAEM,kBAFxB;IAGI,oBAAoB,EAAEE,oBAH1B;IAII,eAAe,EAAEP,sBAJrB;IAKI,IAAI,EAAC;EALT,CAAA,CAfJ,EAsBK,CAACM,SAAD,IACG,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA;IACI,KAAK,EAAEL,aADX;IAEI,kBAAkB,EAAEI,kBAFxB;IAGI,oBAAoB,EAAEE,oBAH1B;IAII,eAAe,EAAEL,uBAJrB;IAKI,IAAI,EAAC;EALT,CAAA,CAvBR,CAdyB;AAAA,CAA7B;AAgDA,eAAeJ,oBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport AccessStatsItem from './AccessStatsItem';\n\ntype AccessStatsItemsType = {\n    commentCount: number,\n    commentStatButtonProps: Object,\n    downloadCount: number,\n    downloadStatButtonProps: Object,\n    editCount: number,\n    editStatButtonProps: Object,\n    hasCountOverflowed: boolean,\n    isBoxNote: boolean,\n    openAccessStatsModal?: Function,\n    previewCount: number,\n    previewStatButtonProps: Object,\n    viewStatButtonProps: Object,\n};\n\nconst AccessStatsItemsList = ({\n    commentCount,\n    commentStatButtonProps,\n    downloadCount,\n    downloadStatButtonProps,\n    editCount,\n    editStatButtonProps,\n    hasCountOverflowed = false,\n    isBoxNote,\n    openAccessStatsModal,\n    previewCount,\n    previewStatButtonProps,\n    viewStatButtonProps,\n}: AccessStatsItemsType) => (\n    <ul className=\"access-stats-list\">\n        <AccessStatsItem\n            count={previewCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={isBoxNote ? viewStatButtonProps : previewStatButtonProps}\n            type={isBoxNote ? 'view' : 'preview'}\n        />\n        <AccessStatsItem\n            count={editCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={editStatButtonProps}\n            type=\"edit\"\n        />\n        <AccessStatsItem\n            count={commentCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={commentStatButtonProps}\n            type=\"comment\"\n        />\n        {!isBoxNote && (\n            <AccessStatsItem\n                count={downloadCount}\n                hasCountOverflowed={hasCountOverflowed}\n                openAccessStatsModal={openAccessStatsModal}\n                statButtonProps={downloadStatButtonProps}\n                type=\"download\"\n            />\n        )}\n    </ul>\n);\n\nexport default AccessStatsItemsList;\n"]},"metadata":{},"sourceType":"module"}