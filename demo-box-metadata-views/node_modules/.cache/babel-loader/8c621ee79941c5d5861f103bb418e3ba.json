{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { FormattedMessage, FormattedDate } from 'react-intl';\nimport { convertISOStringToUTCDate } from '../../utils/datetime';\nimport { FIELD_TYPE_DATE } from './constants';\nimport messages from './messages';\nimport './ReadOnlyMetadataField.scss';\nvar ReadOnlyMetadataField = function ReadOnlyMetadataField(_ref) {\n  var dataValue = _ref.dataValue,\n    description = _ref.description,\n    displayName = _ref.displayName,\n    type = _ref.type;\n  var value = React.createElement(FormattedMessage, _extends({\n    tagName: \"i\"\n  }, messages.metadataFieldNoValue));\n  if (dataValue || typeof dataValue === 'number') {\n    if (typeof dataValue === 'string' && type === FIELD_TYPE_DATE) {\n      value = React.createElement(FormattedDate, {\n        day: \"numeric\",\n        month: \"long\",\n        value: convertISOStringToUTCDate(dataValue),\n        year: \"numeric\"\n      });\n    } else if (Array.isArray(dataValue)) {\n      value = dataValue.join(', ');\n    } else {\n      value = dataValue;\n    }\n  }\n  return React.createElement(\"dl\", {\n    className: \"bdl-ReadOnlyMetadataField\"\n  }, React.createElement(\"dt\", null, displayName), !!description && React.createElement(\"i\", {\n    className: \"bdl-ReadOnlyMetadataField-desc\"\n  }, description), React.createElement(\"dd\", null, value));\n};\nexport default ReadOnlyMetadataField;","map":{"version":3,"sources":["../../../src/features/metadata-instance-fields/ReadOnlyMetadataField.js"],"names":["React","FormattedMessage","FormattedDate","convertISOStringToUTCDate","FIELD_TYPE_DATE","messages","ReadOnlyMetadataField","dataValue","description","displayName","type","value","metadataFieldNoValue","Array","isArray","join"],"mappings":";;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,YAAhD;AAEA,SAASC,yBAAT,QAA0C,sBAA1C;AAEA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,8BAAP;AASA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,IAAA,EAA0D;EAAA,IAAvDC,SAAuD,GAAA,IAAA,CAAvDA,SAAuD;IAA5CC,WAA4C,GAAA,IAAA,CAA5CA,WAA4C;IAA/BC,WAA+B,GAAA,IAAA,CAA/BA,WAA+B;IAAlBC,IAAkB,GAAA,IAAA,CAAlBA,IAAkB;EACpF,IAAIC,KAAK,GAAG,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,QAAA,CAAA;IAAkB,OAAO,EAAC;EAA1B,CAAA,EAAkCN,QAAQ,CAACO,oBAA3C,CAAA,CAAZ;EAEA,IAAIL,SAAS,IAAI,OAAOA,SAAP,KAAqB,QAAtC,EAAgD;IAC5C,IAAI,OAAOA,SAAP,KAAqB,QAArB,IAAiCG,IAAI,KAAKN,eAA9C,EAA+D;MAC3DO,KAAK,GACD,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA;QAAe,GAAG,EAAC,SAAnB;QAA6B,KAAK,EAAC,MAAnC;QAA0C,KAAK,EAAER,yBAAyB,CAACI,SAAD,CAA1E;QAAuF,IAAI,EAAC;MAA5F,CAAA,CADJI;IAGH,CAJD,MAIO,IAAIE,KAAK,CAACC,OAAND,CAAcN,SAAdM,CAAJ,EAA8B;MACjCF,KAAK,GAAGJ,SAAS,CAACQ,IAAVR,CAAe,IAAfA,CAARI;IACH,CAFM,MAEA;MACHA,KAAK,GAAGJ,SAARI;IACH;EACJ;EAED,OACI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IAAI,SAAS,EAAC;EAAd,CAAA,EACI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAKF,WAAL,CADJ,EAEK,CAAC,CAACD,WAAF,IAAiB,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;IAAG,SAAS,EAAC;EAAb,CAAA,EAA+CA,WAA/C,CAFtB,EAGI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAKG,KAAL,CAHJ,CADJ;AAOH,CAtBD;AAwBA,eAAeL,qBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage, FormattedDate } from 'react-intl';\n\nimport { convertISOStringToUTCDate } from '../../utils/datetime';\n\nimport { FIELD_TYPE_DATE } from './constants';\nimport messages from './messages';\nimport type { MetadataFieldValue, MetadataFieldType } from '../../common/types/metadata';\nimport './ReadOnlyMetadataField.scss';\n\ntype Props = {\n    dataValue?: MetadataFieldValue,\n    description?: string,\n    displayName: string,\n    type: MetadataFieldType,\n};\n\nconst ReadOnlyMetadataField = ({ dataValue, description, displayName, type }: Props) => {\n    let value = <FormattedMessage tagName=\"i\" {...messages.metadataFieldNoValue} />;\n\n    if (dataValue || typeof dataValue === 'number') {\n        if (typeof dataValue === 'string' && type === FIELD_TYPE_DATE) {\n            value = (\n                <FormattedDate day=\"numeric\" month=\"long\" value={convertISOStringToUTCDate(dataValue)} year=\"numeric\" />\n            );\n        } else if (Array.isArray(dataValue)) {\n            value = dataValue.join(', ');\n        } else {\n            value = dataValue;\n        }\n    }\n\n    return (\n        <dl className=\"bdl-ReadOnlyMetadataField\">\n            <dt>{displayName}</dt>\n            {!!description && <i className=\"bdl-ReadOnlyMetadataField-desc\">{description}</i>}\n            <dd>{value}</dd>\n        </dl>\n    );\n};\n\nexport default ReadOnlyMetadataField;\n"]},"metadata":{},"sourceType":"module"}