{"ast":null,"code":"/**\n * \n * @file Status Skill Card component\n * @author Box\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../../../common/messages';\nimport { SKILLS_ERROR_EXTERNAL_AUTH, SKILLS_ERROR_BILLING, SKILLS_ERROR_UNKNOWN, SKILLS_ERROR_INVOCATIONS, SKILLS_ERROR_FILE_PROCESSING, SKILLS_ERROR_INVALID_FILE_SIZE, SKILLS_ERROR_INVALID_FILE_FORMAT, SKILLS_STATUS_PENDING, SKILLS_STATUS_INVOKED } from '../../../../constants';\nvar Status = function Status(_ref) {\n  var card = _ref.card;\n  var _card$status = card.status,\n    status = _card$status === void 0 ? {} : _card$status;\n  var code = status.code,\n    message = status.message;\n  var localizedMessage = messages.skillUnknownError;\n  switch (code) {\n    case SKILLS_ERROR_INVALID_FILE_SIZE:\n      localizedMessage = messages.skillInvalidFileSizeError;\n      break;\n    case SKILLS_ERROR_INVALID_FILE_FORMAT:\n      localizedMessage = messages.skillInvalidFileExtensionError;\n      break;\n    case SKILLS_ERROR_EXTERNAL_AUTH:\n    case SKILLS_ERROR_BILLING:\n    case SKILLS_ERROR_INVOCATIONS:\n    case SKILLS_ERROR_UNKNOWN:\n      localizedMessage = messages.skillUnknownError;\n      break;\n    case SKILLS_ERROR_FILE_PROCESSING:\n      localizedMessage = messages.skillFileProcessingError;\n      break;\n    case SKILLS_STATUS_PENDING:\n      localizedMessage = messages.skillPendingStatus;\n      break;\n    case SKILLS_STATUS_INVOKED:\n      localizedMessage = messages.skillInvokedStatus;\n      break;\n    default:\n      if (message) {\n        return message;\n      }\n  }\n  return React.createElement(FormattedMessage, localizedMessage);\n};\nexport default Status;","map":{"version":3,"sources":["../../../../../src/elements/content-sidebar/skills/status/Status.js"],"names":["React","FormattedMessage","messages","SKILLS_ERROR_EXTERNAL_AUTH","SKILLS_ERROR_BILLING","SKILLS_ERROR_UNKNOWN","SKILLS_ERROR_INVOCATIONS","SKILLS_ERROR_FILE_PROCESSING","SKILLS_ERROR_INVALID_FILE_SIZE","SKILLS_ERROR_INVALID_FILE_FORMAT","SKILLS_STATUS_PENDING","SKILLS_STATUS_INVOKED","Status","card","status","code","message","localizedMessage","skillUnknownError","skillInvalidFileSizeError","skillInvalidFileExtensionError","skillFileProcessingError","skillPendingStatus","skillInvokedStatus"],"mappings":"AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SACIC,0BADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,EAIIC,wBAJJ,EAKIC,4BALJ,EAMIC,8BANJ,EAOIC,gCAPJ,EAQIC,qBARJ,EASIC,qBATJ,QAUO,uBAVP;AAiBA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAA,IAAA,EAAqB;EAAA,IAAlBC,IAAkB,GAAA,IAAA,CAAlBA,IAAkB;EAAA,IAAA,YAAA,GACGA,IADH,CACxBC,MADwB;IACxBA,MADwB,GAAA,YAAA,KAAA,KAAA,CAAA,GACf,CAAA,CADe,GAAA,YAAA;EAAA,IAExBC,IAFwB,GAEoBD,MAFpB,CAExBC,IAFwB;IAElBC,OAFkB,GAEoBF,MAFpB,CAElBE,OAFkB;EAGhC,IAAIC,gBAAgB,GAAGf,QAAQ,CAACgB,iBAAhC;EAEA,QAAQH,IAAR;IACI,KAAKP,8BAAL;MACIS,gBAAgB,GAAGf,QAAQ,CAACiB,yBAA5BF;MACA;IACJ,KAAKR,gCAAL;MACIQ,gBAAgB,GAAGf,QAAQ,CAACkB,8BAA5BH;MACA;IACJ,KAAKd,0BAAL;IACA,KAAKC,oBAAL;IACA,KAAKE,wBAAL;IACA,KAAKD,oBAAL;MACIY,gBAAgB,GAAGf,QAAQ,CAACgB,iBAA5BD;MACA;IACJ,KAAKV,4BAAL;MACIU,gBAAgB,GAAGf,QAAQ,CAACmB,wBAA5BJ;MACA;IACJ,KAAKP,qBAAL;MACIO,gBAAgB,GAAGf,QAAQ,CAACoB,kBAA5BL;MACA;IACJ,KAAKN,qBAAL;MACIM,gBAAgB,GAAGf,QAAQ,CAACqB,kBAA5BN;MACA;IACJ;MACI,IAAID,OAAJ,EAAa;QACT,OAAOA,OAAP;MACH;EAzBT;EA4BA,OAAO,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBC,gBAAtB,CAAP;AACH,CAlCD;AAoCA,eAAeL,MAAf","sourcesContent":["/**\n * @flow\n * @file Status Skill Card component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../../../common/messages';\nimport {\n    SKILLS_ERROR_EXTERNAL_AUTH,\n    SKILLS_ERROR_BILLING,\n    SKILLS_ERROR_UNKNOWN,\n    SKILLS_ERROR_INVOCATIONS,\n    SKILLS_ERROR_FILE_PROCESSING,\n    SKILLS_ERROR_INVALID_FILE_SIZE,\n    SKILLS_ERROR_INVALID_FILE_FORMAT,\n    SKILLS_STATUS_PENDING,\n    SKILLS_STATUS_INVOKED,\n} from '../../../../constants';\nimport type { SkillCard, SkillCardLocalizableType } from '../../../../common/types/skills';\n\ntype Props = {\n    card: SkillCard,\n};\n\nconst Status = ({ card }: Props) => {\n    const { status = {} }: SkillCard = card;\n    const { code, message }: SkillCardLocalizableType = status;\n    let localizedMessage = messages.skillUnknownError;\n\n    switch (code) {\n        case SKILLS_ERROR_INVALID_FILE_SIZE:\n            localizedMessage = messages.skillInvalidFileSizeError;\n            break;\n        case SKILLS_ERROR_INVALID_FILE_FORMAT:\n            localizedMessage = messages.skillInvalidFileExtensionError;\n            break;\n        case SKILLS_ERROR_EXTERNAL_AUTH:\n        case SKILLS_ERROR_BILLING:\n        case SKILLS_ERROR_INVOCATIONS:\n        case SKILLS_ERROR_UNKNOWN:\n            localizedMessage = messages.skillUnknownError;\n            break;\n        case SKILLS_ERROR_FILE_PROCESSING:\n            localizedMessage = messages.skillFileProcessingError;\n            break;\n        case SKILLS_STATUS_PENDING:\n            localizedMessage = messages.skillPendingStatus;\n            break;\n        case SKILLS_STATUS_INVOKED:\n            localizedMessage = messages.skillInvokedStatus;\n            break;\n        default:\n            if (message) {\n                return message;\n            }\n    }\n\n    return <FormattedMessage {...localizedMessage} />;\n};\n\nexport default Status;\n"]},"metadata":{},"sourceType":"module"}