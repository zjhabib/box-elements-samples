{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport CONSTANTS from './constants';\n/* eslint-disable*/\n\nvar Channel = /*#__PURE__*/\nfunction () {\n  function Channel(appName) {\n    var _this = this;\n    _classCallCheck(this, Channel);\n    _defineProperty(this, \"buildNextRequestID\", function () {\n      return \"\".concat(CONSTANTS.REQUEST_ID_PRE).concat(_this.window.performance.now());\n    });\n    _defineProperty(this, \"buildDetailsObj\", function (operationType, data, comServerToApplicationTimeoutSec) {\n      var timeoutSecString = comServerToApplicationTimeoutSec.toString();\n      var details = {\n        data: undefined,\n        operation: operationType,\n        properties: {\n          application: _this.appName,\n          timeout: timeoutSecString\n        },\n        // eslint-disable-next-line camelcase\n        req_id: _this.buildNextRequestID()\n      };\n      if (operationType !== CONSTANTS.OPERATION_STATUS) {\n        if (!data) {\n          throw new TypeError(\"Data cannot be undefined for \".concat(operationType));\n        }\n        details.data = data;\n      }\n      return details;\n    });\n    this.appName = appName;\n    this.window = window;\n  }\n  _createClass(Channel, [{\n    key: \"sendCommand\",\n    value: function sendCommand(requestData, browserToComServerTimeoutMS, comServerToApplicationTimeoutSec) {\n      return Promise.resolve('TODO');\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(requestData, browserToComServerTimeoutMS, comServerToApplicationTimeoutSec) {\n      return Promise.resolve('TODO');\n    }\n  }, {\n    key: \"getComServerStatus\",\n    value: function getComServerStatus(browserToComServerTimeoutMS, comServerToApplicationTimeoutSec) {\n      return Promise.resolve('TODO');\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {}\n  }]);\n  return Channel;\n}();\nexport default Channel;","map":{"version":3,"sources":["../../../src/api/box-edit/Channel.js"],"names":["CONSTANTS","Channel","appName","window","REQUEST_ID_PRE","performance","now","operationType","data","comServerToApplicationTimeoutSec","timeoutSecString","toString","details","undefined","operation","properties","application","timeout","req_id","buildNextRequestID","OPERATION_STATUS","TypeError","requestData","browserToComServerTimeoutMS","Promise","resolve"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAOA,SAAP,MAAsB,aAAtB;AAEA;;IACMC,O;;EAKF,SAAA,OAAA,CAAYC,OAAZ,EAA6B;IAAA,IAAA,KAAA,GAAA,IAAA;IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA;IAAA,eAAA,CAAA,IAAA,EAAA,oBAAA,EAKR,YAAA;MAAA,OAAA,EAAA,CAAA,MAAA,CAASF,SAAS,CAACI,cAAnB,CAAA,CAAA,MAAA,CAAoC,KAAI,CAACD,MAAL,CAAYE,WAAZ,CAAwBC,GAAxB,CAAA,CAApC,CAAA;IAAA,CALQ,CAAA;IAAA,eAAA,CAAA,IAAA,EAAA,iBAAA,EAOX,UAACC,aAAD,EAAwBC,IAAxB,EAAuCC,gCAAvC,EAAoF;MAClG,IAAMC,gBAAgB,GAAGD,gCAAgC,CAACE,QAAjCF,CAAAA,CAAzB;MACA,IAAMG,OAAO,GAAG;QACZJ,IAAI,EAAEK,SADM;QAEZC,SAAS,EAAEP,aAFC;QAGZQ,UAAU,EAAE;UACRC,WAAW,EAAE,KAAI,CAACd,OADV;UAERe,OAAO,EAAEP;QAFD,CAHA;QAOZ;QACAQ,MAAM,EAAE,KAAI,CAACC,kBAAL,CAAA;MARI,CAAhB;MAWA,IAAIZ,aAAa,KAAKP,SAAS,CAACoB,gBAAhC,EAAkD;QAC9C,IAAI,CAACZ,IAAL,EAAW;UACP,MAAM,IAAIa,SAAJ,CAAA,+BAAA,CAAA,MAAA,CAA8Cd,aAA9C,CAAA,CAAN;QACH;QAEDK,OAAO,CAACJ,IAARI,GAAeJ,IAAfI;MACH;MAED,OAAOA,OAAP;IACH,CA7B4B,CAAA;IACzB,IAAA,CAAKV,OAAL,GAAeA,OAAf;IACA,IAAA,CAAKC,MAAL,GAAcA,MAAd;EACH;;;gCA6BGmB,W,EACAC,2B,EACAd,gC,EACY;MACZ,OAAOe,OAAO,CAACC,OAARD,CAAgB,MAAhBA,CAAP;IACH;;;gCAGGF,W,EACAC,2B,EACAd,gC,EACY;MACZ,OAAOe,OAAO,CAACC,OAARD,CAAgB,MAAhBA,CAAP;IACH;;;uCAEkBD,2B,EAAqCd,gC,EAAwD;MAC5G,OAAOe,OAAO,CAACC,OAARD,CAAgB,MAAhBA,CAAP;IACH;;;8BAEe,CAAE;;;;AAGtB,eAAevB,OAAf","sourcesContent":["// @flow\nimport CONSTANTS from './constants';\n\n/* eslint-disable*/\nclass Channel {\n    channelName: string;\n    appName: string;\n    window: any;\n\n    constructor(appName: string) {\n        this.appName = appName;\n        this.window = window;\n    }\n\n    buildNextRequestID = () => `${CONSTANTS.REQUEST_ID_PRE}${this.window.performance.now()}`;\n\n    buildDetailsObj = (operationType: string, data: ?Object, comServerToApplicationTimeoutSec: number) => {\n        const timeoutSecString = comServerToApplicationTimeoutSec.toString();\n        const details = {\n            data: undefined,\n            operation: operationType,\n            properties: {\n                application: this.appName,\n                timeout: timeoutSecString,\n            },\n            // eslint-disable-next-line camelcase\n            req_id: this.buildNextRequestID(),\n        };\n\n        if (operationType !== CONSTANTS.OPERATION_STATUS) {\n            if (!data) {\n                throw new TypeError(`Data cannot be undefined for ${operationType}`);\n            }\n\n            details.data = data;\n        }\n\n        return details;\n    };\n\n    sendCommand(\n        requestData: any,\n        browserToComServerTimeoutMS: number,\n        comServerToApplicationTimeoutSec: number,\n    ): Promise<any> {\n        return Promise.resolve('TODO');\n    }\n\n    sendRequest(\n        requestData: any,\n        browserToComServerTimeoutMS: number,\n        comServerToApplicationTimeoutSec: number,\n    ): Promise<any> {\n        return Promise.resolve('TODO');\n    }\n\n    getComServerStatus(browserToComServerTimeoutMS: number, comServerToApplicationTimeoutSec: number): Promise<any> {\n        return Promise.resolve('TODO');\n    }\n\n    destroy(): void {}\n}\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}