{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\n/**\n * \n * @file Pagination component\n * @author Box\n */\nimport React from 'react';\nimport MarkerBasedPagination from './MarkerBasedPagination';\nimport OffsetBasedPagination from './OffsetBasedPagination';\nimport './Pagination.scss';\nvar Pagination = function Pagination(_ref) {\n  var hasNextMarker = _ref.hasNextMarker,\n    hasPrevMarker = _ref.hasPrevMarker,\n    onMarkerBasedPageChange = _ref.onMarkerBasedPageChange,\n    rest = _objectWithoutProperties(_ref, [\"hasNextMarker\", \"hasPrevMarker\", \"onMarkerBasedPageChange\"]);\n  if (hasNextMarker || hasPrevMarker) {\n    return React.createElement(MarkerBasedPagination, {\n      hasNextMarker: hasNextMarker,\n      hasPrevMarker: hasPrevMarker,\n      onMarkerBasedPageChange: onMarkerBasedPageChange\n    });\n  }\n  return React.createElement(OffsetBasedPagination, rest);\n};\nexport default Pagination;","map":{"version":3,"sources":["../../../src/features/pagination/Pagination.js"],"names":["React","MarkerBasedPagination","OffsetBasedPagination","Pagination","hasNextMarker","hasPrevMarker","onMarkerBasedPageChange","rest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAO,mBAAP;AAYA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAA+E;EAAA,IAA5EC,aAA4E,GAAA,IAAA,CAA5EA,aAA4E;IAA7DC,aAA6D,GAAA,IAAA,CAA7DA,aAA6D;IAA9CC,uBAA8C,GAAA,IAAA,CAA9CA,uBAA8C;IAAlBC,IAAkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,eAAA,EAAA,eAAA,EAAA,yBAAA,CAAA,CAAA;EAC9F,IAAIH,aAAa,IAAIC,aAArB,EAAoC;IAChC,OACI,KAAA,CAAA,aAAA,CAAC,qBAAD,EAAA;MACI,aAAa,EAAED,aADnB;MAEI,aAAa,EAAEC,aAFnB;MAGI,uBAAuB,EAAEC;IAH7B,CAAA,CADJ;EAOH;EAED,OAAO,KAAA,CAAA,aAAA,CAAC,qBAAD,EAA2BC,IAA3B,CAAP;AACH,CAZD;AAcA,eAAeJ,UAAf","sourcesContent":["/**\n * @flow\n * @file Pagination component\n * @author Box\n */\n\nimport React from 'react';\nimport MarkerBasedPagination from './MarkerBasedPagination';\nimport OffsetBasedPagination from './OffsetBasedPagination';\nimport './Pagination.scss';\n\ntype Props = {\n    hasNextMarker?: boolean,\n    hasPrevMarker?: boolean,\n    offset?: number,\n    onMarkerBasedPageChange?: Function,\n    onOffsetChange?: Function,\n    pageSize?: number,\n    totalCount?: number,\n};\n\nconst Pagination = ({ hasNextMarker, hasPrevMarker, onMarkerBasedPageChange, ...rest }: Props) => {\n    if (hasNextMarker || hasPrevMarker) {\n        return (\n            <MarkerBasedPagination\n                hasNextMarker={hasNextMarker}\n                hasPrevMarker={hasPrevMarker}\n                onMarkerBasedPageChange={onMarkerBasedPageChange}\n            />\n        );\n    }\n\n    return <OffsetBasedPagination {...rest} />;\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}