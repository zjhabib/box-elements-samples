{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file HOC to make popup-able Box UI Elements\n * @author Box\n */\nimport React, { PureComponent } from 'react';\nimport Modal from 'react-modal';\nimport noop from 'lodash/noop';\nimport omit from 'lodash/omit';\nimport { CLIENT_NAME_CONTENT_PICKER, CLIENT_NAME_CONTENT_UPLOADER } from '../../constants';\nvar makePopup = function makePopup(kit) {\n  return function (Wrapped) {\n    var _temp;\n    return _temp = /*#__PURE__*/\n    function (_PureComponent) {\n      _inherits(Wrapper, _PureComponent);\n\n      /**\n       * [constructor]\n       *\n       * @param {*} props\n       * @return {Wrapper}\n       */\n      function Wrapper(props) {\n        var _this;\n        _classCallCheck(this, Wrapper);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Wrapper).call(this, props));\n        _defineProperty(_assertThisInitialized(_this), \"onClick\", function (data) {\n          var _this$props$onClick = _this.props.onClick,\n            onClick = _this$props$onClick === void 0 ? noop : _this$props$onClick;\n          _this.close(onClick, data);\n        });\n        _defineProperty(_assertThisInitialized(_this), \"onClose\", function (data) {\n          var _this$props$onClose = _this.props.onClose,\n            onClose = _this$props$onClose === void 0 ? noop : _this$props$onClose;\n          _this.close(onClose, data);\n        });\n        _defineProperty(_assertThisInitialized(_this), \"onCancel\", function (data) {\n          var _this$props$onCancel = _this.props.onCancel,\n            onCancel = _this$props$onCancel === void 0 ? noop : _this$props$onCancel;\n          _this.close(onCancel, data);\n        });\n        _defineProperty(_assertThisInitialized(_this), \"onChoose\", function (data) {\n          var _this$props$onChoose = _this.props.onChoose,\n            onChoose = _this$props$onChoose === void 0 ? noop : _this$props$onChoose;\n          _this.close(onChoose, data);\n        });\n        _defineProperty(_assertThisInitialized(_this), \"onButtonClick\", function () {\n          _this.setState({\n            isOpen: true\n          });\n        });\n        _this.state = {\n          isOpen: false\n        };\n        return _this;\n      }\n      /**\n       * Hides the modal and call the callback\n       *\n       * @param {Function} callback - function to call\n       * @return {void}\n       */\n\n      _createClass(Wrapper, [{\n        key: \"close\",\n        value: function close(callback, data) {\n          this.setState({\n            isOpen: false\n          }, function () {\n            return callback(data);\n          });\n        }\n        /**\n         * Callback for clicking\n         *\n         * @param {*} data - any callback data\n         * @return {void}\n         */\n      }, {\n        key: \"render\",\n        /**\n         * Renders the component\n         *\n         * @return {void}\n         */\n        value: function render() {\n          var isOpen = this.state.isOpen;\n          var _this$props = this.props,\n            modal = _this$props.modal,\n            rest = _objectWithoutProperties(_this$props, [\"modal\"]);\n          var wrappedProps = omit(rest, ['onCancel', 'onChoose', 'onClose', 'modal']);\n          var _modal$buttonLabel = modal.buttonLabel,\n            buttonLabel = _modal$buttonLabel === void 0 ? 'Missing modal.buttonLabel in options' : _modal$buttonLabel,\n            _modal$buttonClassNam = modal.buttonClassName,\n            buttonClassName = _modal$buttonClassNam === void 0 ? 'btn btn-primary' : _modal$buttonClassNam,\n            _modal$modalClassName = modal.modalClassName,\n            modalClassName = _modal$modalClassName === void 0 ? 'be-modal-wrapper-content' : _modal$modalClassName,\n            _modal$overlayClassNa = modal.overlayClassName,\n            overlayClassName = _modal$overlayClassNa === void 0 ? 'be-modal-wrapper-overlay' : _modal$overlayClassNa;\n          switch (kit) {\n            case CLIENT_NAME_CONTENT_PICKER:\n              wrappedProps.onCancel = this.onCancel;\n              wrappedProps.onChoose = this.onChoose;\n              break;\n            case CLIENT_NAME_CONTENT_UPLOADER:\n              wrappedProps.onClose = this.onClose;\n              break;\n            default:\n              throw new Error('Unknown kit type');\n          }\n          return React.createElement(\"div\", null, React.createElement(\"button\", {\n            className: buttonClassName,\n            onClick: this.onButtonClick,\n            type: \"button\"\n          }, buttonLabel), React.createElement(Modal, {\n            className: modalClassName,\n            contentLabel: kit,\n            isOpen: isOpen,\n            overlayClassName: overlayClassName\n          }, React.createElement(Wrapped, wrappedProps)));\n        }\n      }]);\n      return Wrapper;\n    }(PureComponent), _temp;\n  };\n};\nexport default makePopup;","map":{"version":3,"sources":["../../../src/elements/common/makePopup.js"],"names":["React","PureComponent","Modal","noop","omit","CLIENT_NAME_CONTENT_PICKER","CLIENT_NAME_CONTENT_UPLOADER","makePopup","kit","Wrapped","props","state","isOpen","callback","data","setState","onClick","close","onClose","onCancel","onChoose","modal","rest","wrappedProps","buttonLabel","buttonClassName","modalClassName","overlayClassName","Error","onButtonClick"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file HOC to make popup-able Box UI Elements\n * @author Box\n */\n\nimport React, { PureComponent } from 'react';\nimport Modal from 'react-modal';\nimport noop from 'lodash/noop';\nimport omit from 'lodash/omit';\n\nimport { CLIENT_NAME_CONTENT_PICKER, CLIENT_NAME_CONTENT_UPLOADER } from '../../constants';\n\nimport type { ModalOptions } from './flowTypes';\n\ntype Props = {\n    modal: ModalOptions,\n    onCancel?: Function,\n    onChoose?: Function,\n    onClick?: Function,\n    onClose?: Function,\n};\n\ntype State = {\n    isOpen: boolean,\n};\n\nconst makePopup = (kit: string) => (Wrapped: any) =>\n    class Wrapper extends PureComponent<Props, State> {\n        /**\n         * [constructor]\n         *\n         * @param {*} props\n         * @return {Wrapper}\n         */\n        constructor(props: Props) {\n            super(props);\n            this.state = {\n                isOpen: false,\n            };\n        }\n\n        /**\n         * Hides the modal and call the callback\n         *\n         * @param {Function} callback - function to call\n         * @return {void}\n         */\n        close(callback: Function, data: any) {\n            this.setState({ isOpen: false }, () => callback(data));\n        }\n\n        /**\n         * Callback for clicking\n         *\n         * @param {*} data - any callback data\n         * @return {void}\n         */\n        onClick = (data: any) => {\n            const { onClick = noop }: Props = this.props;\n            this.close(onClick, data);\n        };\n\n        /**\n         * Callback for pressing close\n         *\n         * @param {*} data - any callback data\n         * @return {void}\n         */\n        onClose = (data: any) => {\n            const { onClose = noop }: Props = this.props;\n            this.close(onClose, data);\n        };\n\n        /**\n         * Callback for pressing cancel\n         *\n         * @param {*} data - any callback data\n         * @return {void}\n         */\n        onCancel = (data: any) => {\n            const { onCancel = noop }: Props = this.props;\n            this.close(onCancel, data);\n        };\n\n        /**\n         * Callback for pressing choose\n         *\n         * @param {*} data - any callback data\n         * @return {void}\n         */\n        onChoose = (data: any) => {\n            const { onChoose = noop }: Props = this.props;\n            this.close(onChoose, data);\n        };\n\n        /**\n         * Button click handler\n         *\n         * @return {void}\n         */\n        onButtonClick = () => {\n            this.setState({ isOpen: true });\n        };\n\n        /**\n         * Renders the component\n         *\n         * @return {void}\n         */\n        render() {\n            const { isOpen }: State = this.state;\n            const { modal, ...rest }: Props = this.props;\n            const wrappedProps = omit(rest, ['onCancel', 'onChoose', 'onClose', 'modal']);\n            const {\n                buttonLabel = 'Missing modal.buttonLabel in options',\n                buttonClassName = 'btn btn-primary',\n                modalClassName = 'be-modal-wrapper-content',\n                overlayClassName = 'be-modal-wrapper-overlay',\n            }: ModalOptions = modal;\n\n            switch (kit) {\n                case CLIENT_NAME_CONTENT_PICKER:\n                    wrappedProps.onCancel = this.onCancel;\n                    wrappedProps.onChoose = this.onChoose;\n                    break;\n                case CLIENT_NAME_CONTENT_UPLOADER:\n                    wrappedProps.onClose = this.onClose;\n                    break;\n                default:\n                    throw new Error('Unknown kit type');\n            }\n\n            return (\n                <div>\n                    <button className={buttonClassName} onClick={this.onButtonClick} type=\"button\">\n                        {buttonLabel}\n                    </button>\n                    <Modal\n                        className={modalClassName}\n                        contentLabel={kit}\n                        isOpen={isOpen}\n                        overlayClassName={overlayClassName}\n                    >\n                        <Wrapped {...wrappedProps} />\n                    </Modal>\n                </div>\n            );\n        }\n    };\n\nexport default makePopup;\n"]},"metadata":{},"sourceType":"module"}