{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport uniqueid from 'lodash/uniqueId';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\nimport EditableDescription from './EditableDescription';\nimport EditableURL from './EditableURL';\nimport RetentionPolicy from './RetentionPolicy';\nimport ReadonlyDescription from './ReadonlyDescription';\nimport messages from './messages';\nimport './ItemProperties.scss';\nvar datetimeOptions = {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric'\n};\nvar ItemProperties = function ItemProperties(_ref) {\n  var createdAt = _ref.createdAt,\n    description = _ref.description,\n    _ref$descriptionTexta = _ref.descriptionTextareaProps,\n    descriptionTextareaProps = _ref$descriptionTexta === void 0 ? {} : _ref$descriptionTexta,\n    enterpriseOwner = _ref.enterpriseOwner,\n    modifiedAt = _ref.modifiedAt,\n    onDescriptionChange = _ref.onDescriptionChange,\n    onValidURLChange = _ref.onValidURLChange,\n    owner = _ref.owner,\n    _ref$retentionPolicyP = _ref.retentionPolicyProps,\n    retentionPolicyProps = _ref$retentionPolicyP === void 0 ? {} : _ref$retentionPolicyP,\n    size = _ref.size,\n    trashedAt = _ref.trashedAt,\n    uploader = _ref.uploader,\n    url = _ref.url;\n  var descriptionId = uniqueid('description_');\n  return React.createElement(\"dl\", {\n    className: \"item-properties\"\n  }, description || onDescriptionChange ? React.createElement(React.Fragment, null, React.createElement(FormattedMessage, messages.description, function (text) {\n    return React.createElement(\"dt\", {\n      id: descriptionId\n    }, text);\n  }), React.createElement(\"dd\", null, onDescriptionChange ? React.createElement(EditableDescription, {\n    onDescriptionChange: onDescriptionChange,\n    textAreaProps: _objectSpread({}, descriptionTextareaProps, {\n      'aria-labelledby': descriptionId\n    }),\n    value: description\n  }) : React.createElement(ReadonlyDescription, {\n    value: description\n  }))) : null, !!url && React.createElement(React.Fragment, null, React.createElement(FormattedMessage, _extends({\n    tagName: \"dt\"\n  }, messages.url)), React.createElement(\"dd\", null, onValidURLChange ? React.createElement(EditableURL, {\n    onValidURLChange: onValidURLChange,\n    value: url\n  }) : url)), owner ? React.createElement(React.Fragment, null, React.createElement(FormattedMessage, _extends({\n    tagName: \"dt\"\n  }, messages.owner)), React.createElement(\"dd\", null, owner)) : null, enterpriseOwner ? React.createElement(React.Fragment, null, React.createElement(FormattedMessage, _extends({\n    tagName: \"dt\"\n  }, messages.enterpriseOwner)), React.createElement(\"dd\", null, enterpriseOwner)) : null, uploader ? React.createElement(React.Fragment, null, React.createElement(FormattedMessage, _extends({\n    tagName: \"dt\"\n  }, messages.uploader)), React.createElement(\"dd\", null, uploader)) : null, createdAt ? React.createElement(React.Fragment, null, React.createElement(FormattedMessage, _extends({\n    tagName: \"dt\"\n  }, messages.created)), React.createElement(\"dd\", null, React.createElement(FormattedDate, _extends({\n    value: new Date(createdAt)\n  }, datetimeOptions)))) : null, modifiedAt ? React.createElement(React.Fragment, null, React.createElement(FormattedMessage, _extends({\n    tagName: \"dt\"\n  }, messages.modified)), React.createElement(\"dd\", null, React.createElement(FormattedDate, _extends({\n    value: new Date(modifiedAt)\n  }, datetimeOptions)))) : null, size ? React.createElement(React.Fragment, null, React.createElement(FormattedMessage, _extends({\n    tagName: \"dt\"\n  }, messages.size)), React.createElement(\"dd\", null, size)) : null, trashedAt ? React.createElement(React.Fragment, null, React.createElement(FormattedMessage, _extends({\n    tagName: \"dt\"\n  }, messages.deleted)), React.createElement(\"dd\", null, React.createElement(FormattedDate, _extends({\n    value: new Date(trashedAt)\n  }, datetimeOptions)))) : null, React.createElement(RetentionPolicy, retentionPolicyProps));\n};\nItemProperties.propTypes = {\n  /** the datetime this item was created, accepts any value that can be passed to the Date() constructor */\n  createdAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** a description for the item */\n  description: PropTypes.string,\n  /** props for the editable description textarea */\n  descriptionTextareaProps: PropTypes.object,\n  /** the name of the item's enterprise owner if the item is owned by a different enterprise */\n  enterpriseOwner: PropTypes.string,\n  /** the datetime this item was last modified, accepts any value that can be passed to the Date() constructor */\n  modifiedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** function called on description textarea blur with the new value to save */\n  onDescriptionChange: PropTypes.func,\n  /** function called on url input blur with the new value to save */\n  onValidURLChange: PropTypes.func,\n  /** the name of the item's owner */\n  owner: PropTypes.string,\n  /** props for the retention policy of this item */\n  retentionPolicyProps: PropTypes.object,\n  /** use the getFileSize util to get a localized human-readable string from the number of bytes */\n  size: PropTypes.string,\n  /** the datetime this item was deleted or moved to trash, accepts any value that can be passed to the Date() constructor */\n  trashedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** the name of the user who uploaded this item */\n  uploader: PropTypes.string,\n  /** the URL for the item when the item is a weblink */\n  url: PropTypes.string\n};\nexport default ItemProperties;","map":{"version":3,"sources":["../../../src/features/item-details/ItemProperties.js"],"names":["React","PropTypes","uniqueid","FormattedDate","FormattedMessage","EditableDescription","EditableURL","RetentionPolicy","ReadonlyDescription","messages","datetimeOptions","year","month","day","hour","minute","ItemProperties","createdAt","description","descriptionTextareaProps","enterpriseOwner","modifiedAt","onDescriptionChange","onValidURLChange","owner","retentionPolicyProps","size","trashedAt","uploader","url","descriptionId","text","created","Date","modified","deleted","propTypes","oneOfType","number","string","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport uniqueid from 'lodash/uniqueId';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport EditableDescription from './EditableDescription';\nimport EditableURL from './EditableURL';\nimport RetentionPolicy from './RetentionPolicy';\nimport ReadonlyDescription from './ReadonlyDescription';\nimport messages from './messages';\n\nimport './ItemProperties.scss';\n\nconst datetimeOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n};\n\nconst ItemProperties = ({\n    createdAt,\n    description,\n    descriptionTextareaProps = {},\n    enterpriseOwner,\n    modifiedAt,\n    onDescriptionChange,\n    onValidURLChange,\n    owner,\n    retentionPolicyProps = {},\n    size,\n    trashedAt,\n    uploader,\n    url,\n}) => {\n    const descriptionId = uniqueid('description_');\n\n    return (\n        <dl className=\"item-properties\">\n            {description || onDescriptionChange ? (\n                <>\n                    <FormattedMessage {...messages.description}>\n                        {text => <dt id={descriptionId}>{text}</dt>}\n                    </FormattedMessage>\n                    <dd>\n                        {onDescriptionChange ? (\n                            <EditableDescription\n                                onDescriptionChange={onDescriptionChange}\n                                textAreaProps={{ ...descriptionTextareaProps, 'aria-labelledby': descriptionId }}\n                                value={description}\n                            />\n                        ) : (\n                            <ReadonlyDescription value={description} />\n                        )}\n                    </dd>\n                </>\n            ) : null}\n            {!!url && (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.url} />\n                    <dd>{onValidURLChange ? <EditableURL onValidURLChange={onValidURLChange} value={url} /> : url}</dd>\n                </>\n            )}\n            {owner ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.owner} />\n                    <dd>{owner}</dd>\n                </>\n            ) : null}\n            {enterpriseOwner ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.enterpriseOwner} />\n                    <dd>{enterpriseOwner}</dd>\n                </>\n            ) : null}\n            {uploader ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.uploader} />\n                    <dd>{uploader}</dd>\n                </>\n            ) : null}\n            {createdAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.created} />\n                    <dd>\n                        <FormattedDate value={new Date(createdAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            {modifiedAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.modified} />\n                    <dd>\n                        <FormattedDate value={new Date(modifiedAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            {size ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.size} />\n                    <dd>{size}</dd>\n                </>\n            ) : null}\n            {trashedAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.deleted} />\n                    <dd>\n                        <FormattedDate value={new Date(trashedAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            <RetentionPolicy {...retentionPolicyProps} />\n        </dl>\n    );\n};\n\nItemProperties.propTypes = {\n    /** the datetime this item was created, accepts any value that can be passed to the Date() constructor */\n    createdAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** a description for the item */\n    description: PropTypes.string,\n    /** props for the editable description textarea */\n    descriptionTextareaProps: PropTypes.object,\n    /** the name of the item's enterprise owner if the item is owned by a different enterprise */\n    enterpriseOwner: PropTypes.string,\n    /** the datetime this item was last modified, accepts any value that can be passed to the Date() constructor */\n    modifiedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** function called on description textarea blur with the new value to save */\n    onDescriptionChange: PropTypes.func,\n    /** function called on url input blur with the new value to save */\n    onValidURLChange: PropTypes.func,\n    /** the name of the item's owner */\n    owner: PropTypes.string,\n    /** props for the retention policy of this item */\n    retentionPolicyProps: PropTypes.object,\n    /** use the getFileSize util to get a localized human-readable string from the number of bytes */\n    size: PropTypes.string,\n    /** the datetime this item was deleted or moved to trash, accepts any value that can be passed to the Date() constructor */\n    trashedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** the name of the user who uploaded this item */\n    uploader: PropTypes.string,\n    /** the URL for the item when the item is a weblink */\n    url: PropTypes.string,\n};\n\nexport default ItemProperties;\n"]},"metadata":{},"sourceType":"module"}