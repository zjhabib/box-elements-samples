{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nvar RadioGroup = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RadioGroup, _React$Component);\n  function RadioGroup(props) {\n    var _this;\n    _classCallCheck(this, RadioGroup);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RadioGroup).call(this, props));\n    _defineProperty(_assertThisInitialized(_this), \"onChangeHandler\", function (event) {\n      var target = event.target;\n      var onChange = _this.props.onChange;\n      if (target instanceof HTMLInputElement) {\n        _this.setState({\n          value: target.value\n        });\n      }\n      if (onChange) {\n        onChange(event);\n      }\n    });\n    _this.state = {\n      value: props.value\n    };\n    return _this;\n  } // @TODO: think about adding componentDidUpdate or gDSFP\n  // to update the internal state value based on new props value\n\n  _createClass(RadioGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        name = _this$props.name;\n      var stateValue = this.state.value;\n      return React.createElement(\"div\", {\n        className: \"radio-group \".concat(className),\n        onChange: this.onChangeHandler\n      }, React.Children.map(children, function (radio) {\n        var value = radio.props.value;\n        return React.cloneElement(radio, {\n          name: name,\n          isSelected: value === stateValue\n        });\n      }));\n    }\n  }]);\n  return RadioGroup;\n}(React.Component);\n_defineProperty(RadioGroup, \"defaultProps\", {\n  className: ''\n});\nexport default RadioGroup;","map":{"version":3,"sources":["../../../src/components/radio/RadioGroup.tsx"],"names":["React","RadioGroup","Component","className","props","state","value","event","target","onChange","HTMLInputElement","setState","children","name","stateValue","onChangeHandler","Children","map","radio","cloneElement","isSelected"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;IAcMC,U;;;EAKF,SAAA,UAAA,CAAYG,KAAZ,EAAoC;IAAA,IAAA,KAAA;IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,CAAA;IAChC,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,UAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAN,CAAA,CAAA;IADgC,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,iBAAA,EASlB,UAACG,KAAD,EAA8C;MAAA,IACpDC,MADoD,GACzCD,KADyC,CACpDC,MADoD;MAAA,IAEpDC,QAFoD,GAEvC,KAAA,CAAKL,KAFkC,CAEpDK,QAFoD;MAI5D,IAAID,MAAM,YAAYE,gBAAtB,EAAwC;QACpC,KAAA,CAAKC,QAAL,CAAc;UACVL,KAAK,EAAEE,MAAM,CAACF;QADJ,CAAd,CAAA;MAGH;MAED,IAAIG,QAAJ,EAAc;QACVA,QAAQ,CAACF,KAAD,CAARE;MACH;IACJ,CAtBmC,CAAA;IAEhC,KAAA,CAAKJ,KAAL,GAAa;MACTC,KAAK,EAAEF,KAAK,CAACE;IADJ,CAAb;IAFgC,OAAA,KAAA;EAKnC,C,CAED;EACA;;;;6BAgBS;MAAA,IAAA,WAAA,GACiC,IAAA,CAAKF,KADtC;QACGQ,QADH,GAAA,WAAA,CACGA,QADH;QACaT,SADb,GAAA,WAAA,CACaA,SADb;QACwBU,IADxB,GAAA,WAAA,CACwBA,IADxB;MAAA,IAEUC,UAFV,GAEyB,IAAA,CAAKT,KAF9B,CAEGC,KAFH;MAIL,OACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;QAAK,SAAS,EAAA,cAAA,CAAA,MAAA,CAAiBH,SAAjB,CAAd;QAA4C,QAAQ,EAAE,IAAA,CAAKY;MAA3D,CAAA,EACK,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmBL,QAAnB,EAA6B,UAACM,KAAD,EAA+B;QAAA,IACjDZ,KADiD,GACvCY,KAAK,CAACd,KADiC,CACjDE,KADiD;QAGzD,OAAO,KAAK,CAACa,YAAN,CAAmBD,KAAnB,EAA0B;UAC7BL,IAAI,EAAJA,IAD6B;UAE7BO,UAAU,EAAEd,KAAK,KAAKQ;QAFO,CAA1B,CAAP;MAIH,CAPA,CADL,CADJ;IAYH;;;EA7CoBd,KAAK,CAACE,S;gBAAzBD,U,kBACoB;EAClBE,SAAS,EAAE;AADO,C;AA+C1B,eAAeF,UAAf","sourcesContent":["import * as React from 'react';\n\nexport interface RadioGroupProps {\n    children: Array<React.ReactElement> | React.ReactElement;\n    className: string;\n    name?: string;\n    onChange?: Function;\n    value?: string;\n}\n\nexport interface RadioGroupState {\n    value?: string;\n}\n\nclass RadioGroup extends React.Component<RadioGroupProps, RadioGroupState> {\n    static defaultProps = {\n        className: '',\n    };\n\n    constructor(props: RadioGroupProps) {\n        super(props);\n        this.state = {\n            value: props.value,\n        };\n    }\n\n    // @TODO: think about adding componentDidUpdate or gDSFP\n    // to update the internal state value based on new props value\n    onChangeHandler = (event: React.SyntheticEvent<HTMLElement>) => {\n        const { target } = event;\n        const { onChange } = this.props;\n\n        if (target instanceof HTMLInputElement) {\n            this.setState({\n                value: target.value,\n            });\n        }\n\n        if (onChange) {\n            onChange(event);\n        }\n    };\n\n    render() {\n        const { children, className, name } = this.props;\n        const { value: stateValue } = this.state;\n\n        return (\n            <div className={`radio-group ${className}`} onChange={this.onChangeHandler}>\n                {React.Children.map(children, (radio: React.ReactElement) => {\n                    const { value } = radio.props;\n\n                    return React.cloneElement(radio, {\n                        name,\n                        isSelected: value === stateValue,\n                    });\n                })}\n            </div>\n        );\n    }\n}\n\nexport default RadioGroup;\n"]},"metadata":{},"sourceType":"module"}