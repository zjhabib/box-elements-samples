{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\n/**\n * \n * @file Versions Sidebar component\n * @author Box\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport InlineError from '../../../components/inline-error';\nimport messages from './messages';\nimport SidebarContent from '../SidebarContent';\nimport VersionsMenu from './VersionsMenu';\nimport { BackButton } from '../../common/nav-button';\nimport { DEFAULT_FETCH_END } from '../../../constants';\nimport { LoadingIndicatorWrapper } from '../../../components/loading-indicator';\nimport './VersionsSidebar.scss';\nvar MAX_VERSIONS = DEFAULT_FETCH_END;\nvar VersionsSidebar = function VersionsSidebar(_ref) {\n  var error = _ref.error,\n    isLoading = _ref.isLoading,\n    parentName = _ref.parentName,\n    versions = _ref.versions,\n    rest = _objectWithoutProperties(_ref, [\"error\", \"isLoading\", \"parentName\", \"versions\"]);\n  var showLimit = versions.length >= MAX_VERSIONS;\n  var showVersions = !!versions.length;\n  var showEmpty = !isLoading && !showVersions;\n  var showError = !!error;\n  return React.createElement(SidebarContent, {\n    className: \"bcs-Versions\",\n    \"data-resin-component\": \"preview\",\n    \"data-resin-feature\": \"versions\",\n    title: React.createElement(React.Fragment, null, React.createElement(BackButton, {\n      \"data-resin-target\": \"back\",\n      to: \"/\".concat(parentName)\n    }), React.createElement(FormattedMessage, messages.versionsTitle))\n  }, React.createElement(LoadingIndicatorWrapper, {\n    className: \"bcs-Versions-content\",\n    crawlerPosition: \"top\",\n    isLoading: isLoading\n  }, showError && React.createElement(InlineError, {\n    title: React.createElement(FormattedMessage, messages.versionServerError)\n  }, React.createElement(FormattedMessage, error)), showEmpty && React.createElement(\"div\", {\n    className: \"bcs-Versions-empty\"\n  }, React.createElement(FormattedMessage, messages.versionsEmpty)), showVersions && React.createElement(\"div\", {\n    className: \"bcs-Versions-menu\"\n  }, React.createElement(VersionsMenu, _extends({\n    versions: versions\n  }, rest))), showLimit && React.createElement(\"div\", {\n    className: \"bcs-Versions-maxEntries\",\n    \"data-testid\": \"max-versions\"\n  }, React.createElement(FormattedMessage, _extends({}, messages.versionMaxEntries, {\n    values: {\n      maxVersions: MAX_VERSIONS\n    }\n  })))));\n};\nexport default VersionsSidebar;","map":{"version":3,"sources":["../../../../src/elements/content-sidebar/versions/VersionsSidebar.js"],"names":["React","FormattedMessage","InlineError","messages","SidebarContent","VersionsMenu","BackButton","DEFAULT_FETCH_END","LoadingIndicatorWrapper","MAX_VERSIONS","VersionsSidebar","error","isLoading","parentName","versions","rest","showLimit","length","showVersions","showEmpty","showError","versionsTitle","versionServerError","versionsEmpty","versionMaxEntries","maxVersions"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Versions Sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport type { MessageDescriptor } from 'react-intl';\nimport InlineError from '../../../components/inline-error';\nimport messages from './messages';\nimport SidebarContent from '../SidebarContent';\nimport VersionsMenu from './VersionsMenu';\nimport { BackButton } from '../../common/nav-button';\nimport { DEFAULT_FETCH_END } from '../../../constants';\nimport { LoadingIndicatorWrapper } from '../../../components/loading-indicator';\nimport type { BoxItemVersion } from '../../../common/types/core';\nimport './VersionsSidebar.scss';\n\nconst MAX_VERSIONS = DEFAULT_FETCH_END;\n\ntype Props = {\n    error?: MessageDescriptor,\n    fileId: string,\n    isLoading: boolean,\n    parentName: string,\n    versionCount: number,\n    versionLimit: number,\n    versions: Array<BoxItemVersion>,\n};\n\nconst VersionsSidebar = ({ error, isLoading, parentName, versions, ...rest }: Props) => {\n    const showLimit = versions.length >= MAX_VERSIONS;\n    const showVersions = !!versions.length;\n    const showEmpty = !isLoading && !showVersions;\n    const showError = !!error;\n\n    return (\n        <SidebarContent\n            className=\"bcs-Versions\"\n            data-resin-component=\"preview\"\n            data-resin-feature=\"versions\"\n            title={\n                <>\n                    <BackButton data-resin-target=\"back\" to={`/${parentName}`} />\n                    <FormattedMessage {...messages.versionsTitle} />\n                </>\n            }\n        >\n            <LoadingIndicatorWrapper className=\"bcs-Versions-content\" crawlerPosition=\"top\" isLoading={isLoading}>\n                {showError && (\n                    <InlineError title={<FormattedMessage {...messages.versionServerError} />}>\n                        <FormattedMessage {...error} />\n                    </InlineError>\n                )}\n\n                {showEmpty && (\n                    <div className=\"bcs-Versions-empty\">\n                        <FormattedMessage {...messages.versionsEmpty} />\n                    </div>\n                )}\n\n                {showVersions && (\n                    <div className=\"bcs-Versions-menu\">\n                        <VersionsMenu versions={versions} {...rest} />\n                    </div>\n                )}\n                {showLimit && (\n                    <div className=\"bcs-Versions-maxEntries\" data-testid=\"max-versions\">\n                        <FormattedMessage\n                            {...messages.versionMaxEntries}\n                            values={{\n                                maxVersions: MAX_VERSIONS,\n                            }}\n                        />\n                    </div>\n                )}\n            </LoadingIndicatorWrapper>\n        </SidebarContent>\n    );\n};\n\nexport default VersionsSidebar;\n"]},"metadata":{},"sourceType":"module"}