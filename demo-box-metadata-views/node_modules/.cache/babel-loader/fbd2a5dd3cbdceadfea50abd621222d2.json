{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Versions sidebar component\n * @author Box\n */\nimport React from 'react';\nimport isFinite from 'lodash/isFinite';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport AccessStats from '../../features/access-stats/AccessStats';\nimport messages from '../common/messages';\nimport { INTERACTION_TARGET, SECTION_TARGETS, DETAILS_TARGETS } from '../common/interactionTargets';\nimport { isBoxNote } from '../../utils/file';\nimport SidebarSection from './SidebarSection';\nimport withErrorHandling from './withErrorHandling';\nvar SidebarAccessStats = function SidebarAccessStats(_ref) {\n  var onAccessStatsClick = _ref.onAccessStatsClick,\n    _ref$accessStats = _ref.accessStats,\n    accessStats = _ref$accessStats === void 0 ? {\n      comment_count: undefined,\n      download_count: undefined,\n      edit_count: undefined,\n      has_count_overflowed: false,\n      preview_count: undefined\n    } : _ref$accessStats,\n    file = _ref.file,\n    error = _ref.error,\n    intl = _ref.intl;\n  var preview_count = accessStats.preview_count,\n    comment_count = accessStats.comment_count,\n    download_count = accessStats.download_count,\n    edit_count = accessStats.edit_count;\n  if (!isFinite(preview_count) && !isFinite(comment_count) && !isFinite(download_count) && !isFinite(edit_count) && !error) {\n    return null;\n  }\n  var errorMessage = error ? intl.formatMessage(error) : undefined;\n  return React.createElement(SidebarSection, {\n    interactionTarget: SECTION_TARGETS.ACCESS_STATS,\n    title: React.createElement(FormattedMessage, messages.sidebarAccessStats)\n  }, React.createElement(AccessStats, {\n    errorMessage: errorMessage,\n    commentCount: comment_count,\n    commentStatButtonProps: _defineProperty({}, INTERACTION_TARGET, DETAILS_TARGETS.ACCESS_STATS.COMMENTS),\n    downloadCount: download_count,\n    downloadStatButtonProps: _defineProperty({}, INTERACTION_TARGET, DETAILS_TARGETS.ACCESS_STATS.DOWNLOADS),\n    previewCount: preview_count,\n    previewStatButtonProps: _defineProperty({}, INTERACTION_TARGET, DETAILS_TARGETS.ACCESS_STATS.PREVIEWS),\n    viewStatButtonProps: _defineProperty({}, INTERACTION_TARGET, DETAILS_TARGETS.ACCESS_STATS.VIEWS),\n    editCount: edit_count,\n    editStatButtonProps: _defineProperty({}, INTERACTION_TARGET, DETAILS_TARGETS.ACCESS_STATS.EDITS),\n    openAccessStatsModal: onAccessStatsClick,\n    isBoxNote: isBoxNote(file),\n    viewMoreButtonProps: _defineProperty({}, INTERACTION_TARGET, DETAILS_TARGETS.ACCESS_STATS.VIEW_DETAILS)\n  }));\n};\nexport { SidebarAccessStats as SidebarAccessStatsComponent };\nexport default withErrorHandling(injectIntl(SidebarAccessStats));","map":{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarAccessStats.js"],"names":["React","isFinite","injectIntl","FormattedMessage","AccessStats","messages","INTERACTION_TARGET","SECTION_TARGETS","DETAILS_TARGETS","isBoxNote","SidebarSection","withErrorHandling","SidebarAccessStats","onAccessStatsClick","accessStats","comment_count","undefined","download_count","edit_count","has_count_overflowed","preview_count","file","error","intl","errorMessage","formatMessage","ACCESS_STATS","sidebarAccessStats","COMMENTS","DOWNLOADS","PREVIEWS","VIEWS","EDITS","VIEW_DETAILS","SidebarAccessStatsComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Versions sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport isFinite from 'lodash/isFinite';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { MessageDescriptor, InjectIntlProvidedProps } from 'react-intl';\nimport AccessStats from '../../features/access-stats/AccessStats';\nimport messages from '../common/messages';\nimport { INTERACTION_TARGET, SECTION_TARGETS, DETAILS_TARGETS } from '../common/interactionTargets';\nimport { isBoxNote } from '../../utils/file';\nimport SidebarSection from './SidebarSection';\nimport withErrorHandling from './withErrorHandling';\nimport type { FileAccessStats } from './flowTypes';\nimport type { BoxItem } from '../../common/types/core';\n\ntype Props = {\n    accessStats?: FileAccessStats,\n    error?: MessageDescriptor,\n    file: BoxItem,\n    onAccessStatsClick?: Function,\n} & InjectIntlProvidedProps;\n\nconst SidebarAccessStats = ({\n    onAccessStatsClick,\n    accessStats = {\n        comment_count: undefined,\n        download_count: undefined,\n        edit_count: undefined,\n        has_count_overflowed: false,\n        preview_count: undefined,\n    },\n    file,\n    error,\n    intl,\n}: Props) => {\n    const { preview_count, comment_count, download_count, edit_count } = accessStats;\n\n    if (\n        !isFinite(preview_count) &&\n        !isFinite(comment_count) &&\n        !isFinite(download_count) &&\n        !isFinite(edit_count) &&\n        !error\n    ) {\n        return null;\n    }\n\n    const errorMessage = error ? intl.formatMessage(error) : undefined;\n    return (\n        <SidebarSection\n            interactionTarget={SECTION_TARGETS.ACCESS_STATS}\n            title={<FormattedMessage {...messages.sidebarAccessStats} />}\n        >\n            <AccessStats\n                errorMessage={errorMessage}\n                commentCount={comment_count}\n                commentStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.COMMENTS,\n                }}\n                downloadCount={download_count}\n                downloadStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.DOWNLOADS,\n                }}\n                previewCount={preview_count}\n                previewStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.PREVIEWS,\n                }}\n                viewStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.VIEWS,\n                }}\n                editCount={edit_count}\n                editStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.EDITS,\n                }}\n                openAccessStatsModal={onAccessStatsClick}\n                isBoxNote={isBoxNote(file)}\n                viewMoreButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.VIEW_DETAILS,\n                }}\n            />\n        </SidebarSection>\n    );\n};\n\nexport { SidebarAccessStats as SidebarAccessStatsComponent };\nexport default withErrorHandling(injectIntl(SidebarAccessStats));\n"]},"metadata":{},"sourceType":"module"}