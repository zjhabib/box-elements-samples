{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport classNames from 'classnames';\nimport X from '../../icon/fill/X16'; // $FlowFixMe this imports from a typescript file\n\nimport LabelPill from '../label-pill';\nimport Avatar from '../avatar';\nimport './RoundPill.scss';\nvar RemoveButton = function RemoveButton(_ref) {\n  var onClick = _ref.onClick,\n    rest = _objectWithoutProperties(_ref, [\"onClick\"]);\n  return React.createElement(X, _extends({}, rest, {\n    \"aria-hidden\": \"true\",\n    onClick: onClick\n  }));\n};\nvar RoundPill = function RoundPill(_ref2) {\n  var getPillImageUrl = _ref2.getPillImageUrl,\n    _ref2$isDisabled = _ref2.isDisabled,\n    isDisabled = _ref2$isDisabled === void 0 ? false : _ref2$isDisabled,\n    _ref2$isSelected = _ref2.isSelected,\n    isSelected = _ref2$isSelected === void 0 ? false : _ref2$isSelected,\n    _ref2$hasWarning = _ref2.hasWarning,\n    hasWarning = _ref2$hasWarning === void 0 ? false : _ref2$hasWarning,\n    isExternal = _ref2.isExternal,\n    _ref2$isValid = _ref2.isValid,\n    isValid = _ref2$isValid === void 0 ? true : _ref2$isValid,\n    onRemove = _ref2.onRemove,\n    text = _ref2.text,\n    className = _ref2.className,\n    _ref2$showAvatar = _ref2.showAvatar,\n    showAvatar = _ref2$showAvatar === void 0 ? false : _ref2$showAvatar,\n    id = _ref2.id;\n  var styles = classNames('bdl-RoundPill', className, {\n    'bdl-RoundPill--selected': isSelected && !isDisabled,\n    'bdl-RoundPill--disabled': isDisabled,\n    'bdl-RoundPill--warning': hasWarning,\n    'bdl-RoundPill--error': !isValid\n  });\n  var pillType;\n  if (hasWarning) {\n    pillType = 'warning';\n  }\n  if (!isValid) {\n    pillType = 'error';\n  }\n  var handleClickRemove = isDisabled ? noop : onRemove;\n  var avatar = showAvatar ? React.createElement(LabelPill.Icon, {\n    Component: Avatar,\n    avatarUrl: getPillImageUrl && id ? getPillImageUrl({\n      id: id\n    }) : undefined,\n    id: id,\n    isExternal: isExternal,\n    name: text,\n    size: \"small\",\n    shouldShowExternal: true\n  }) : null;\n  return React.createElement(LabelPill.Pill, {\n    size: \"large\",\n    className: styles,\n    type: pillType\n  }, avatar, React.createElement(LabelPill.Text, {\n    className: \"bdl-RoundPill-text\"\n  }, text), React.createElement(LabelPill.Icon, {\n    className: \"bdl-RoundPill-closeBtn\",\n    Component: RemoveButton,\n    onClick: handleClickRemove\n  }));\n};\nexport default RoundPill;","map":{"version":3,"sources":["../../../src/components/pill-selector-dropdown/RoundPill.js"],"names":["React","noop","classNames","X","LabelPill","Avatar","RemoveButton","onClick","rest","RoundPill","getPillImageUrl","isDisabled","isSelected","hasWarning","isExternal","isValid","onRemove","text","className","showAvatar","id","styles","pillType","handleClickRemove","avatar","undefined"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport classNames from 'classnames';\nimport X from '../../icon/fill/X16';\n// $FlowFixMe this imports from a typescript file\nimport LabelPill from '../label-pill';\nimport Avatar from '../avatar';\n\nimport './RoundPill.scss';\n\ntype Props = {\n    className?: string,\n    /** Function to retrieve the image URL associated with a pill */\n    getPillImageUrl?: (data: { id: string | number, [key: string]: any }) => string,\n    hasWarning?: boolean,\n    id?: string | number,\n    isDisabled?: boolean,\n    isExternal?: boolean,\n    isSelected?: boolean,\n    isValid?: boolean,\n    onRemove: () => any,\n    showAvatar?: boolean,\n    text: string,\n};\n\nconst RemoveButton = ({ onClick, ...rest }: { onClick: () => any }) => (\n    <X {...rest} aria-hidden=\"true\" onClick={onClick} />\n);\n\nconst RoundPill = ({\n    getPillImageUrl,\n    isDisabled = false,\n    isSelected = false,\n    hasWarning = false,\n    isExternal,\n    isValid = true,\n    onRemove,\n    text,\n    className,\n    showAvatar = false,\n    id,\n}: Props) => {\n    const styles = classNames('bdl-RoundPill', className, {\n        'bdl-RoundPill--selected': isSelected && !isDisabled,\n        'bdl-RoundPill--disabled': isDisabled,\n        'bdl-RoundPill--warning': hasWarning,\n        'bdl-RoundPill--error': !isValid,\n    });\n\n    let pillType;\n\n    if (hasWarning) {\n        pillType = 'warning';\n    }\n\n    if (!isValid) {\n        pillType = 'error';\n    }\n\n    const handleClickRemove = isDisabled ? noop : onRemove;\n\n    const avatar = showAvatar ? (\n        <LabelPill.Icon\n            Component={Avatar}\n            avatarUrl={getPillImageUrl && id ? getPillImageUrl({ id }) : undefined}\n            id={id}\n            isExternal={isExternal}\n            name={text}\n            size=\"small\"\n            shouldShowExternal\n        />\n    ) : null;\n\n    return (\n        <LabelPill.Pill size=\"large\" className={styles} type={pillType}>\n            {avatar}\n            <LabelPill.Text className=\"bdl-RoundPill-text\">{text}</LabelPill.Text>\n            <LabelPill.Icon className=\"bdl-RoundPill-closeBtn\" Component={RemoveButton} onClick={handleClickRemove} />\n        </LabelPill.Pill>\n    );\n};\n\nexport default RoundPill;\n"]},"metadata":{},"sourceType":"module"}