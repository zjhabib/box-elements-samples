{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * \n * @file Content Explorer Preview dialog\n * @author Box\n */\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { injectIntl } from 'react-intl';\nimport cloneDeep from 'lodash/cloneDeep';\nimport messages from '../common/messages';\nimport ContentPreview from '../content-preview';\nimport { TYPE_FILE, CLASS_MODAL_CONTENT_FULL_BLEED, CLASS_MODAL_OVERLAY, CLASS_MODAL } from '../../constants';\nvar PreviewDialog = function PreviewDialog(_ref) {\n  var item = _ref.item,\n    isOpen = _ref.isOpen,\n    parentElement = _ref.parentElement,\n    appElement = _ref.appElement,\n    token = _ref.token,\n    cache = _ref.cache,\n    currentCollection = _ref.currentCollection,\n    canDownload = _ref.canDownload,\n    onCancel = _ref.onCancel,\n    onPreview = _ref.onPreview,\n    onDownload = _ref.onDownload,\n    apiHost = _ref.apiHost,\n    appHost = _ref.appHost,\n    staticHost = _ref.staticHost,\n    staticPath = _ref.staticPath,\n    previewLibraryVersion = _ref.previewLibraryVersion,\n    sharedLink = _ref.sharedLink,\n    sharedLinkPassword = _ref.sharedLinkPassword,\n    contentPreviewProps = _ref.contentPreviewProps,\n    requestInterceptor = _ref.requestInterceptor,\n    responseInterceptor = _ref.responseInterceptor,\n    intl = _ref.intl;\n  var items = currentCollection.items;\n  var onLoad = function onLoad(data) {\n    onPreview(cloneDeep(data));\n  };\n  if (!item || !items) {\n    return null;\n  }\n  var files = items.filter(function (_ref2) {\n    var type = _ref2.type;\n    return type === TYPE_FILE;\n  });\n  return React.createElement(Modal, {\n    isOpen: isOpen,\n    parentSelector: function parentSelector() {\n      return parentElement;\n    },\n    portalClassName: \"\".concat(CLASS_MODAL, \" be-modal-preview\"),\n    className: CLASS_MODAL_CONTENT_FULL_BLEED,\n    overlayClassName: CLASS_MODAL_OVERLAY,\n    contentLabel: intl.formatMessage(messages.preview),\n    onRequestClose: onCancel,\n    appElement: appElement\n  }, React.createElement(ContentPreview, _extends({}, contentPreviewProps, {\n    fileId: item.id,\n    apiHost: apiHost,\n    appHost: appHost,\n    staticHost: staticHost,\n    staticPath: staticPath,\n    previewLibraryVersion: previewLibraryVersion,\n    cache: cache,\n    token: token,\n    hasHeader: true,\n    autoFocus: true,\n    collection: files,\n    onLoad: onLoad,\n    onClose: onCancel,\n    onDownload: onDownload,\n    canDownload: canDownload,\n    sharedLink: sharedLink,\n    sharedLinkPassword: sharedLinkPassword,\n    contentPreviewProps: contentPreviewProps,\n    requestInterceptor: requestInterceptor,\n    responseInterceptor: responseInterceptor\n  })));\n};\nexport default injectIntl(PreviewDialog);","map":{"version":3,"sources":["../../../src/elements/content-explorer/PreviewDialog.js"],"names":["React","Modal","injectIntl","cloneDeep","messages","ContentPreview","TYPE_FILE","CLASS_MODAL_CONTENT_FULL_BLEED","CLASS_MODAL_OVERLAY","CLASS_MODAL","PreviewDialog","item","isOpen","parentElement","appElement","token","cache","currentCollection","canDownload","onCancel","onPreview","onDownload","apiHost","appHost","staticHost","staticPath","previewLibraryVersion","sharedLink","sharedLinkPassword","contentPreviewProps","requestInterceptor","responseInterceptor","intl","items","onLoad","data","files","filter","type","formatMessage","preview","id"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,SAAT,EAAoBC,8BAApB,EAAoDC,mBAApD,EAAyEC,WAAzE,QAA4F,iBAA5F;AA6BA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAuBT;EAAA,IAtBTC,IAsBS,GAAA,IAAA,CAtBTA,IAsBS;IArBTC,MAqBS,GAAA,IAAA,CArBTA,MAqBS;IApBTC,aAoBS,GAAA,IAAA,CApBTA,aAoBS;IAnBTC,UAmBS,GAAA,IAAA,CAnBTA,UAmBS;IAlBTC,KAkBS,GAAA,IAAA,CAlBTA,KAkBS;IAjBTC,KAiBS,GAAA,IAAA,CAjBTA,KAiBS;IAhBTC,iBAgBS,GAAA,IAAA,CAhBTA,iBAgBS;IAfTC,WAeS,GAAA,IAAA,CAfTA,WAeS;IAdTC,QAcS,GAAA,IAAA,CAdTA,QAcS;IAbTC,SAaS,GAAA,IAAA,CAbTA,SAaS;IAZTC,UAYS,GAAA,IAAA,CAZTA,UAYS;IAXTC,OAWS,GAAA,IAAA,CAXTA,OAWS;IAVTC,OAUS,GAAA,IAAA,CAVTA,OAUS;IATTC,UASS,GAAA,IAAA,CATTA,UASS;IARTC,UAQS,GAAA,IAAA,CARTA,UAQS;IAPTC,qBAOS,GAAA,IAAA,CAPTA,qBAOS;IANTC,UAMS,GAAA,IAAA,CANTA,UAMS;IALTC,kBAKS,GAAA,IAAA,CALTA,kBAKS;IAJTC,mBAIS,GAAA,IAAA,CAJTA,mBAIS;IAHTC,kBAGS,GAAA,IAAA,CAHTA,kBAGS;IAFTC,mBAES,GAAA,IAAA,CAFTA,mBAES;IADTC,IACS,GAAA,IAAA,CADTA,IACS;EAAA,IACDC,KADC,GACqBhB,iBADrB,CACDgB,KADC;EAET,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAqB;IAChCf,SAAS,CAACjB,SAAS,CAACgC,IAAD,CAAV,CAATf;EACH,CAFD;EAIA,IAAI,CAACT,IAAD,IAAS,CAACsB,KAAd,EAAqB;IACjB,OAAO,IAAP;EACH;EAED,IAAMG,KAAgB,GAAG,KAAK,CAACC,MAAN,CAAa,UAAA,KAAA,EAAA;IAAA,IAAGC,IAAH,GAAA,KAAA,CAAGA,IAAH;IAAA,OAAcA,IAAI,KAAKhC,SAAvB;EAAA,CAAb,CAAzB;EACA,OACI,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA;IACI,MAAM,EAAEM,MADZ;IAEI,cAAc,EAAE,SAAA,cAAA,CAAA,EAAA;MAAA,OAAMC,aAAN;IAAA,CAFpB;IAGI,eAAe,EAAA,EAAA,CAAA,MAAA,CAAKJ,WAAL,EAAA,mBAAA,CAHnB;IAII,SAAS,EAAEF,8BAJf;IAKI,gBAAgB,EAAEC,mBALtB;IAMI,YAAY,EAAEwB,IAAI,CAACO,aAALP,CAAmB5B,QAAQ,CAACoC,OAA5BR,CANlB;IAOI,cAAc,EAAEb,QAPpB;IAQI,UAAU,EAAEL;EARhB,CAAA,EAUI,KAAA,CAAA,aAAA,CAAC,cAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACQe,mBADR,EAAA;IAEI,MAAM,EAAElB,IAAI,CAAC8B,EAFjB;IAGI,OAAO,EAAEnB,OAHb;IAII,OAAO,EAAEC,OAJb;IAKI,UAAU,EAAEC,UALhB;IAMI,UAAU,EAAEC,UANhB;IAOI,qBAAqB,EAAEC,qBAP3B;IAQI,KAAK,EAAEV,KARX;IASI,KAAK,EAAED,KATX;IAUI,SAAS,EAAA,IAVb;IAWI,SAAS,EAAA,IAXb;IAYI,UAAU,EAAEqB,KAZhB;IAaI,MAAM,EAAEF,MAbZ;IAcI,OAAO,EAAEf,QAdb;IAeI,UAAU,EAAEE,UAfhB;IAgBI,WAAW,EAAEH,WAhBjB;IAiBI,UAAU,EAAES,UAjBhB;IAkBI,kBAAkB,EAAEC,kBAlBxB;IAmBI,mBAAmB,EAAEC,mBAnBzB;IAoBI,kBAAkB,EAAEC,kBApBxB;IAqBI,mBAAmB,EAAEC;EArBzB,CAAA,CAAA,CAVJ,CADJ;AAoCH,CAtED;AAwEA,eAAe7B,UAAU,CAACQ,aAAD,CAAzB","sourcesContent":["/**\n * @flow\n * @file Content Explorer Preview dialog\n * @author Box\n */\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport cloneDeep from 'lodash/cloneDeep';\nimport messages from '../common/messages';\nimport ContentPreview from '../content-preview';\nimport { TYPE_FILE, CLASS_MODAL_CONTENT_FULL_BLEED, CLASS_MODAL_OVERLAY, CLASS_MODAL } from '../../constants';\nimport type { Token, BoxItem, Collection } from '../../common/types/core';\nimport type APICache from '../../utils/Cache';\n\ntype Props = {\n    apiHost: string,\n    appElement: HTMLElement,\n    appHost: string,\n    cache: APICache,\n    canDownload: boolean,\n    contentPreviewProps: ContentPreviewProps,\n    currentCollection: Collection,\n    isOpen: boolean,\n    isTouch: boolean,\n    item: BoxItem,\n    onCancel: Function,\n    onDownload: Function,\n    onPreview: Function,\n    parentElement: HTMLElement,\n    previewLibraryVersion: string,\n    requestInterceptor?: Function,\n    responseInterceptor?: Function,\n    sharedLink?: string,\n    sharedLinkPassword?: string,\n    staticHost: string,\n    staticPath: string,\n    token: Token,\n} & InjectIntlProvidedProps;\n\nconst PreviewDialog = ({\n    item,\n    isOpen,\n    parentElement,\n    appElement,\n    token,\n    cache,\n    currentCollection,\n    canDownload,\n    onCancel,\n    onPreview,\n    onDownload,\n    apiHost,\n    appHost,\n    staticHost,\n    staticPath,\n    previewLibraryVersion,\n    sharedLink,\n    sharedLinkPassword,\n    contentPreviewProps,\n    requestInterceptor,\n    responseInterceptor,\n    intl,\n}: Props) => {\n    const { items }: Collection = currentCollection;\n    const onLoad = (data: any): void => {\n        onPreview(cloneDeep(data));\n    };\n\n    if (!item || !items) {\n        return null;\n    }\n\n    const files: BoxItem[] = items.filter(({ type }) => type === TYPE_FILE);\n    return (\n        <Modal\n            isOpen={isOpen}\n            parentSelector={() => parentElement}\n            portalClassName={`${CLASS_MODAL} be-modal-preview`}\n            className={CLASS_MODAL_CONTENT_FULL_BLEED}\n            overlayClassName={CLASS_MODAL_OVERLAY}\n            contentLabel={intl.formatMessage(messages.preview)}\n            onRequestClose={onCancel}\n            appElement={appElement}\n        >\n            <ContentPreview\n                {...contentPreviewProps}\n                fileId={item.id}\n                apiHost={apiHost}\n                appHost={appHost}\n                staticHost={staticHost}\n                staticPath={staticPath}\n                previewLibraryVersion={previewLibraryVersion}\n                cache={cache}\n                token={token}\n                hasHeader\n                autoFocus\n                collection={files}\n                onLoad={onLoad}\n                onClose={onCancel}\n                onDownload={onDownload}\n                canDownload={canDownload}\n                sharedLink={sharedLink}\n                sharedLinkPassword={sharedLinkPassword}\n                contentPreviewProps={contentPreviewProps}\n                requestInterceptor={requestInterceptor}\n                responseInterceptor={responseInterceptor}\n            />\n        </Modal>\n    );\n};\n\nexport default injectIntl(PreviewDialog);\n"]},"metadata":{},"sourceType":"module"}