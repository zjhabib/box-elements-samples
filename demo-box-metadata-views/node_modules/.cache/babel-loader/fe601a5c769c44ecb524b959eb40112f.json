{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * \n * @file Component for the sub details for the item name\n * @author Box\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport getSize from '../../../utils/size';\nimport Datefield from '../date';\nimport messages from '../messages';\nimport { VIEW_RECENTS } from '../../../constants';\nimport './ItemSubDetails.scss';\nvar ItemSubDetails = function ItemSubDetails(_ref) {\n  var item = _ref.item,\n    view = _ref.view;\n  var _item$modified_at = item.modified_at,\n    modified_at = _item$modified_at === void 0 ? '' : _item$modified_at,\n    _item$interacted_at = item.interacted_at,\n    interacted_at = _item$interacted_at === void 0 ? '' : _item$interacted_at,\n    modified_by = item.modified_by;\n  var modifiedBy = modified_by ? modified_by.name || '' : '';\n  var isRecents = view === VIEW_RECENTS;\n  var date = isRecents ? interacted_at || modified_at : modified_at;\n  var size = item.size;\n  var DateValue = React.createElement(Datefield, {\n    date: date,\n    omitCommas: true\n  });\n  var message = messages.modifiedDateBy;\n  if (isRecents) {\n    message = messages.interactedDate;\n  } else if (!modifiedBy) {\n    message = messages.modifiedDate;\n  }\n  return React.createElement(\"span\", null, React.createElement(\"span\", {\n    className: \"bdl-ItemSubDetails-modifiedBy\"\n  }, React.createElement(FormattedMessage, _extends({}, message, {\n    values: {\n      date: DateValue,\n      name: modifiedBy\n    }\n  }))), React.createElement(\"span\", {\n    className: \"bdl-ItemSubDetails-size\"\n  }, getSize(size)));\n};\nexport default ItemSubDetails;","map":{"version":3,"sources":["../../../../src/elements/common/item/ItemSubDetails.js"],"names":["React","FormattedMessage","getSize","Datefield","messages","VIEW_RECENTS","ItemSubDetails","item","view","modified_at","interacted_at","modified_by","modifiedBy","name","isRecents","date","size","DateValue","message","modifiedDateBy","interactedDate","modifiedDate"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAO,uBAAP;AAOA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAA2B;EAAA,IAAxBC,IAAwB,GAAA,IAAA,CAAxBA,IAAwB;IAAlBC,IAAkB,GAAA,IAAA,CAAlBA,IAAkB;EAAA,IAAA,iBAAA,GACyBD,IADzB,CACtCE,WADsC;IACtCA,WADsC,GAAA,iBAAA,KAAA,KAAA,CAAA,GACxB,EADwB,GAAA,iBAAA;IAAA,mBAAA,GACyBF,IADzB,CACpBG,aADoB;IACpBA,aADoB,GAAA,mBAAA,KAAA,KAAA,CAAA,GACJ,EADI,GAAA,mBAAA;IACAC,WADA,GACyBJ,IADzB,CACAI,WADA;EAE9C,IAAMC,UAAkB,GAAGD,WAAW,GAAGA,WAAW,CAACE,IAAZF,IAAoB,EAAvB,GAA4B,EAAlE;EACA,IAAMG,SAAkB,GAAGN,IAAI,KAAKH,YAApC;EACA,IAAMU,IAAY,GAAGD,SAAS,GAAGJ,aAAa,IAAID,WAApB,GAAkCA,WAAhE;EAJ8C,IAKtCO,IALsC,GAKpBT,IALoB,CAKtCS,IALsC;EAM9C,IAAMC,SAAS,GAAG,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA;IAAW,IAAI,EAAEF,IAAjB;IAAuB,UAAU,EAAA;EAAjC,CAAA,CAAlB;EAEA,IAAIG,OAAO,GAAGd,QAAQ,CAACe,cAAvB;EACA,IAAIL,SAAJ,EAAe;IACXI,OAAO,GAAGd,QAAQ,CAACgB,cAAnBF;EACH,CAFD,MAEO,IAAI,CAACN,UAAL,EAAiB;IACpBM,OAAO,GAAGd,QAAQ,CAACiB,YAAnBH;EACH;EAED,OACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAC;EAAhB,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACQA,OADR,EAAA;IAEI,MAAM,EAAE;MACJH,IAAI,EAAEE,SADF;MAEJJ,IAAI,EAAED;IAFF;EAFZ,CAAA,CAAA,CADJ,CADJ,EAUI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAC;EAAhB,CAAA,EAA2CV,OAAO,CAACc,IAAD,CAAlD,CAVJ,CADJ;AAcH,CA7BD;AA+BA,eAAeV,cAAf","sourcesContent":["/**\n * @flow\n * @file Component for the sub details for the item name\n * @author Box\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport getSize from '../../../utils/size';\nimport Datefield from '../date';\nimport messages from '../messages';\nimport { VIEW_RECENTS } from '../../../constants';\nimport type { View, BoxItem } from '../../../common/types/core';\nimport './ItemSubDetails.scss';\n\ntype Props = {\n    item: BoxItem,\n    view: View,\n};\n\nconst ItemSubDetails = ({ item, view }: Props) => {\n    const { modified_at = '', interacted_at = '', modified_by }: BoxItem = item;\n    const modifiedBy: string = modified_by ? modified_by.name || '' : '';\n    const isRecents: boolean = view === VIEW_RECENTS;\n    const date: string = isRecents ? interacted_at || modified_at : modified_at;\n    const { size }: BoxItem = item;\n    const DateValue = <Datefield date={date} omitCommas />;\n\n    let message = messages.modifiedDateBy;\n    if (isRecents) {\n        message = messages.interactedDate;\n    } else if (!modifiedBy) {\n        message = messages.modifiedDate;\n    }\n\n    return (\n        <span>\n            <span className=\"bdl-ItemSubDetails-modifiedBy\">\n                <FormattedMessage\n                    {...message}\n                    values={{\n                        date: DateValue,\n                        name: modifiedBy,\n                    }}\n                />\n            </span>\n            <span className=\"bdl-ItemSubDetails-size\">{getSize(size)}</span>\n        </span>\n    );\n};\n\nexport default ItemSubDetails;\n"]},"metadata":{},"sourceType":"module"}