{"ast":null,"code":"import React from 'react';\nimport noop from 'lodash/noop';\nimport SuggestedPill from './SuggestedPill';\nimport './SuggestedPillsRow.scss';\nvar SuggestedPillsRow = function SuggestedPillsRow(_ref) {\n  var _ref$onSuggestedPillA = _ref.onSuggestedPillAdd,\n    onSuggestedPillAdd = _ref$onSuggestedPillA === void 0 ? noop : _ref$onSuggestedPillA,\n    _ref$selectedPillsVal = _ref.selectedPillsValues,\n    selectedPillsValues = _ref$selectedPillsVal === void 0 ? [] : _ref$selectedPillsVal,\n    _ref$suggestedPillsDa = _ref.suggestedPillsData,\n    suggestedPillsData = _ref$suggestedPillsDa === void 0 ? [] : _ref$suggestedPillsDa,\n    _ref$suggestedPillsFi = _ref.suggestedPillsFilter,\n    suggestedPillsFilter = _ref$suggestedPillsFi === void 0 ? 'id' : _ref$suggestedPillsFi,\n    title = _ref.title;\n  // Prevents pills from being rendered that are in the form by checking for value (id or custom value)\n  var filteredSuggestedPillData = suggestedPillsData.filter(function (item) {\n    return !selectedPillsValues.includes(item[suggestedPillsFilter]);\n  });\n  if (filteredSuggestedPillData.length === 0) {\n    return null;\n  }\n  return React.createElement(\"div\", {\n    className: \"pill-selector-suggested\"\n  }, React.createElement(\"span\", null, title), filteredSuggestedPillData.map(function (item) {\n    return React.createElement(SuggestedPill, {\n      key: item.id,\n      email: item.email,\n      id: item.id,\n      name: item.name,\n      onAdd: onSuggestedPillAdd\n    });\n  }));\n};\nexport default SuggestedPillsRow;","map":{"version":3,"sources":["../../../src/components/pill-selector-dropdown/SuggestedPillsRow.js"],"names":["React","noop","SuggestedPill","SuggestedPillsRow","onSuggestedPillAdd","selectedPillsValues","suggestedPillsData","suggestedPillsFilter","title","filteredSuggestedPillData","filter","includes","item","length","map","id","email","name"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAGA,OAAO,0BAAP;AAUA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,IAAA,EAMb;EAAA,IAAA,qBAAA,GAAA,IAAA,CALTC,kBAKS;IALTA,kBAKS,GAAA,qBAAA,KAAA,KAAA,CAAA,GALYH,IAKZ,GAAA,qBAAA;IAAA,qBAAA,GAAA,IAAA,CAJTI,mBAIS;IAJTA,mBAIS,GAAA,qBAAA,KAAA,KAAA,CAAA,GAJa,EAIb,GAAA,qBAAA;IAAA,qBAAA,GAAA,IAAA,CAHTC,kBAGS;IAHTA,kBAGS,GAAA,qBAAA,KAAA,KAAA,CAAA,GAHY,EAGZ,GAAA,qBAAA;IAAA,qBAAA,GAAA,IAAA,CAFTC,oBAES;IAFTA,oBAES,GAAA,qBAAA,KAAA,KAAA,CAAA,GAFc,IAEd,GAAA,qBAAA;IADTC,KACS,GAAA,IAAA,CADTA,KACS;EACT;EACA,IAAMC,yBAAyB,GAAG,kBAAkB,CAACC,MAAnB,CAC9B,UAAA,IAAI,EAAA;IAAA,OAAI,CAACL,mBAAmB,CAACM,QAApBN,CAA6BO,IAAI,CAACL,oBAAD,CAAjCF,CAAL;EAAA,CAD0B,CAAlC;EAIA,IAAII,yBAAyB,CAACI,MAA1BJ,KAAqC,CAAzC,EAA4C;IACxC,OAAO,IAAP;EACH;EAED,OACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAOD,KAAP,CADJ,EAEK,yBAAyB,CAACM,GAA1B,CAA8B,UAAA,IAAI,EAAA;IAAA,OAC/B,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA;MACI,GAAG,EAAEF,IAAI,CAACG,EADd;MAEI,KAAK,EAAEH,IAAI,CAACI,KAFhB;MAGI,EAAE,EAAEJ,IAAI,CAACG,EAHb;MAII,IAAI,EAAEH,IAAI,CAACK,IAJf;MAKI,KAAK,EAAEb;IALX,CAAA,CAD+B;EAAA,CAAlC,CAFL,CADJ;AAcH,CA9BD;AAgCA,eAAeD,iBAAf","sourcesContent":["// @flow\nimport React from 'react';\nimport noop from 'lodash/noop';\n\nimport SuggestedPill from './SuggestedPill';\nimport type { SuggestedPill as SuggestedPillType, SuggestedPills, SuggestedPillsFilter } from './flowTypes';\n\nimport './SuggestedPillsRow.scss';\n\ntype Props = {\n    onSuggestedPillAdd?: SuggestedPillType => void,\n    selectedPillsValues?: Array<number>,\n    suggestedPillsData?: SuggestedPills,\n    suggestedPillsFilter?: SuggestedPillsFilter,\n    title?: string,\n};\n\nconst SuggestedPillsRow = ({\n    onSuggestedPillAdd = noop,\n    selectedPillsValues = [],\n    suggestedPillsData = [],\n    suggestedPillsFilter = 'id',\n    title,\n}: Props) => {\n    // Prevents pills from being rendered that are in the form by checking for value (id or custom value)\n    const filteredSuggestedPillData = suggestedPillsData.filter(\n        item => !selectedPillsValues.includes(item[suggestedPillsFilter]),\n    );\n\n    if (filteredSuggestedPillData.length === 0) {\n        return null;\n    }\n\n    return (\n        <div className=\"pill-selector-suggested\">\n            <span>{title}</span>\n            {filteredSuggestedPillData.map(item => (\n                <SuggestedPill\n                    key={item.id}\n                    email={item.email}\n                    id={item.id}\n                    name={item.name}\n                    onAdd={onSuggestedPillAdd}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default SuggestedPillsRow;\n"]},"metadata":{},"sourceType":"module"}