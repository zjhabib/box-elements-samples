{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport Pikaday from 'pikaday';\nimport range from 'lodash/range';\nimport uniqueId from 'lodash/uniqueId';\nimport { RESIN_TAG_TARGET } from '../../common/variables';\nimport IconAlert from '../../icons/general/IconAlert';\nimport IconCalendar from '../../icons/general/IconCalendar';\nimport IconClear from '../../icons/general/IconClear';\nimport Label from '../label';\nimport PlainButton from '../plain-button';\nimport Tooltip from '../tooltip';\nimport { convertDateToUnixMidnightTime } from '../../utils/datetime';\nimport './DatePicker.scss';\nvar messages = defineMessages({\n  previousMonth: {\n    \"id\": \"boxui.base.previousMonth\",\n    \"defaultMessage\": \"Previous Month\"\n  },\n  nextMonth: {\n    \"id\": \"boxui.base.nextMonth\",\n    \"defaultMessage\": \"Next Month\"\n  },\n  iconAlertText: {\n    \"id\": \"boxui.datePicker.iconAlertText\",\n    \"defaultMessage\": \"Invalid Date\"\n  },\n  dateClearButton: {\n    \"id\": \"boxui.datePicker.dateClearButton\",\n    \"defaultMessage\": \"Clear Date\"\n  },\n  chooseDate: {\n    \"id\": \"boxui.datePicker.chooseDate\",\n    \"defaultMessage\": \"Choose Date\"\n  }\n});\nvar TOGGLE_DELAY_MS = 300;\nvar ISO_STRING_DATE_FORMAT = 'isoString';\nvar UTC_TIME_DATE_FORMAT = 'utcTime';\nvar UNIX_TIME_DATE_FORMAT = 'unixTime';\nvar UTC_ISO_STRING_DATE_FORMAT = 'utcISOString';\nvar ENTER_KEY = 'Enter';\nvar ESCAPE_KEY = 'Escape';\nvar TAB_KEY = 'Tab';\nvar stub = function stub() {};\n/**\n * Converts date from being relative to GMT, to being relative to browser\n * timezone. E.g., Thu Jun 29 2017 00:00:00 GMT =>\n * Thu Jun 29 2017 00:00:00 GMT-0700 (PDT)\n * @param {Date} date UTC date\n * @returns {Date} date Local date\n */\n\nfunction convertUTCToLocal(date) {\n  var dateString = date.toUTCString(); // Remove ` GMT` from the timestamp string\n\n  var dateStringWithoutTimeZone = dateString.slice(0, -4);\n  return new Date(dateStringWithoutTimeZone);\n}\nfunction getFormattedDate(date, format) {\n  if (!date) {\n    return '';\n  }\n  var utcDate;\n  switch (format) {\n    case ISO_STRING_DATE_FORMAT:\n      return date.toISOString();\n    case UTC_TIME_DATE_FORMAT:\n      return convertDateToUnixMidnightTime(date);\n    case UTC_ISO_STRING_DATE_FORMAT:\n      utcDate = new Date(convertDateToUnixMidnightTime(date));\n      return utcDate.toISOString();\n    default:\n      return date.getTime();\n  }\n}\nvar localesWhereWeekStartsOnSunday = ['en-US', 'en-CA', 'jp-JP'];\nvar DatePicker = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DatePicker, _React$Component);\n  function DatePicker() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, DatePicker);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DatePicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"errorMessageID\", uniqueId('errorMessage'));\n    _defineProperty(_assertThisInitialized(_this), \"descriptionID\", uniqueId('description'));\n    _defineProperty(_assertThisInitialized(_this), \"onSelectHandler\", function (date) {\n      var onChange = _this.props.onChange;\n      if (onChange) {\n        var formattedDate = _this.formatValue(date);\n        onChange(date, formattedDate);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"shouldStayClosed\", false);\n    _defineProperty(_assertThisInitialized(_this), \"focusDatePicker\", function () {\n      // By default, this will open the datepicker too\n      if (_this.dateInputEl) {\n        _this.dateInputEl.focus();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleInputKeyDown\", function (event) {\n      var isTextInputAllowed = _this.props.isTextInputAllowed;\n      if (_this.datePicker.isVisible()) {\n        event.stopPropagation();\n      } // Stops up/down arrow & spacebar from moving page scroll position since pikaday does not preventDefault correctly\n\n      if (!isTextInputAllowed && event.key !== TAB_KEY) {\n        event.preventDefault();\n      }\n      if (isTextInputAllowed && event.key === ENTER_KEY) {\n        event.preventDefault();\n      }\n      if (event.key === ENTER_KEY || event.key === ESCAPE_KEY || event.key === ' ') {\n        // Since pikaday auto-selects when you move the select box, enter/space don't do anything but close the date picker\n        if (_this.datePicker.isVisible()) {\n          _this.datePicker.hide();\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleInputBlur\", function (event) {\n      var _this$props = _this.props,\n        onBlur = _this$props.onBlur,\n        isTextInputAllowed = _this$props.isTextInputAllowed;\n      var nextActiveElement = event.relatedTarget || document.activeElement; // This is mostly here to cancel out the pikaday hide() on blur\n\n      if (_this.datePicker.isVisible() && nextActiveElement && nextActiveElement === _this.datePickerButtonEl) {\n        _this.shouldStayClosed = true;\n        setTimeout(function () {\n          _this.shouldStayClosed = false;\n        }, TOGGLE_DELAY_MS);\n      }\n      if (onBlur) {\n        onBlur(event);\n      } // Since we Fire parent onChange event if isTextInputAllowed\n      // fire it on blur if the user typed a correct date format\n\n      var inputDate = null;\n      if (_this.dateInputEl) {\n        inputDate = new Date(_this.dateInputEl.value);\n      }\n      if (isTextInputAllowed && inputDate && inputDate.getDate()) {\n        _this.onSelectHandler(inputDate);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleButtonClick\", function (event) {\n      event.preventDefault();\n      if (!_this.shouldStayClosed) {\n        _this.focusDatePicker();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"formatDisplay\", function (date) {\n      var _this$props2 = _this.props,\n        displayFormat = _this$props2.displayFormat,\n        intl = _this$props2.intl;\n      return date ? intl.formatDate(date, displayFormat) : '';\n    });\n    _defineProperty(_assertThisInitialized(_this), \"formatValue\", function (date) {\n      var dateFormat = _this.props.dateFormat;\n      return getFormattedDate(date, dateFormat);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"clearDate\", function (event) {\n      event.preventDefault(); // so datepicker doesn't open after clearing\n\n      _this.datePicker.setDate(null);\n      _this.onSelectHandler(null);\n    });\n    return _this;\n  }\n  _createClass(DatePicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n        dateFormat = _this$props3.dateFormat,\n        intl = _this$props3.intl,\n        maxDate = _this$props3.maxDate,\n        minDate = _this$props3.minDate,\n        value = _this$props3.value,\n        yearRange = _this$props3.yearRange,\n        isTextInputAllowed = _this$props3.isTextInputAllowed;\n      var formatDate = intl.formatDate,\n        formatMessage = intl.formatMessage;\n      var nextMonth = messages.nextMonth,\n        previousMonth = messages.previousMonth;\n      var defaultValue = value; // When date format is utcTime, initial date needs to be converted from being relative to GMT to being\n      // relative to browser timezone\n\n      if (dateFormat === UTC_TIME_DATE_FORMAT && typeof value !== 'undefined') {\n        defaultValue = convertUTCToLocal(value);\n      } // Make sure the DST detection algorithm in browsers is up-to-date\n\n      var year = new Date().getFullYear();\n      var i18n = {\n        previousMonth: formatMessage(previousMonth),\n        nextMonth: formatMessage(nextMonth),\n        months: range(12).map(function (month) {\n          return formatDate(new Date(year, month, 15), {\n            month: 'long'\n          });\n        }),\n        // weekdays must start with Sunday, so array of dates below is May 1st-8th, 2016\n        weekdays: range(1, 8).map(function (date) {\n          return formatDate(new Date(2016, 4, date), {\n            weekday: 'long'\n          });\n        }),\n        weekdaysShort: range(1, 8).map(function (date) {\n          return formatDate(new Date(2016, 4, date), {\n            weekday: 'narrow'\n          });\n        })\n      };\n      this.datePicker = new Pikaday({\n        blurFieldOnSelect: false,\n        // Available in pikaday > 1.5.1\n        setDefaultDate: true,\n        defaultDate: defaultValue,\n        field: this.dateInputEl,\n        firstDay: localesWhereWeekStartsOnSunday.includes(intl.locale) ? 0 : 1,\n        maxDate: maxDate,\n        minDate: minDate,\n        position: 'bottom left',\n        i18n: i18n,\n        showDaysInNextAndPreviousMonths: true,\n        onSelect: this.onSelectHandler,\n        yearRange: yearRange,\n        toString: this.formatDisplay\n      });\n      if (isTextInputAllowed) {\n        this.updateDateInputValue(this.formatDisplay(defaultValue));\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var nextValue = nextProps.value,\n        nextMinDate = nextProps.minDate,\n        nextMaxDate = nextProps.maxDate;\n      var _this$props4 = this.props,\n        value = _this$props4.value,\n        minDate = _this$props4.minDate,\n        maxDate = _this$props4.maxDate,\n        isTextInputAllowed = _this$props4.isTextInputAllowed; // only set date when props change\n\n      if (nextValue && !value || !nextValue && value || nextValue && value && nextValue.getTime() !== value.getTime()) {\n        this.datePicker.setDate(nextValue);\n      } // If text input is allowed the dateInputEl will act as an uncontrolled input and\n      // we need to set formatted value manually.\n\n      if (isTextInputAllowed) {\n        this.updateDateInputValue(this.formatDisplay(nextValue));\n      }\n      if (nextMinDate && !minDate || !nextMinDate && minDate || nextMinDate && minDate && nextMinDate.getTime() !== minDate.getTime()) {\n        this.datePicker.setMinDate(nextMinDate);\n        if (this.datePicker.getDate() < nextMinDate) {\n          this.datePicker.gotoDate(nextMinDate);\n        }\n      }\n      if (nextMaxDate && !maxDate || !nextMaxDate && maxDate || nextMaxDate && maxDate && nextMaxDate.getTime() !== maxDate.getTime()) {\n        this.datePicker.setMaxDate(nextMaxDate);\n        if (this.datePicker.getDate() > nextMaxDate) {\n          this.datePicker.gotoDate(nextMaxDate);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.datePicker.destroy();\n    }\n  }, {\n    key: \"updateDateInputValue\",\n    value: function updateDateInputValue(value) {\n      if (this.dateInputEl) {\n        this.dateInputEl.value = value;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props5 = this.props,\n        className = _this$props5.className,\n        description = _this$props5.description,\n        error = _this$props5.error,\n        errorTooltipPosition = _this$props5.errorTooltipPosition,\n        hideLabel = _this$props5.hideLabel,\n        hideOptionalLabel = _this$props5.hideOptionalLabel,\n        inputProps = _this$props5.inputProps,\n        intl = _this$props5.intl,\n        isClearable = _this$props5.isClearable,\n        isDisabled = _this$props5.isDisabled,\n        isRequired = _this$props5.isRequired,\n        isTextInputAllowed = _this$props5.isTextInputAllowed,\n        label = _this$props5.label,\n        name = _this$props5.name,\n        onFocus = _this$props5.onFocus,\n        placeholder = _this$props5.placeholder,\n        resinTarget = _this$props5.resinTarget,\n        value = _this$props5.value;\n      var formatMessage = intl.formatMessage;\n      var classes = classNames(className, 'date-picker-wrapper', {\n        'show-clear-btn': !!value,\n        'show-error': !!error\n      });\n      var hasError = !!error;\n      var ariaAttrs = {\n        'aria-invalid': hasError,\n        'aria-required': isRequired,\n        'aria-errormessage': this.errorMessageID,\n        'aria-describedby': description ? this.descriptionID : undefined\n      };\n      var resinTargetAttr = resinTarget ? _defineProperty({}, RESIN_TAG_TARGET, resinTarget) : {};\n      var valueAttr = isTextInputAllowed ? {\n        defaultValue: this.formatDisplay(value)\n      } : {\n        value: this.formatDisplay(value)\n      };\n      var onChangeAttr = isTextInputAllowed ? {} : {\n        onChange: stub\n      };\n      /* fixes proptype error about readonly field (not adding readonly so constraint validation works) */\n\n      return React.createElement(\"div\", {\n        className: classes\n      }, React.createElement(\"span\", {\n        className: \"date-picker-icon-holder\"\n      }, React.createElement(Label, {\n        hideLabel: hideLabel,\n        showOptionalText: !hideOptionalLabel && !isRequired,\n        text: label\n      }, !!description && React.createElement(\"div\", {\n        id: this.descriptionID,\n        className: \"date-picker-description\"\n      }, description), React.createElement(Tooltip, {\n        className: \"date-picker-error-tooltip\",\n        isShown: !!error,\n        position: errorTooltipPosition,\n        text: error || '',\n        theme: \"error\"\n      }, React.createElement(\"input\", _extends({\n        ref: function ref(_ref2) {\n          _this2.dateInputEl = _ref2;\n        },\n        className: \"date-picker-input\",\n        disabled: isDisabled,\n        onBlur: this.handleInputBlur,\n        placeholder: placeholder || formatMessage(messages.chooseDate),\n        required: isRequired,\n        type: \"text\"\n      }, onChangeAttr, {\n        onFocus: onFocus,\n        onKeyDown: this.handleInputKeyDown\n      }, resinTargetAttr, ariaAttrs, inputProps, valueAttr))), React.createElement(\"span\", {\n        id: this.errorMessageID,\n        className: \"accessibility-hidden\",\n        role: \"alert\"\n      }, error)), isClearable && !!value && !isDisabled ? React.createElement(PlainButton, {\n        \"aria-label\": formatMessage(messages.dateClearButton),\n        className: \"date-picker-clear-btn\",\n        onClick: this.clearDate,\n        type: \"button\"\n      }, React.createElement(IconClear, {\n        height: 12,\n        width: 12\n      })) : null, error ? React.createElement(IconAlert, {\n        className: \"date-picker-icon-alert\",\n        height: 13,\n        title: React.createElement(FormattedMessage, messages.iconAlertText),\n        width: 13\n      }) : null, React.createElement(PlainButton, {\n        \"aria-label\": formatMessage(messages.chooseDate),\n        className: \"date-picker-open-btn\",\n        disabled: isDisabled,\n        getDOMRef: function getDOMRef(ref) {\n          _this2.datePickerButtonEl = ref;\n        },\n        onClick: this.handleButtonClick,\n        type: \"button\"\n      }, React.createElement(IconCalendar, {\n        height: 17,\n        width: 16\n      })), React.createElement(\"input\", {\n        className: \"date-picker-unix-time-input\",\n        name: name,\n        readOnly: true,\n        type: \"hidden\",\n        value: this.formatValue(value)\n      })));\n    }\n  }]);\n  return DatePicker;\n}(React.Component);\n_defineProperty(DatePicker, \"defaultProps\", {\n  className: '',\n  dateFormat: UNIX_TIME_DATE_FORMAT,\n  displayFormat: {},\n  error: '',\n  errorTooltipPosition: 'bottom-left',\n  inputProps: {},\n  isClearable: true,\n  isTextInputAllowed: false,\n  yearRange: 10\n});\nexport { DatePicker as DatePickerBase };\nexport default injectIntl(DatePicker);","map":{"version":3,"sources":["../../../src/components/date-picker/DatePicker.js"],"names":["React","defineMessages","injectIntl","FormattedMessage","classNames","Pikaday","range","uniqueId","RESIN_TAG_TARGET","IconAlert","IconCalendar","IconClear","Label","PlainButton","Tooltip","convertDateToUnixMidnightTime","messages","previousMonth","nextMonth","iconAlertText","dateClearButton","chooseDate","TOGGLE_DELAY_MS","ISO_STRING_DATE_FORMAT","UTC_TIME_DATE_FORMAT","UNIX_TIME_DATE_FORMAT","UTC_ISO_STRING_DATE_FORMAT","ENTER_KEY","ESCAPE_KEY","TAB_KEY","stub","convertUTCToLocal","date","dateString","toUTCString","dateStringWithoutTimeZone","slice","Date","getFormattedDate","format","utcDate","toISOString","getTime","localesWhereWeekStartsOnSunday","DatePicker","Component","className","dateFormat","displayFormat","error","errorTooltipPosition","inputProps","isClearable","isTextInputAllowed","yearRange","intl","maxDate","minDate","value","props","formatDate","formatMessage","defaultValue","year","getFullYear","i18n","months","map","month","weekdays","weekday","weekdaysShort","datePicker","blurFieldOnSelect","setDefaultDate","defaultDate","field","dateInputEl","firstDay","includes","locale","position","showDaysInNextAndPreviousMonths","onSelect","onSelectHandler","toString","formatDisplay","updateDateInputValue","nextProps","nextValue","nextMinDate","nextMaxDate","setDate","setMinDate","getDate","gotoDate","setMaxDate","destroy","onChange","formattedDate","formatValue","focus","event","isVisible","stopPropagation","key","preventDefault","hide","onBlur","nextActiveElement","relatedTarget","document","activeElement","datePickerButtonEl","shouldStayClosed","setTimeout","inputDate","focusDatePicker","description","hideLabel","hideOptionalLabel","isDisabled","isRequired","label","name","onFocus","placeholder","resinTarget","classes","hasError","ariaAttrs","errorMessageID","descriptionID","undefined","resinTargetAttr","valueAttr","onChangeAttr","ref","handleInputBlur","handleInputKeyDown","clearDate","handleButtonClick","DatePickerBase"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport classNames from 'classnames';\nimport Pikaday from 'pikaday';\nimport range from 'lodash/range';\nimport uniqueId from 'lodash/uniqueId';\n\nimport { RESIN_TAG_TARGET } from '../../common/variables';\nimport IconAlert from '../../icons/general/IconAlert';\nimport IconCalendar from '../../icons/general/IconCalendar';\nimport IconClear from '../../icons/general/IconClear';\n\nimport Label from '../label';\nimport PlainButton from '../plain-button';\nimport Tooltip from '../tooltip';\n\nimport { convertDateToUnixMidnightTime } from '../../utils/datetime';\n\nimport './DatePicker.scss';\n\nconst messages = defineMessages({\n    previousMonth: {\n        defaultMessage: 'Previous Month',\n        description: 'Previous month button for a date picker calendar',\n        id: 'boxui.base.previousMonth',\n    },\n    nextMonth: {\n        defaultMessage: 'Next Month',\n        description: 'Next month button for a date picker calendar',\n        id: 'boxui.base.nextMonth',\n    },\n    iconAlertText: {\n        defaultMessage: 'Invalid Date',\n        description: 'Date entered is invalid',\n        id: 'boxui.datePicker.iconAlertText',\n    },\n    dateClearButton: {\n        defaultMessage: 'Clear Date',\n        description: 'Button for clearing date picker',\n        id: 'boxui.datePicker.dateClearButton',\n    },\n    chooseDate: {\n        defaultMessage: 'Choose Date',\n        description: 'Button for opening date picker',\n        id: 'boxui.datePicker.chooseDate',\n    },\n});\n\nconst TOGGLE_DELAY_MS = 300;\nconst ISO_STRING_DATE_FORMAT = 'isoString';\nconst UTC_TIME_DATE_FORMAT = 'utcTime';\nconst UNIX_TIME_DATE_FORMAT = 'unixTime';\nconst UTC_ISO_STRING_DATE_FORMAT = 'utcISOString';\nconst ENTER_KEY = 'Enter';\nconst ESCAPE_KEY = 'Escape';\nconst TAB_KEY = 'Tab';\n\nconst stub = () => {};\n\n/**\n * Converts date from being relative to GMT, to being relative to browser\n * timezone. E.g., Thu Jun 29 2017 00:00:00 GMT =>\n * Thu Jun 29 2017 00:00:00 GMT-0700 (PDT)\n * @param {Date} date UTC date\n * @returns {Date} date Local date\n */\nfunction convertUTCToLocal(date: Date) {\n    const dateString = date.toUTCString();\n    // Remove ` GMT` from the timestamp string\n    const dateStringWithoutTimeZone = dateString.slice(0, -4);\n    return new Date(dateStringWithoutTimeZone);\n}\n\nfunction getFormattedDate(date, format) {\n    if (!date) {\n        return '';\n    }\n\n    let utcDate;\n\n    switch (format) {\n        case ISO_STRING_DATE_FORMAT:\n            return date.toISOString();\n        case UTC_TIME_DATE_FORMAT:\n            return convertDateToUnixMidnightTime(date);\n        case UTC_ISO_STRING_DATE_FORMAT:\n            utcDate = new Date(convertDateToUnixMidnightTime(date));\n            return utcDate.toISOString();\n        default:\n            return date.getTime();\n    }\n}\n\nconst localesWhereWeekStartsOnSunday = ['en-US', 'en-CA', 'jp-JP'];\n\ntype Props = {\n    /** Add a css class to the component */\n    className?: string,\n    /** The format of the date value for form submit */\n    dateFormat?: string,\n    /** Some optional description */\n    description?: React.Node,\n    /** The format of the date displayed in the input field */\n    displayFormat?: Object,\n    /** Error message */\n    error?: React.Node,\n    /** Position of error message tooltip */\n    errorTooltipPosition?:\n        | 'bottom-left'\n        | 'bottom-center'\n        | 'bottom-right'\n        | 'middle-left'\n        | 'middle-right'\n        | 'top-center'\n        | 'top-left'\n        | 'top-right',\n    /** Whether to show or hide the field's label */\n    hideLabel?: boolean,\n    /** Whether show or hide the 'Optional' label */\n    hideOptionalLabel?: boolean,\n    /** Props that will be applied on the input element */\n    inputProps?: Object,\n    /** Is input clearable */\n    isClearable?: boolean,\n    /** Is input disabled */\n    isDisabled?: boolean,\n    /** Is input required */\n    isRequired?: boolean,\n    /** Is user allowed to manually input a value (WARNING: this doesn't work with internationalization) */\n    isTextInputAllowed?: boolean,\n    /** Label displayed for the text input */\n    label: React.Node,\n    /** The maximum date allowed to be selected */\n    maxDate?: Date,\n    /** The minimum date allowed to be selected */\n    minDate?: Date,\n    /** Name of the text input */\n    name?: string,\n    /** Called when input lose focus */\n    onBlur?: Function,\n    /** Called when input is changed, passed the selected Date */\n    onChange?: Function,\n    /** Called when input receives focus */\n    onFocus?: Function,\n    /** Placeholder for the text input */\n    placeholder?: string,\n    /** Resin tag */\n    resinTarget?: string,\n    /** Date to set the input */\n    value?: Date,\n    yearRange?: number | Array<number>,\n} & InjectIntlProvidedProps;\n\nclass DatePicker extends React.Component<Props> {\n    static defaultProps = {\n        className: '',\n        dateFormat: UNIX_TIME_DATE_FORMAT,\n        displayFormat: {},\n        error: '',\n        errorTooltipPosition: 'bottom-left',\n        inputProps: {},\n        isClearable: true,\n        isTextInputAllowed: false,\n        yearRange: 10,\n    };\n\n    errorMessageID = uniqueId('errorMessage');\n\n    descriptionID = uniqueId('description');\n\n    componentDidMount() {\n        const { dateFormat, intl, maxDate, minDate, value, yearRange, isTextInputAllowed } = this.props;\n        const { formatDate, formatMessage } = intl;\n        const { nextMonth, previousMonth } = messages;\n        let defaultValue = value;\n        // When date format is utcTime, initial date needs to be converted from being relative to GMT to being\n        // relative to browser timezone\n        if (dateFormat === UTC_TIME_DATE_FORMAT && typeof value !== 'undefined') {\n            defaultValue = convertUTCToLocal(value);\n        }\n        // Make sure the DST detection algorithm in browsers is up-to-date\n        const year = new Date().getFullYear();\n\n        const i18n = {\n            previousMonth: formatMessage(previousMonth),\n            nextMonth: formatMessage(nextMonth),\n            months: range(12).map(month => formatDate(new Date(year, month, 15), { month: 'long' })),\n            // weekdays must start with Sunday, so array of dates below is May 1st-8th, 2016\n            weekdays: range(1, 8).map(date => formatDate(new Date(2016, 4, date), { weekday: 'long' })),\n            weekdaysShort: range(1, 8).map(date => formatDate(new Date(2016, 4, date), { weekday: 'narrow' })),\n        };\n\n        this.datePicker = new Pikaday({\n            blurFieldOnSelect: false, // Available in pikaday > 1.5.1\n            setDefaultDate: true,\n            defaultDate: defaultValue,\n            field: this.dateInputEl,\n            firstDay: localesWhereWeekStartsOnSunday.includes(intl.locale) ? 0 : 1,\n            maxDate,\n            minDate,\n            position: 'bottom left',\n            i18n,\n            showDaysInNextAndPreviousMonths: true,\n            onSelect: this.onSelectHandler,\n            yearRange,\n            toString: this.formatDisplay,\n        });\n\n        if (isTextInputAllowed) {\n            this.updateDateInputValue(this.formatDisplay(defaultValue));\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps: Props) {\n        const { value: nextValue, minDate: nextMinDate, maxDate: nextMaxDate } = nextProps;\n        const { value, minDate, maxDate, isTextInputAllowed } = this.props;\n\n        // only set date when props change\n        if (\n            (nextValue && !value) ||\n            (!nextValue && value) ||\n            (nextValue && value && nextValue.getTime() !== value.getTime())\n        ) {\n            this.datePicker.setDate(nextValue);\n        }\n        // If text input is allowed the dateInputEl will act as an uncontrolled input and\n        // we need to set formatted value manually.\n        if (isTextInputAllowed) {\n            this.updateDateInputValue(this.formatDisplay(nextValue));\n        }\n        if (\n            (nextMinDate && !minDate) ||\n            (!nextMinDate && minDate) ||\n            (nextMinDate && minDate && nextMinDate.getTime() !== minDate.getTime())\n        ) {\n            this.datePicker.setMinDate(nextMinDate);\n\n            if (this.datePicker.getDate() < nextMinDate) {\n                this.datePicker.gotoDate(nextMinDate);\n            }\n        }\n        if (\n            (nextMaxDate && !maxDate) ||\n            (!nextMaxDate && maxDate) ||\n            (nextMaxDate && maxDate && nextMaxDate.getTime() !== maxDate.getTime())\n        ) {\n            this.datePicker.setMaxDate(nextMaxDate);\n\n            if (this.datePicker.getDate() > nextMaxDate) {\n                this.datePicker.gotoDate(nextMaxDate);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        this.datePicker.destroy();\n    }\n\n    onSelectHandler = (date: ?Date) => {\n        const { onChange } = this.props;\n        if (onChange) {\n            const formattedDate = this.formatValue(date);\n            onChange(date, formattedDate);\n        }\n    };\n\n    updateDateInputValue(value: string) {\n        if (this.dateInputEl) {\n            this.dateInputEl.value = value;\n        }\n    }\n\n    dateInputEl: ?HTMLInputElement;\n\n    datePicker: Pikaday;\n\n    datePickerButtonEl: ?HTMLButtonElement;\n\n    // Used to prevent bad sequences of hide/show when toggling the datepicker button\n    shouldStayClosed = false;\n\n    focusDatePicker = () => {\n        // By default, this will open the datepicker too\n        if (this.dateInputEl) {\n            this.dateInputEl.focus();\n        }\n    };\n\n    handleInputKeyDown = (event: SyntheticKeyboardEvent<HTMLInputElement>) => {\n        const { isTextInputAllowed } = this.props;\n\n        if (this.datePicker.isVisible()) {\n            event.stopPropagation();\n        }\n\n        // Stops up/down arrow & spacebar from moving page scroll position since pikaday does not preventDefault correctly\n        if (!isTextInputAllowed && event.key !== TAB_KEY) {\n            event.preventDefault();\n        }\n\n        if (isTextInputAllowed && event.key === ENTER_KEY) {\n            event.preventDefault();\n        }\n\n        if (event.key === ENTER_KEY || event.key === ESCAPE_KEY || event.key === ' ') {\n            // Since pikaday auto-selects when you move the select box, enter/space don't do anything but close the date picker\n            if (this.datePicker.isVisible()) {\n                this.datePicker.hide();\n            }\n        }\n    };\n\n    handleInputBlur = (event: SyntheticFocusEvent<HTMLInputElement>) => {\n        const { onBlur, isTextInputAllowed } = this.props;\n\n        const nextActiveElement = event.relatedTarget || document.activeElement;\n\n        // This is mostly here to cancel out the pikaday hide() on blur\n        if (this.datePicker.isVisible() && nextActiveElement && nextActiveElement === this.datePickerButtonEl) {\n            this.shouldStayClosed = true;\n            setTimeout(() => {\n                this.shouldStayClosed = false;\n            }, TOGGLE_DELAY_MS);\n        }\n\n        if (onBlur) {\n            onBlur(event);\n        }\n\n        // Since we Fire parent onChange event if isTextInputAllowed\n        // fire it on blur if the user typed a correct date format\n        let inputDate: ?Date = null;\n\n        if (this.dateInputEl) {\n            inputDate = new Date(this.dateInputEl.value);\n        }\n\n        if (isTextInputAllowed && inputDate && inputDate.getDate()) {\n            this.onSelectHandler(inputDate);\n        }\n    };\n\n    handleButtonClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n\n        if (!this.shouldStayClosed) {\n            this.focusDatePicker();\n        }\n    };\n\n    formatDisplay = (date?: Date): string => {\n        const { displayFormat, intl } = this.props;\n        return date ? intl.formatDate(date, displayFormat) : '';\n    };\n\n    formatValue = (date: ?Date) => {\n        const { dateFormat } = this.props;\n        return getFormattedDate(date, dateFormat);\n    };\n\n    clearDate = (event: SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault(); // so datepicker doesn't open after clearing\n        this.datePicker.setDate(null);\n        this.onSelectHandler(null);\n    };\n\n    render() {\n        const {\n            className,\n            description,\n            error,\n            errorTooltipPosition,\n            hideLabel,\n            hideOptionalLabel,\n            inputProps,\n            intl,\n            isClearable,\n            isDisabled,\n            isRequired,\n            isTextInputAllowed,\n            label,\n            name,\n            onFocus,\n            placeholder,\n            resinTarget,\n            value,\n        } = this.props;\n\n        const { formatMessage } = intl;\n        const classes = classNames(className, 'date-picker-wrapper', {\n            'show-clear-btn': !!value,\n            'show-error': !!error,\n        });\n\n        const hasError = !!error;\n\n        const ariaAttrs = {\n            'aria-invalid': hasError,\n            'aria-required': isRequired,\n            'aria-errormessage': this.errorMessageID,\n            'aria-describedby': description ? this.descriptionID : undefined,\n        };\n\n        const resinTargetAttr = resinTarget ? { [RESIN_TAG_TARGET]: resinTarget } : {};\n\n        const valueAttr = isTextInputAllowed\n            ? { defaultValue: this.formatDisplay(value) }\n            : { value: this.formatDisplay(value) };\n\n        const onChangeAttr = isTextInputAllowed\n            ? {}\n            : {\n                  onChange: stub,\n              }; /* fixes proptype error about readonly field (not adding readonly so constraint validation works) */\n\n        return (\n            <div className={classes}>\n                <span className=\"date-picker-icon-holder\">\n                    <Label hideLabel={hideLabel} showOptionalText={!hideOptionalLabel && !isRequired} text={label}>\n                        {!!description && (\n                            <div id={this.descriptionID} className=\"date-picker-description\">\n                                {description}\n                            </div>\n                        )}\n                        <Tooltip\n                            className=\"date-picker-error-tooltip\"\n                            isShown={!!error}\n                            position={errorTooltipPosition}\n                            text={error || ''}\n                            theme=\"error\"\n                        >\n                            <input\n                                ref={ref => {\n                                    this.dateInputEl = ref;\n                                }}\n                                className=\"date-picker-input\"\n                                disabled={isDisabled}\n                                onBlur={this.handleInputBlur}\n                                placeholder={placeholder || formatMessage(messages.chooseDate)}\n                                required={isRequired}\n                                type=\"text\"\n                                {...onChangeAttr}\n                                onFocus={onFocus}\n                                onKeyDown={this.handleInputKeyDown}\n                                {...resinTargetAttr}\n                                {...ariaAttrs}\n                                {...inputProps}\n                                {...valueAttr}\n                            />\n                        </Tooltip>\n                        <span id={this.errorMessageID} className=\"accessibility-hidden\" role=\"alert\">\n                            {error}\n                        </span>\n                    </Label>\n                    {isClearable && !!value && !isDisabled ? (\n                        <PlainButton\n                            aria-label={formatMessage(messages.dateClearButton)}\n                            className=\"date-picker-clear-btn\"\n                            onClick={this.clearDate}\n                            type=\"button\"\n                        >\n                            <IconClear height={12} width={12} />\n                        </PlainButton>\n                    ) : null}\n                    {error ? (\n                        <IconAlert\n                            className=\"date-picker-icon-alert\"\n                            height={13}\n                            title={<FormattedMessage {...messages.iconAlertText} />}\n                            width={13}\n                        />\n                    ) : null}\n                    <PlainButton\n                        aria-label={formatMessage(messages.chooseDate)}\n                        className=\"date-picker-open-btn\"\n                        disabled={isDisabled}\n                        getDOMRef={ref => {\n                            this.datePickerButtonEl = ref;\n                        }}\n                        onClick={this.handleButtonClick}\n                        type=\"button\"\n                    >\n                        <IconCalendar height={17} width={16} />\n                    </PlainButton>\n                    <input\n                        className=\"date-picker-unix-time-input\"\n                        name={name}\n                        readOnly\n                        type=\"hidden\"\n                        value={this.formatValue(value)}\n                    />\n                </span>\n            </div>\n        );\n    }\n}\n\nexport { DatePicker as DatePickerBase };\nexport default injectIntl(DatePicker);\n"]},"metadata":{},"sourceType":"module"}