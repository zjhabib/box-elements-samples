{"ast":null,"code":"/**\n * \n * @file Function to create iframe and downloading\n * @author Box\n */\n\n/**\n * Creates an empty iframe or uses an existing one\n * for the purposes of downloading or printing\n *\n * @private\n * @return {HTMLIFrameElement} Iframe\n */\nfunction createDownloadIframe() {\n  var iframe = document.querySelector('#boxdownloadiframe');\n  if (!iframe) {\n    // if no existing iframe create a new one\n    iframe = document.createElement('iframe');\n    iframe.setAttribute('id', 'boxdownloadiframe');\n    iframe.style.display = 'none';\n    if (document.body) {\n      document.body.appendChild(iframe);\n    }\n  } // If the iframe previously failed to load contentDocument will be null\n\n  if (iframe.contentDocument) {\n    // Clean the iframe up\n    iframe.contentDocument.write('<head></head><body></body>');\n  }\n  return iframe;\n}\n/**\n * Opens url in an iframe\n * Used for downloads\n *\n * @param {string} url - URL to open\n * @return {HTMLIFrameElement}\n */\n\nexport default function openUrlInsideIframe(url) {\n  var iframe = createDownloadIframe();\n  iframe.src = url;\n  return iframe;\n}","map":{"version":3,"sources":["../../src/utils/iframe.js"],"names":["createDownloadIframe","iframe","document","querySelector","createElement","setAttribute","style","display","body","appendChild","contentDocument","write","openUrlInsideIframe","url","src"],"mappings":"AAAA;;;;;;AAMA;;;;;;;AAOA,SAASA,oBAAT,CAAA,EAAmD;EAC/C,IAAIC,MAAyB,GAAKC,QAAQ,CAACC,aAATD,CAAuB,oBAAvBA,CAAlC;EACA,IAAI,CAACD,MAAL,EAAa;IACT;IACAA,MAAM,GAAGC,QAAQ,CAACE,aAATF,CAAuB,QAAvBA,CAATD;IACAA,MAAM,CAACI,YAAPJ,CAAoB,IAApBA,EAA0B,mBAA1BA,CAAAA;IACAA,MAAM,CAACK,KAAPL,CAAaM,OAAbN,GAAuB,MAAvBA;IACA,IAAIC,QAAQ,CAACM,IAAb,EAAmB;MACfN,QAAQ,CAACM,IAATN,CAAcO,WAAdP,CAA0BD,MAA1BC,CAAAA;IACH;EACJ,CAV8C,CAY/C;;EACA,IAAID,MAAM,CAACS,eAAX,EAA4B;IACxB;IACAT,MAAM,CAACS,eAAPT,CAAuBU,KAAvBV,CAA6B,4BAA7BA,CAAAA;EACH;EACD,OAAOA,MAAP;AACH;AAED;;;;;;;;AAOA,eAAe,SAASW,mBAAT,CAA6BC,GAA7B,EAA6D;EACxE,IAAMZ,MAAyB,GAAGD,oBAAoB,CAAA,CAAtD;EACAC,MAAM,CAACa,GAAPb,GAAaY,GAAbZ;EACA,OAAOA,MAAP;AACH","sourcesContent":["/**\n * @flow\n * @file Function to create iframe and downloading\n * @author Box\n */\n\n/**\n * Creates an empty iframe or uses an existing one\n * for the purposes of downloading or printing\n *\n * @private\n * @return {HTMLIFrameElement} Iframe\n */\nfunction createDownloadIframe(): HTMLIFrameElement {\n    let iframe: HTMLIFrameElement = ((document.querySelector('#boxdownloadiframe'): any): HTMLIFrameElement);\n    if (!iframe) {\n        // if no existing iframe create a new one\n        iframe = document.createElement('iframe');\n        iframe.setAttribute('id', 'boxdownloadiframe');\n        iframe.style.display = 'none';\n        if (document.body) {\n            document.body.appendChild(iframe);\n        }\n    }\n\n    // If the iframe previously failed to load contentDocument will be null\n    if (iframe.contentDocument) {\n        // Clean the iframe up\n        iframe.contentDocument.write('<head></head><body></body>');\n    }\n    return iframe;\n}\n\n/**\n * Opens url in an iframe\n * Used for downloads\n *\n * @param {string} url - URL to open\n * @return {HTMLIFrameElement}\n */\nexport default function openUrlInsideIframe(url: string): HTMLIFrameElement {\n    const iframe: HTMLIFrameElement = createDownloadIframe();\n    iframe.src = url;\n    return iframe;\n}\n"]},"metadata":{},"sourceType":"module"}