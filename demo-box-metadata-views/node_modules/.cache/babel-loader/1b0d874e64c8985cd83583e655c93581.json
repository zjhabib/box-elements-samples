{"ast":null,"code":"import neverTargeted from '../neverTargeted';\n\n/**\n * Returns a targetingApi that will be targeted as long as the input targeting api is targeted\n * and should suppress is false.\n */\nvar useSuppressed = function useSuppressed(useTargetingApi, useShouldSuppress) {\n  var targetingApi = useTargetingApi();\n  var shouldSuppress = useShouldSuppress();\n  if (shouldSuppress) {\n    return neverTargeted;\n  }\n  return targetingApi;\n};\nexport default useSuppressed;","map":{"version":3,"sources":["../../../../src/features/targeting/utils/useSuppressed.js"],"names":["neverTargeted","useSuppressed","useTargetingApi","useShouldSuppress","targetingApi","shouldSuppress"],"mappings":"AACA,OAAOA,aAAP,MAA0B,kBAA1B;;AAGA;;;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,eAAD,EAAsCC,iBAAtC,EAAyF;EAC3G,IAAMC,YAAY,GAAGF,eAAe,CAAA,CAApC;EACA,IAAMG,cAAc,GAAGF,iBAAiB,CAAA,CAAxC;EACA,IAAIE,cAAJ,EAAoB;IAChB,OAAOL,aAAP;EACH;EACD,OAAOI,YAAP;AACH,CAPD;AASA,eAAeH,aAAf","sourcesContent":["// @flow\nimport neverTargeted from '../neverTargeted';\nimport { type TargetingApi } from '../types';\n\n/**\n * Returns a targetingApi that will be targeted as long as the input targeting api is targeted\n * and should suppress is false.\n */\nconst useSuppressed = (useTargetingApi: () => TargetingApi, useShouldSuppress: () => boolean): TargetingApi => {\n    const targetingApi = useTargetingApi();\n    const shouldSuppress = useShouldSuppress();\n    if (shouldSuppress) {\n        return neverTargeted;\n    }\n    return targetingApi;\n};\n\nexport default useSuppressed;\n"]},"metadata":{},"sourceType":"module"}