{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\n/**\n * \n * @file Helper for the open_with_integrations API endpoint\n * @author Box\n */\nimport Base from './Base';\nimport { ERROR_CODE_FETCH_INTEGRATIONS, BOX_EDIT_INTEGRATION_ID, BOX_EDIT_SFC_INTEGRATION_ID } from '../constants';\nvar OpenWith = /*#__PURE__*/\nfunction (_Base) {\n  _inherits(OpenWith, _Base);\n  function OpenWith() {\n    _classCallCheck(this, OpenWith);\n    return _possibleConstructorReturn(this, _getPrototypeOf(OpenWith).apply(this, arguments));\n  }\n  _createClass(OpenWith, [{\n    key: \"getUrl\",\n    /**\n     * API URL for Open With\n     *\n     * @param {string} [id] - a box file id\n     * @return {string} base url for files\n     */\n    value: function getUrl(id) {\n      if (!id) {\n        throw new Error('Missing file id!');\n      }\n      return \"\".concat(this.getBaseApiUrl(), \"/files/\").concat(id, \"/open_with_integrations\");\n    }\n    /**\n     * Gets Open With integration data\n     *\n     * @param {string} fileId - Box file ID\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @return {void}\n     */\n  }, {\n    key: \"getOpenWithIntegrations\",\n    value: function getOpenWithIntegrations(fileId, _successCallback, errorCallback) {\n      var _this = this;\n      this.errorCode = ERROR_CODE_FETCH_INTEGRATIONS;\n      this.get({\n        id: fileId,\n        successCallback: function successCallback(openWithIntegrations) {\n          var formattedOpenWithData = _this.formatOpenWithData(openWithIntegrations);\n          var consolidatedOpenWithIntegrations = _this.consolidateBoxEditIntegrations(formattedOpenWithData);\n          _successCallback(consolidatedOpenWithIntegrations);\n        },\n        errorCallback: errorCallback\n      });\n    }\n    /**\n     * Removes the Box Edit SFC integration if the higher scoped Box Edit integration is present.\n     * Box Edit and SFC Box Edit are considered separate integrations by the API. We only want to show one,\n     * even if both are enabled and returned from the API.\n     *\n     * @param {Array<Integration>} integrations - List of integrations\n     * @return {Array<Integration>} Integrations with only one Box Edit integration\n     */\n  }, {\n    key: \"consolidateBoxEditIntegrations\",\n    value: function consolidateBoxEditIntegrations(integrations) {\n      var consolidatedIntegrations = _toConsumableArray(integrations);\n      var boxEditIntegration = integrations.some(function (item) {\n        return item.appIntegrationId === BOX_EDIT_INTEGRATION_ID;\n      });\n      if (boxEditIntegration) {\n        consolidatedIntegrations = integrations.filter(function (item) {\n          return item.appIntegrationId !== BOX_EDIT_SFC_INTEGRATION_ID;\n        });\n      }\n      return consolidatedIntegrations;\n    }\n    /**\n     * Formats Open With data conveniently for the client\n     *\n     * @param {Array<Object>} openWithIntegrations - The modified Open With integration objects\n     * @return {Array<Integration>} formatted Open With integrations\n     */\n  }, {\n    key: \"formatOpenWithData\",\n    value: function formatOpenWithData(openWithIntegrations) {\n      var items = openWithIntegrations.items,\n        defaultIntegration = openWithIntegrations.default_app_integration;\n      var integrations = items.map(function (_ref) {\n        var app_integration = _ref.app_integration,\n          disabled_reasons = _ref.disabled_reasons,\n          display_name = _ref.display_name,\n          display_description = _ref.display_description,\n          display_order = _ref.display_order,\n          is_disabled = _ref.is_disabled,\n          should_show_consent_popup = _ref.should_show_consent_popup;\n        var id = app_integration.id,\n          type = app_integration.type;\n        return {\n          appIntegrationId: id,\n          displayDescription: display_description,\n          disabledReasons: disabled_reasons || [],\n          displayOrder: display_order,\n          isDefault: !!defaultIntegration && id === defaultIntegration.id,\n          isDisabled: is_disabled,\n          displayName: display_name,\n          requiresConsent: should_show_consent_popup,\n          type: type\n        };\n      }); // Sort integrations by displayOrder\n\n      return integrations.sort(function (integrationA, integrationB) {\n        return integrationA.displayOrder - integrationB.displayOrder;\n      });\n    }\n  }]);\n  return OpenWith;\n}(Base);\nexport default OpenWith;","map":{"version":3,"sources":["../../src/api/OpenWith.js"],"names":["Base","ERROR_CODE_FETCH_INTEGRATIONS","BOX_EDIT_INTEGRATION_ID","BOX_EDIT_SFC_INTEGRATION_ID","OpenWith","id","Error","getBaseApiUrl","fileId","successCallback","errorCallback","errorCode","get","formattedOpenWithData","formatOpenWithData","openWithIntegrations","consolidatedOpenWithIntegrations","consolidateBoxEditIntegrations","integrations","consolidatedIntegrations","boxEditIntegration","some","item","appIntegrationId","filter","items","default_app_integration","defaultIntegration","map","app_integration","disabled_reasons","display_name","display_description","display_order","is_disabled","should_show_consent_popup","type","displayDescription","disabledReasons","displayOrder","isDefault","isDisabled","displayName","requiresConsent","sort","integrationA","integrationB"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Helper for the open_with_integrations API endpoint\n * @author Box\n */\n\nimport Base from './Base';\nimport { ERROR_CODE_FETCH_INTEGRATIONS, BOX_EDIT_INTEGRATION_ID, BOX_EDIT_SFC_INTEGRATION_ID } from '../constants';\nimport type { ElementsErrorCallback } from '../common/types/api';\nimport type { Integration, OpenWithAPI } from '../common/types/integrations';\n\nclass OpenWith extends Base {\n    /**\n     * API URL for Open With\n     *\n     * @param {string} [id] - a box file id\n     * @return {string} base url for files\n     */\n    getUrl(id: string): string {\n        if (!id) {\n            throw new Error('Missing file id!');\n        }\n\n        return `${this.getBaseApiUrl()}/files/${id}/open_with_integrations`;\n    }\n\n    /**\n     * Gets Open With integration data\n     *\n     * @param {string} fileId - Box file ID\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @return {void}\n     */\n    getOpenWithIntegrations(fileId: string, successCallback: Function, errorCallback: ElementsErrorCallback) {\n        this.errorCode = ERROR_CODE_FETCH_INTEGRATIONS;\n\n        this.get({\n            id: fileId,\n            successCallback: openWithIntegrations => {\n                const formattedOpenWithData = this.formatOpenWithData(openWithIntegrations);\n                const consolidatedOpenWithIntegrations = this.consolidateBoxEditIntegrations(formattedOpenWithData);\n                successCallback(consolidatedOpenWithIntegrations);\n            },\n            errorCallback,\n        });\n    }\n\n    /**\n     * Removes the Box Edit SFC integration if the higher scoped Box Edit integration is present.\n     * Box Edit and SFC Box Edit are considered separate integrations by the API. We only want to show one,\n     * even if both are enabled and returned from the API.\n     *\n     * @param {Array<Integration>} integrations - List of integrations\n     * @return {Array<Integration>} Integrations with only one Box Edit integration\n     */\n    consolidateBoxEditIntegrations(integrations: Array<Integration>): Array<Integration> {\n        let consolidatedIntegrations = [...integrations];\n        const boxEditIntegration = integrations.some(item => item.appIntegrationId === BOX_EDIT_INTEGRATION_ID);\n\n        if (boxEditIntegration) {\n            consolidatedIntegrations = integrations.filter(\n                item => item.appIntegrationId !== BOX_EDIT_SFC_INTEGRATION_ID,\n            );\n        }\n\n        return consolidatedIntegrations;\n    }\n\n    /**\n     * Formats Open With data conveniently for the client\n     *\n     * @param {Array<Object>} openWithIntegrations - The modified Open With integration objects\n     * @return {Array<Integration>} formatted Open With integrations\n     */\n    formatOpenWithData(openWithIntegrations: OpenWithAPI): Array<Integration> {\n        const { items, default_app_integration: defaultIntegration } = openWithIntegrations;\n        const integrations: Array<Integration> = items.map(\n            ({\n                app_integration,\n                disabled_reasons,\n                display_name,\n                display_description,\n                display_order,\n                is_disabled,\n                should_show_consent_popup,\n            }: Object) => {\n                const { id, type } = app_integration;\n\n                return {\n                    appIntegrationId: id,\n                    displayDescription: display_description,\n                    disabledReasons: disabled_reasons || [],\n                    displayOrder: display_order,\n                    isDefault: !!defaultIntegration && id === defaultIntegration.id,\n                    isDisabled: is_disabled,\n                    displayName: display_name,\n                    requiresConsent: should_show_consent_popup,\n                    type,\n                };\n            },\n        );\n\n        // Sort integrations by displayOrder\n        return integrations.sort(\n            (integrationA: Integration, integrationB: Integration) =>\n                integrationA.displayOrder - integrationB.displayOrder,\n        );\n    }\n}\n\nexport default OpenWith;\n"]},"metadata":{},"sourceType":"module"}