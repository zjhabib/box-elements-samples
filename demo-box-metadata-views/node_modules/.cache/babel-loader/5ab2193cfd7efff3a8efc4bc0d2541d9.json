{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Sidebar Additional Tab component\n * @author Box\n */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { bdlGray50 } from '../../../styles/variables';\nimport PlainButton from '../../../components/plain-button/PlainButton';\nimport IconEllipsis from '../../../icons/general/IconEllipsis';\nimport AdditionalTabTooltip from './AdditionalTabTooltip';\nimport AdditionalTabPlaceholder from './AdditionalTabPlaceholder';\nimport messages from './messages';\nimport './AdditionalTab.scss';\nvar BLOCKED_BY_SHEILD = 'BLOCKED_BY_SHIELD_ACCESS_POLICY';\nvar AdditionalTab = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(AdditionalTab, _React$PureComponent);\n  function AdditionalTab() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, AdditionalTab);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AdditionalTab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isErrored: false\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onImageError\", function () {\n      _this.props.onImageLoad();\n      _this.setState({\n        isErrored: true\n      });\n    });\n    return _this;\n  }\n  _createClass(AdditionalTab, [{\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      var status = this.props.status;\n      return status === BLOCKED_BY_SHEILD;\n    }\n  }, {\n    key: \"getDisabledReason\",\n    value: function getDisabledReason() {\n      var reason = '';\n      var status = this.props.status;\n      switch (status) {\n        case BLOCKED_BY_SHEILD:\n          reason = React.createElement(FormattedMessage, messages.blockedByShieldAccessPolicy);\n          break;\n        default: // noop\n      }\n\n      return reason;\n    }\n  }, {\n    key: \"getTabIcon\",\n    value: function getTabIcon() {\n      var _this$props = this.props,\n        id = _this$props.id,\n        iconUrl = _this$props.iconUrl,\n        onImageLoad = _this$props.onImageLoad,\n        title = _this$props.title;\n      var isErrored = this.state.isErrored;\n      var TabIcon;\n      if (isErrored) {\n        TabIcon = React.createElement(AdditionalTabPlaceholder, {\n          isLoading: false\n        });\n      } else if (id && id > 0) {\n        TabIcon = React.createElement(\"img\", {\n          className: \"bdl-AdditionalTab-icon\",\n          src: iconUrl,\n          onError: this.onImageError,\n          onLoad: onImageLoad,\n          alt: title\n        });\n      } else {\n        TabIcon = React.createElement(IconEllipsis, {\n          color: bdlGray50\n        });\n      }\n      return TabIcon;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        callbackFn = _this$props2.callback,\n        id = _this$props2.id,\n        isLoading = _this$props2.isLoading,\n        iconUrl = _this$props2.iconUrl,\n        ftuxTooltipData = _this$props2.ftuxTooltipData,\n        onImageLoad = _this$props2.onImageLoad,\n        title = _this$props2.title,\n        rest = _objectWithoutProperties(_this$props2, [\"callback\", \"id\", \"isLoading\", \"iconUrl\", \"ftuxTooltipData\", \"onImageLoad\", \"title\"]);\n      var isDisabled = this.isDisabled();\n      var className = classNames('bdl-AdditionalTab', {\n        'bdl-is-hidden': isLoading,\n        'bdl-is-disabled': isDisabled\n      });\n      var tooltipText = isDisabled ? this.getDisabledReason() : title;\n      return React.createElement(AdditionalTabTooltip, {\n        defaultTooltipText: tooltipText,\n        ftuxTooltipData: ftuxTooltipData,\n        isFtuxVisible: !isLoading\n      }, React.createElement(PlainButton, {\n        className: className,\n        \"data-testid\": \"additionaltab\",\n        type: \"button\",\n        isDisabled: isDisabled,\n        onClick: function onClick() {\n          return callbackFn({\n            id: id,\n            callbackData: rest\n          });\n        }\n      }, this.getTabIcon()));\n    }\n  }]);\n  return AdditionalTab;\n}(React.PureComponent);\nexport default AdditionalTab;","map":{"version":3,"sources":["../../../../src/elements/content-sidebar/additional-tabs/AdditionalTab.js"],"names":["React","classNames","FormattedMessage","bdlGray50","PlainButton","IconEllipsis","AdditionalTabTooltip","AdditionalTabPlaceholder","messages","BLOCKED_BY_SHEILD","AdditionalTab","PureComponent","isErrored","props","onImageLoad","setState","status","reason","blockedByShieldAccessPolicy","id","iconUrl","title","state","TabIcon","onImageError","callback","callbackFn","isLoading","ftuxTooltipData","rest","isDisabled","className","tooltipText","getDisabledReason","callbackData","getTabIcon"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Sidebar Additional Tab component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport { bdlGray50 } from '../../../styles/variables';\nimport PlainButton from '../../../components/plain-button/PlainButton';\nimport IconEllipsis from '../../../icons/general/IconEllipsis';\nimport AdditionalTabTooltip from './AdditionalTabTooltip';\nimport AdditionalTabPlaceholder from './AdditionalTabPlaceholder';\nimport messages from './messages';\nimport type { AdditionalSidebarTab, AdditionalSidebarTabFtuxData } from '../flowTypes';\n\nimport './AdditionalTab.scss';\n\ntype Props = {\n    ftuxTooltipData?: AdditionalSidebarTabFtuxData,\n    isLoading: boolean,\n    onImageLoad: () => void,\n    status?: string,\n} & AdditionalSidebarTab;\n\ntype State = {\n    isErrored: boolean,\n};\n\nconst BLOCKED_BY_SHEILD = 'BLOCKED_BY_SHIELD_ACCESS_POLICY';\n\nclass AdditionalTab extends React.PureComponent<Props, State> {\n    state = {\n        isErrored: false,\n    };\n\n    onImageError = () => {\n        this.props.onImageLoad();\n        this.setState({ isErrored: true });\n    };\n\n    isDisabled() {\n        const { status } = this.props;\n        return status === BLOCKED_BY_SHEILD;\n    }\n\n    getDisabledReason() {\n        let reason = '';\n        const { status } = this.props;\n        switch (status) {\n            case BLOCKED_BY_SHEILD:\n                reason = <FormattedMessage {...messages.blockedByShieldAccessPolicy} />;\n                break;\n            default:\n            // noop\n        }\n        return reason;\n    }\n\n    getTabIcon() {\n        const { id, iconUrl, onImageLoad, title } = this.props;\n        const { isErrored } = this.state;\n\n        let TabIcon;\n\n        if (isErrored) {\n            TabIcon = <AdditionalTabPlaceholder isLoading={false} />;\n        } else if (id && id > 0) {\n            TabIcon = (\n                <img\n                    className=\"bdl-AdditionalTab-icon\"\n                    src={iconUrl}\n                    onError={this.onImageError}\n                    onLoad={onImageLoad}\n                    alt={title}\n                />\n            );\n        } else {\n            TabIcon = <IconEllipsis color={bdlGray50} />;\n        }\n\n        return TabIcon;\n    }\n\n    render() {\n        const {\n            callback: callbackFn,\n            id,\n            isLoading,\n            iconUrl,\n            ftuxTooltipData,\n            onImageLoad,\n            title,\n            ...rest\n        } = this.props;\n\n        const isDisabled = this.isDisabled();\n\n        const className = classNames('bdl-AdditionalTab', {\n            'bdl-is-hidden': isLoading,\n            'bdl-is-disabled': isDisabled,\n        });\n\n        const tooltipText = isDisabled ? this.getDisabledReason() : title;\n\n        return (\n            <AdditionalTabTooltip\n                defaultTooltipText={tooltipText}\n                ftuxTooltipData={ftuxTooltipData}\n                isFtuxVisible={!isLoading}\n            >\n                <PlainButton\n                    className={className}\n                    data-testid=\"additionaltab\"\n                    type=\"button\"\n                    isDisabled={isDisabled}\n                    onClick={() => callbackFn({ id, callbackData: rest })}\n                >\n                    {this.getTabIcon()}\n                </PlainButton>\n            </AdditionalTabTooltip>\n        );\n    }\n}\n\nexport default AdditionalTab;\n"]},"metadata":{},"sourceType":"module"}