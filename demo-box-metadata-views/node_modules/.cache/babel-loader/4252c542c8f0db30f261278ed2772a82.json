{"ast":null,"code":"/**\n * \n * @file Pagination controls for navigation\n * @author Box\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PaginationMenu from './PaginationMenu';\nimport Button from '../../components/button';\nimport ButtonGroup from '../../components/button-group';\nimport IconPageBack from '../../icons/general/IconPageBack';\nimport IconPageForward from '../../icons/general/IconPageForward';\nimport Tooltip from '../../elements/common/Tooltip';\nimport messages from '../../elements/common/messages';\nvar PAGE_ICON_STYLE = {\n  height: 9,\n  width: 6\n};\nvar PaginationControls = function PaginationControls(_ref) {\n  var handleNextClick = _ref.handleNextClick,\n    handlePreviousClick = _ref.handlePreviousClick,\n    hasNextPage = _ref.hasNextPage,\n    hasPreviousPage = _ref.hasPreviousPage,\n    _ref$isOffsetBasedPag = _ref.isOffsetBasedPagination,\n    isOffsetBasedPagination = _ref$isOffsetBasedPag === void 0 ? true : _ref$isOffsetBasedPag,\n    onPageClick = _ref.onPageClick,\n    _ref$pageCount = _ref.pageCount,\n    pageCount = _ref$pageCount === void 0 ? 0 : _ref$pageCount,\n    _ref$pageNumber = _ref.pageNumber,\n    pageNumber = _ref$pageNumber === void 0 ? 0 : _ref$pageNumber;\n  return React.createElement(\"div\", {\n    className: \"bdl-Pagination\"\n  }, isOffsetBasedPagination && React.createElement(\"div\", {\n    className: \"bdl-Pagination-count\"\n  }, React.createElement(PaginationMenu, {\n    onPageClick: onPageClick,\n    pageCount: pageCount,\n    pageNumber: pageNumber\n  })), React.createElement(ButtonGroup, {\n    className: \"bdl-Pagination-nav\"\n  }, React.createElement(Tooltip, {\n    isDisabled: !hasPreviousPage,\n    text: React.createElement(FormattedMessage, messages.previousPage)\n  }, React.createElement(Button, {\n    isDisabled: !hasPreviousPage,\n    onClick: handlePreviousClick\n  }, React.createElement(IconPageBack, PAGE_ICON_STYLE))), React.createElement(Tooltip, {\n    isDisabled: !hasNextPage,\n    text: React.createElement(FormattedMessage, messages.nextPage)\n  }, React.createElement(Button, {\n    isDisabled: !hasNextPage,\n    onClick: handleNextClick\n  }, React.createElement(IconPageForward, PAGE_ICON_STYLE)))));\n};\nexport default PaginationControls;","map":{"version":3,"sources":["../../../src/features/pagination/PaginationControls.js"],"names":["React","FormattedMessage","PaginationMenu","Button","ButtonGroup","IconPageBack","IconPageForward","Tooltip","messages","PAGE_ICON_STYLE","height","width","PaginationControls","handleNextClick","handlePreviousClick","hasNextPage","hasPreviousPage","isOffsetBasedPagination","onPageClick","pageCount","pageNumber","previousPage","nextPage"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AAaA,IAAMC,eAAe,GAAG;EACpBC,MAAM,EAAE,CADY;EAEpBC,KAAK,EAAE;AAFa,CAAxB;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,IAAA,EASd;EAAA,IARTC,eAQS,GAAA,IAAA,CARTA,eAQS;IAPTC,mBAOS,GAAA,IAAA,CAPTA,mBAOS;IANTC,WAMS,GAAA,IAAA,CANTA,WAMS;IALTC,eAKS,GAAA,IAAA,CALTA,eAKS;IAAA,qBAAA,GAAA,IAAA,CAJTC,uBAIS;IAJTA,uBAIS,GAAA,qBAAA,KAAA,KAAA,CAAA,GAJiB,IAIjB,GAAA,qBAAA;IAHTC,WAGS,GAAA,IAAA,CAHTA,WAGS;IAAA,cAAA,GAAA,IAAA,CAFTC,SAES;IAFTA,SAES,GAAA,cAAA,KAAA,KAAA,CAAA,GAFG,CAEH,GAAA,cAAA;IAAA,eAAA,GAAA,IAAA,CADTC,UACS;IADTA,UACS,GAAA,eAAA,KAAA,KAAA,CAAA,GADI,CACJ,GAAA,eAAA;EACT,OACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EACKH,uBAAuB,IACpB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,cAAD,EAAA;IAAgB,WAAW,EAAEC,WAA7B;IAA0C,SAAS,EAAEC,SAArD;IAAgE,UAAU,EAAEC;EAA5E,CAAA,CADJ,CAFR,EAMI,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA;IAAa,SAAS,EAAC;EAAvB,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA;IAAS,UAAU,EAAE,CAACJ,eAAtB;IAAuC,IAAI,EAAE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBR,QAAQ,CAACa,YAA/B;EAA7C,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAA;IAAQ,UAAU,EAAE,CAACL,eAArB;IAAsC,OAAO,EAAEF;EAA/C,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,YAAD,EAAkBL,eAAlB,CADJ,CADJ,CADJ,EAMI,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA;IAAS,UAAU,EAAE,CAACM,WAAtB;IAAmC,IAAI,EAAE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBP,QAAQ,CAACc,QAA/B;EAAzC,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAA;IAAQ,UAAU,EAAE,CAACP,WAArB;IAAkC,OAAO,EAAEF;EAA3C,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAqBJ,eAArB,CADJ,CADJ,CANJ,CANJ,CADJ;AAqBH,CA/BD;AAiCA,eAAeG,kBAAf","sourcesContent":["/**\n * @flow strict\n * @file Pagination controls for navigation\n * @author Box\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PaginationMenu from './PaginationMenu';\nimport Button from '../../components/button';\nimport ButtonGroup from '../../components/button-group';\nimport IconPageBack from '../../icons/general/IconPageBack';\nimport IconPageForward from '../../icons/general/IconPageForward';\nimport Tooltip from '../../elements/common/Tooltip';\nimport messages from '../../elements/common/messages';\n\ntype Props = {\n    handleNextClick: () => void,\n    handlePreviousClick: () => void,\n    hasNextPage: boolean,\n    hasPreviousPage: boolean,\n    isOffsetBasedPagination?: boolean,\n    onPageClick?: number => void,\n    pageCount?: number,\n    pageNumber?: number,\n};\n\nconst PAGE_ICON_STYLE = {\n    height: 9,\n    width: 6,\n};\n\nconst PaginationControls = ({\n    handleNextClick,\n    handlePreviousClick,\n    hasNextPage,\n    hasPreviousPage,\n    isOffsetBasedPagination = true,\n    onPageClick,\n    pageCount = 0,\n    pageNumber = 0,\n}: Props) => {\n    return (\n        <div className=\"bdl-Pagination\">\n            {isOffsetBasedPagination && (\n                <div className=\"bdl-Pagination-count\">\n                    <PaginationMenu onPageClick={onPageClick} pageCount={pageCount} pageNumber={pageNumber} />\n                </div>\n            )}\n            <ButtonGroup className=\"bdl-Pagination-nav\">\n                <Tooltip isDisabled={!hasPreviousPage} text={<FormattedMessage {...messages.previousPage} />}>\n                    <Button isDisabled={!hasPreviousPage} onClick={handlePreviousClick}>\n                        <IconPageBack {...PAGE_ICON_STYLE} />\n                    </Button>\n                </Tooltip>\n                <Tooltip isDisabled={!hasNextPage} text={<FormattedMessage {...messages.nextPage} />}>\n                    <Button isDisabled={!hasNextPage} onClick={handleNextClick}>\n                        <IconPageForward {...PAGE_ICON_STYLE} />\n                    </Button>\n                </Tooltip>\n            </ButtonGroup>\n        </div>\n    );\n};\n\nexport default PaginationControls;\n"]},"metadata":{},"sourceType":"module"}