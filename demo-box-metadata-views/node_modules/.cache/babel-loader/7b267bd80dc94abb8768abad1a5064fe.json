{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\n/**\n * \n * @file Helper for the box Groups API\n * @author Box\n */\nimport noop from 'lodash/noop';\nimport Base from './Base';\nvar Groups = /*#__PURE__*/\nfunction (_Base) {\n  _inherits(Groups, _Base);\n  function Groups() {\n    _classCallCheck(this, Groups);\n    return _possibleConstructorReturn(this, _getPrototypeOf(Groups).apply(this, arguments));\n  }\n  _createClass(Groups, [{\n    key: \"getUrlForGroupCount\",\n    /**\n     * API URL to get group count\n     *\n     * @param {string} id a box group ID\n     * @return {string} formatted URL for retrieving the membership information\n     */\n    value: function getUrlForGroupCount(id) {\n      return \"\".concat(this.getBaseApiUrl(), \"/groups/\").concat(id, \"/memberships\");\n    }\n    /**\n     * API for creating a comment on a file\n     *\n     * @param {string} id a box group ID\n     * @param {Function} [successCallback] callback for handling a valid server response\n     * @param {Function} [errorCallback] handle errors raised by backend or connection errors\n     * @return {Promise<{}>} Promise which resolves with the payload, including the total_count\n     */\n  }, {\n    key: \"getGroupCount\",\n    value: function getGroupCount(_ref) {\n      var _this = this;\n      var _ref$errorCallback = _ref.errorCallback,\n        _errorCallback = _ref$errorCallback === void 0 ? noop : _ref$errorCallback,\n        _ref$successCallback = _ref.successCallback,\n        _successCallback = _ref$successCallback === void 0 ? noop : _ref$successCallback,\n        group = _ref.group,\n        file = _ref.file;\n      return new Promise(function (resolve, reject) {\n        return _this.get({\n          id: file.id,\n          url: _this.getUrlForGroupCount(group.id),\n          successCallback: function successCallback() {\n            _successCallback.apply(void 0, arguments);\n            resolve.apply(void 0, arguments);\n          },\n          errorCallback: function errorCallback() {\n            _errorCallback.apply(void 0, arguments);\n            reject();\n          },\n          requestData: {\n            params: {\n              limit: 1\n            }\n          }\n        });\n      });\n    }\n  }]);\n  return Groups;\n}(Base);\nexport default Groups;","map":{"version":3,"sources":["../../src/api/Groups.js"],"names":["noop","Base","Groups","id","getBaseApiUrl","errorCallback","successCallback","group","file","Promise","resolve","reject","get","url","getUrlForGroupCount","requestData","params","limit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAKA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;IAGMC,M;;;;;;;;;IACF;;;;;;wCAMoBC,E,EAAoB;MACpC,OAAA,EAAA,CAAA,MAAA,CAAU,IAAA,CAAKC,aAAL,CAAA,CAAV,EAAA,UAAA,CAAA,CAAA,MAAA,CAAyCD,EAAzC,EAAA,cAAA,CAAA;IACH;IAED;;;;;;;;;;wCAkBqC;MAAA,IAAA,KAAA,GAAA,IAAA;MAAA,IAAA,kBAAA,GAAA,IAAA,CATjCE,aASiC;QATjCA,cASiC,GAAA,kBAAA,KAAA,KAAA,CAAA,GATjBL,IASiB,GAAA,kBAAA;QAAA,oBAAA,GAAA,IAAA,CARjCM,eAQiC;QARjCA,gBAQiC,GAAA,oBAAA,KAAA,KAAA,CAAA,GARfN,IAQe,GAAA,oBAAA;QAPjCO,KAOiC,GAAA,IAAA,CAPjCA,KAOiC;QANjCC,IAMiC,GAAA,IAAA,CANjCA,IAMiC;MACjC,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAA;QAAA,OACf,KAAI,CAACC,GAAL,CAAS;UACLT,EAAE,EAAEK,IAAI,CAACL,EADJ;UAELU,GAAG,EAAE,KAAI,CAACC,mBAAL,CAAyBP,KAAK,CAACJ,EAA/B,CAFA;UAGLG,eAAe,EAAE,SAAA,eAAA,CAAA,EAAa;YAC1BA,gBAAe,CAAA,KAAfA,CAAAA,KAAAA,CAAAA,EAAAA,SAAAA,CAAAA;YACAI,OAAO,CAAA,KAAPA,CAAAA,KAAAA,CAAAA,EAAAA,SAAAA,CAAAA;UACH,CANI;UAOLL,aAAa,EAAE,SAAA,aAAA,CAAA,EAAa;YACxBA,cAAa,CAAA,KAAbA,CAAAA,KAAAA,CAAAA,EAAAA,SAAAA,CAAAA;YACAM,MAAM,CAAA,CAAA;UACT,CAVI;UAWLI,WAAW,EAAE;YAAEC,MAAM,EAAE;cAAEC,KAAK,EAAE;YAAT;UAAV;QAXR,CAAT,CADe;MAAA,CAAZ,CAAP;IAeH;;;EA7CgBhB,I;AAgDrB,eAAeC,MAAf","sourcesContent":["/**\n * @flow\n * @file Helper for the box Groups API\n * @author Box\n */\nimport noop from 'lodash/noop';\nimport Base from './Base';\nimport type { ElementsErrorCallback } from '../common/types/api';\n\nclass Groups extends Base {\n    /**\n     * API URL to get group count\n     *\n     * @param {string} id a box group ID\n     * @return {string} formatted URL for retrieving the membership information\n     */\n    getUrlForGroupCount(id: string): string {\n        return `${this.getBaseApiUrl()}/groups/${id}/memberships`;\n    }\n\n    /**\n     * API for creating a comment on a file\n     *\n     * @param {string} id a box group ID\n     * @param {Function} [successCallback] callback for handling a valid server response\n     * @param {Function} [errorCallback] handle errors raised by backend or connection errors\n     * @return {Promise<{}>} Promise which resolves with the payload, including the total_count\n     */\n    getGroupCount({\n        errorCallback = noop,\n        successCallback = noop,\n        group,\n        file,\n    }: {\n        errorCallback?: ElementsErrorCallback,\n        file: { id: string },\n        group: { id: string },\n        successCallback?: Function,\n    }): Promise<{ total_count: number }> {\n        return new Promise((resolve, reject) =>\n            this.get({\n                id: file.id,\n                url: this.getUrlForGroupCount(group.id),\n                successCallback: (...args) => {\n                    successCallback(...args);\n                    resolve(...args);\n                },\n                errorCallback: (...args) => {\n                    errorCallback(...args);\n                    reject();\n                },\n                requestData: { params: { limit: 1 } },\n            }),\n        );\n    }\n}\n\nexport default Groups;\n"]},"metadata":{},"sourceType":"module"}