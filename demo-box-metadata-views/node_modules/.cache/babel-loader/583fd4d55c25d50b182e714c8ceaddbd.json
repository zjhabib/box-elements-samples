{"ast":null,"code":"import * as React from 'react';\nimport { isFeatureEnabled, getFeatureConfig } from './util';\nimport FeatureConsumer from './FeatureConsumer';\nimport * as types from './flowTypes';\nfunction FeatureFlag(_ref) {\n  var feature = _ref.feature,\n    _ref$enabled = _ref.enabled,\n    enabled = _ref$enabled === void 0 ? function () {\n      return null;\n    } : _ref$enabled,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? function () {\n      return null;\n    } : _ref$disabled,\n    children = _ref.children,\n    _ref$not = _ref.not,\n    not = _ref$not === void 0 ? false : _ref$not;\n  return React.createElement(FeatureConsumer, null, function (features) {\n    var isEnabled = not ? !isFeatureEnabled(features, feature) : isFeatureEnabled(features, feature);\n    var featureConfig = getFeatureConfig(features, feature);\n    if (children) return isEnabled && children;\n    return isEnabled ? enabled(featureConfig) : disabled();\n  });\n}\nexport default FeatureFlag;","map":{"version":3,"sources":["../../../../src/elements/common/feature-checking/FeatureFlag.js"],"names":["React","isFeatureEnabled","getFeatureConfig","FeatureConsumer","types","FeatureFlag","feature","enabled","disabled","children","not","isEnabled","features","featureConfig"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,QAAnD;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;AAEA,SAASC,WAAT,CAAA,IAAA,EAYG;EAAA,IAXCC,OAWD,GAAA,IAAA,CAXCA,OAWD;IAAA,YAAA,GAAA,IAAA,CAVCC,OAUD;IAVCA,OAUD,GAAA,YAAA,KAAA,KAAA,CAAA,GAVW,YAAA;MAAA,OAAM,IAAN;IAAA,CAUX,GAAA,YAAA;IAAA,aAAA,GAAA,IAAA,CATCC,QASD;IATCA,QASD,GAAA,aAAA,KAAA,KAAA,CAAA,GATY,YAAA;MAAA,OAAM,IAAN;IAAA,CASZ,GAAA,aAAA;IARCC,QAQD,GAAA,IAAA,CARCA,QAQD;IAAA,QAAA,GAAA,IAAA,CAPCC,GAOD;IAPCA,GAOD,GAAA,QAAA,KAAA,KAAA,CAAA,GAPO,KAOP,GAAA,QAAA;EACC,OACI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA,IAAA,EACK,UAAA,QAAQ,EAAI;IACT,IAAMC,SAAS,GAAGD,GAAG,GAAG,CAACT,gBAAgB,CAACW,QAAD,EAAWN,OAAX,CAApB,GAA0CL,gBAAgB,CAACW,QAAD,EAAWN,OAAX,CAA/E;IACA,IAAMO,aAAa,GAAGX,gBAAgB,CAACU,QAAD,EAAWN,OAAX,CAAtC;IACA,IAAIG,QAAJ,EAAc,OAAOE,SAAS,IAAIF,QAApB;IACd,OAAOE,SAAS,GAAGJ,OAAO,CAACM,aAAD,CAAV,GAA4BL,QAAQ,CAAA,CAApD;EACH,CANL,CADJ;AAUH;AAED,eAAeH,WAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { isFeatureEnabled, getFeatureConfig } from './util';\nimport FeatureConsumer from './FeatureConsumer';\nimport * as types from './flowTypes';\n\nfunction FeatureFlag({\n    feature,\n    enabled = () => null,\n    disabled = () => null,\n    children,\n    not = false,\n}: {\n    children?: React.Node,\n    disabled?: () => React.Node,\n    enabled?: types.FeatureOptions => React.Node,\n    feature: string,\n    not?: boolean, // invert the flag - recommended for use with a child component, not \"enabled\"/\"disabled\"\n}) {\n    return (\n        <FeatureConsumer>\n            {features => {\n                const isEnabled = not ? !isFeatureEnabled(features, feature) : isFeatureEnabled(features, feature);\n                const featureConfig = getFeatureConfig(features, feature);\n                if (children) return isEnabled && children;\n                return isEnabled ? enabled(featureConfig) : disabled();\n            }}\n        </FeatureConsumer>\n    );\n}\n\nexport default FeatureFlag;\n"]},"metadata":{},"sourceType":"module"}