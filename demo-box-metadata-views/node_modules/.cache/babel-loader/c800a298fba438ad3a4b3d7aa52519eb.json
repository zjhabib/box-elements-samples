{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * \n * @file Active state component for Activity Feed\n */\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport ActivityItem from './ActivityItem';\nimport AppActivity from '../app-activity';\nimport AnnotationActivity from '../annotations';\nimport Comment from '../comment';\nimport TaskNew from '../task-new';\nimport Version, { CollapsedVersion } from '../version';\nimport withErrorHandling from '../../withErrorHandling';\nvar ActiveState = function ActiveState(_ref) {\n  var activeFeedEntryId = _ref.activeFeedEntryId,\n    activeFeedEntryType = _ref.activeFeedEntryType,\n    activeFeedItemRef = _ref.activeFeedItemRef,\n    approverSelectorContacts = _ref.approverSelectorContacts,\n    currentFileVersionId = _ref.currentFileVersionId,\n    currentUser = _ref.currentUser,\n    items = _ref.items,\n    mentionSelectorContacts = _ref.mentionSelectorContacts,\n    getMentionWithQuery = _ref.getMentionWithQuery,\n    onAnnotationDelete = _ref.onAnnotationDelete,\n    onAnnotationSelect = _ref.onAnnotationSelect,\n    onAppActivityDelete = _ref.onAppActivityDelete,\n    onCommentDelete = _ref.onCommentDelete,\n    onCommentEdit = _ref.onCommentEdit,\n    onTaskDelete = _ref.onTaskDelete,\n    onTaskEdit = _ref.onTaskEdit,\n    onTaskView = _ref.onTaskView,\n    onTaskAssignmentUpdate = _ref.onTaskAssignmentUpdate,\n    onTaskModalClose = _ref.onTaskModalClose,\n    onVersionInfo = _ref.onVersionInfo,\n    translations = _ref.translations,\n    getApproverWithQuery = _ref.getApproverWithQuery,\n    getAvatarUrl = _ref.getAvatarUrl,\n    getUserProfileUrl = _ref.getUserProfileUrl;\n  var activeEntry = items.find(function (_ref2) {\n    var id = _ref2.id,\n      type = _ref2.type;\n    return id === activeFeedEntryId && type === activeFeedEntryType;\n  });\n  return React.createElement(\"ul\", {\n    className: \"bcs-activity-feed-active-state\"\n  }, items.map(function (item) {\n    var isFocused = item === activeEntry;\n    var refValue = isFocused ? activeFeedItemRef : undefined;\n    var itemFileVersionId = getProp(item, 'file_version.id');\n    switch (item.type) {\n      case 'comment':\n        return React.createElement(ActivityItem, {\n          key: item.type + item.id,\n          className: \"bcs-activity-feed-comment\",\n          \"data-testid\": \"comment\",\n          isFocused: isFocused,\n          ref: refValue\n        }, React.createElement(Comment, _extends({}, item, {\n          currentUser: currentUser,\n          getAvatarUrl: getAvatarUrl,\n          getMentionWithQuery: getMentionWithQuery,\n          getUserProfileUrl: getUserProfileUrl,\n          mentionSelectorContacts: mentionSelectorContacts,\n          onDelete: onCommentDelete,\n          onEdit: onCommentEdit,\n          permissions: {\n            can_delete: getProp(item.permissions, 'can_delete', false),\n            can_edit: getProp(item.permissions, 'can_edit', false)\n          },\n          translations: translations\n        })));\n      case 'task':\n        return React.createElement(ActivityItem, {\n          key: item.type + item.id,\n          className: \"bcs-activity-feed-task-new\",\n          \"data-testid\": \"task\",\n          isFocused: isFocused,\n          ref: refValue\n        }, React.createElement(TaskNew, _extends({}, item, {\n          approverSelectorContacts: approverSelectorContacts,\n          currentUser: currentUser,\n          getApproverWithQuery: getApproverWithQuery,\n          getAvatarUrl: getAvatarUrl,\n          getUserProfileUrl: getUserProfileUrl,\n          onAssignmentUpdate: onTaskAssignmentUpdate,\n          onDelete: onTaskDelete,\n          onEdit: onTaskEdit,\n          onView: onTaskView,\n          onModalClose: onTaskModalClose,\n          translations: translations\n        })));\n      case 'file_version':\n        return React.createElement(ActivityItem, {\n          key: item.type + item.id,\n          className: \"bcs-version-item\",\n          \"data-testid\": \"version\"\n        }, item.versions ?\n        // $FlowFixMe\n        React.createElement(CollapsedVersion, _extends({}, item, {\n          onInfo: onVersionInfo\n        })) :\n        // $FlowFixMe\n        React.createElement(Version, _extends({}, item, {\n          onInfo: onVersionInfo\n        })));\n      case 'app_activity':\n        return React.createElement(ActivityItem, {\n          key: item.type + item.id,\n          className: \"bcs-activity-feed-app-activity\",\n          \"data-testid\": \"app-activity\"\n        }, React.createElement(AppActivity, _extends({\n          currentUser: currentUser,\n          onDelete: onAppActivityDelete\n        }, item)));\n      case 'annotation':\n        return React.createElement(ActivityItem, {\n          key: item.type + item.id,\n          className: \"bcs-activity-feed-annotation-activity\",\n          \"data-testid\": \"annotation-activity\",\n          isFocused: isFocused,\n          ref: refValue\n        }, React.createElement(AnnotationActivity, {\n          currentUser: currentUser,\n          getAvatarUrl: getAvatarUrl,\n          getUserProfileUrl: getUserProfileUrl,\n          isCurrentVersion: currentFileVersionId === itemFileVersionId,\n          item: item,\n          mentionSelectorContacts: mentionSelectorContacts,\n          onDelete: onAnnotationDelete,\n          onSelect: onAnnotationSelect\n        }));\n      default:\n        return null;\n    }\n  }));\n};\nexport { ActiveState as ActiveStateComponent };\nexport default withErrorHandling(ActiveState);","map":{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/activity-feed/ActiveState.js"],"names":["React","getProp","ActivityItem","AppActivity","AnnotationActivity","Comment","TaskNew","Version","CollapsedVersion","withErrorHandling","ActiveState","activeFeedEntryId","activeFeedEntryType","activeFeedItemRef","approverSelectorContacts","currentFileVersionId","currentUser","items","mentionSelectorContacts","getMentionWithQuery","onAnnotationDelete","onAnnotationSelect","onAppActivityDelete","onCommentDelete","onCommentEdit","onTaskDelete","onTaskEdit","onTaskView","onTaskAssignmentUpdate","onTaskModalClose","onVersionInfo","translations","getApproverWithQuery","getAvatarUrl","getUserProfileUrl","activeEntry","find","id","type","map","item","isFocused","refValue","undefined","itemFileVersionId","can_delete","permissions","can_edit","versions","ActiveStateComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Active state component for Activity Feed\n */\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport ActivityItem from './ActivityItem';\nimport AppActivity from '../app-activity';\nimport AnnotationActivity from '../annotations';\nimport Comment from '../comment';\nimport TaskNew from '../task-new';\nimport Version, { CollapsedVersion } from '../version';\nimport withErrorHandling from '../../withErrorHandling';\nimport type {\n    Annotation,\n    AnnotationPermission,\n    FeedItem,\n    FeedItems,\n    FocusableFeedItemType,\n} from '../../../../common/types/feed';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\n\ntype Props = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    activeFeedItemRef: { current: null | HTMLElement },\n    approverSelectorContacts?: SelectorItems<>,\n    currentFileVersionId: string,\n    currentUser?: User,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    items: FeedItems,\n    mentionSelectorContacts?: SelectorItems<>,\n    onAnnotationDelete?: ({ id: string, permissions: AnnotationPermission }) => void,\n    onAnnotationSelect?: (annotation: Annotation) => void,\n    onAppActivityDelete?: Function,\n    onCommentDelete?: Function,\n    onCommentEdit?: Function,\n    onTaskAssignmentUpdate?: Function,\n    onTaskDelete?: Function,\n    onTaskEdit?: Function,\n    onTaskModalClose?: Function,\n    onTaskView?: Function,\n    onVersionInfo?: Function,\n    translations?: Translations,\n};\n\nconst ActiveState = ({\n    activeFeedEntryId,\n    activeFeedEntryType,\n    activeFeedItemRef,\n    approverSelectorContacts,\n    currentFileVersionId,\n    currentUser,\n    items,\n    mentionSelectorContacts,\n    getMentionWithQuery,\n    onAnnotationDelete,\n    onAnnotationSelect,\n    onAppActivityDelete,\n    onCommentDelete,\n    onCommentEdit,\n    onTaskDelete,\n    onTaskEdit,\n    onTaskView,\n    onTaskAssignmentUpdate,\n    onTaskModalClose,\n    onVersionInfo,\n    translations,\n    getApproverWithQuery,\n    getAvatarUrl,\n    getUserProfileUrl,\n}: Props): React.Node => {\n    const activeEntry = items.find(({ id, type }) => id === activeFeedEntryId && type === activeFeedEntryType);\n\n    return (\n        <ul className=\"bcs-activity-feed-active-state\">\n            {items.map((item: FeedItem) => {\n                const isFocused = item === activeEntry;\n                const refValue = isFocused ? activeFeedItemRef : undefined;\n                const itemFileVersionId = getProp(item, 'file_version.id');\n\n                switch (item.type) {\n                    case 'comment':\n                        return (\n                            <ActivityItem\n                                key={item.type + item.id}\n                                className=\"bcs-activity-feed-comment\"\n                                data-testid=\"comment\"\n                                isFocused={isFocused}\n                                ref={refValue}\n                            >\n                                <Comment\n                                    {...item}\n                                    currentUser={currentUser}\n                                    getAvatarUrl={getAvatarUrl}\n                                    getMentionWithQuery={getMentionWithQuery}\n                                    getUserProfileUrl={getUserProfileUrl}\n                                    mentionSelectorContacts={mentionSelectorContacts}\n                                    onDelete={onCommentDelete}\n                                    onEdit={onCommentEdit}\n                                    permissions={{\n                                        can_delete: getProp(item.permissions, 'can_delete', false),\n                                        can_edit: getProp(item.permissions, 'can_edit', false),\n                                    }}\n                                    translations={translations}\n                                />\n                            </ActivityItem>\n                        );\n                    case 'task':\n                        return (\n                            <ActivityItem\n                                key={item.type + item.id}\n                                className=\"bcs-activity-feed-task-new\"\n                                data-testid=\"task\"\n                                isFocused={isFocused}\n                                ref={refValue}\n                            >\n                                <TaskNew\n                                    {...item}\n                                    approverSelectorContacts={approverSelectorContacts}\n                                    currentUser={currentUser}\n                                    getApproverWithQuery={getApproverWithQuery}\n                                    getAvatarUrl={getAvatarUrl}\n                                    getUserProfileUrl={getUserProfileUrl}\n                                    onAssignmentUpdate={onTaskAssignmentUpdate}\n                                    onDelete={onTaskDelete}\n                                    onEdit={onTaskEdit}\n                                    onView={onTaskView}\n                                    onModalClose={onTaskModalClose}\n                                    translations={translations}\n                                />\n                            </ActivityItem>\n                        );\n                    case 'file_version':\n                        return (\n                            <ActivityItem key={item.type + item.id} className=\"bcs-version-item\" data-testid=\"version\">\n                                {item.versions ? (\n                                    // $FlowFixMe\n                                    <CollapsedVersion {...item} onInfo={onVersionInfo} />\n                                ) : (\n                                    // $FlowFixMe\n                                    <Version {...item} onInfo={onVersionInfo} />\n                                )}\n                            </ActivityItem>\n                        );\n                    case 'app_activity':\n                        return (\n                            <ActivityItem\n                                key={item.type + item.id}\n                                className=\"bcs-activity-feed-app-activity\"\n                                data-testid=\"app-activity\"\n                            >\n                                <AppActivity currentUser={currentUser} onDelete={onAppActivityDelete} {...item} />\n                            </ActivityItem>\n                        );\n                    case 'annotation':\n                        return (\n                            <ActivityItem\n                                key={item.type + item.id}\n                                className=\"bcs-activity-feed-annotation-activity\"\n                                data-testid=\"annotation-activity\"\n                                isFocused={isFocused}\n                                ref={refValue}\n                            >\n                                <AnnotationActivity\n                                    currentUser={currentUser}\n                                    getAvatarUrl={getAvatarUrl}\n                                    getUserProfileUrl={getUserProfileUrl}\n                                    isCurrentVersion={currentFileVersionId === itemFileVersionId}\n                                    item={item}\n                                    mentionSelectorContacts={mentionSelectorContacts}\n                                    onDelete={onAnnotationDelete}\n                                    onSelect={onAnnotationSelect}\n                                />\n                            </ActivityItem>\n                        );\n                    default:\n                        return null;\n                }\n            })}\n        </ul>\n    );\n};\n\nexport { ActiveState as ActiveStateComponent };\nexport default withErrorHandling(ActiveState);\n"]},"metadata":{},"sourceType":"module"}