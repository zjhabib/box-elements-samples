{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport RadioButton from './RadioButton';\nvar RadioButtonField = function RadioButtonField(_ref) {\n  var field = _ref.field,\n    value = _ref.value,\n    rest = _objectWithoutProperties(_ref, [\"field\", \"value\"]);\n  if (!field) {\n    return React.createElement(RadioButton, _extends({\n      value: value\n    }, rest));\n  }\n  var fieldValue = field.value,\n    fieldRest = _objectWithoutProperties(field, [\"value\"]);\n  return React.createElement(RadioButton, _extends({}, fieldRest, rest, {\n    value: value,\n    isSelected: value === fieldValue\n  }));\n};\nexport default RadioButtonField;","map":{"version":3,"sources":["../../../src/components/radio/RadioButtonField.tsx"],"names":["React","RadioButton","RadioButtonField","field","value","rest","fieldValue","fieldRest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,WAAP,MAA8C,eAA9C;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,IAAA,EAAsD;EAAA,IAAnDC,KAAmD,GAAA,IAAA,CAAnDA,KAAmD;IAA5CC,KAA4C,GAAA,IAAA,CAA5CA,KAA4C;IAAlCC,IAAkC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;EAC3E,IAAI,CAACF,KAAL,EAAY;IACR,OAAO,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA,QAAA,CAAA;MAAa,KAAK,EAAEC;IAApB,CAAA,EAA+BC,IAA/B,CAAA,CAAP;EACH;EAH0E,IAI5DC,UAJ4D,GAI/BH,KAJ+B,CAInEC,KAJmE;IAI7CG,SAJ6C,GAAA,wBAAA,CAI/BJ,KAJ+B,EAAA,CAAA,OAAA,CAAA,CAAA;EAK3E,OAAO,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAiBI,SAAjB,EAAgCF,IAAhC,EAAA;IAAsC,KAAK,EAAED,KAA7C;IAAoD,UAAU,EAAEA,KAAK,KAAKE;EAA1E,CAAA,CAAA,CAAP;AACH,CAND;AAQA,eAAeJ,gBAAf","sourcesContent":["import * as React from 'react';\nimport { FieldProps } from 'formik';\n\nimport RadioButton, { RadioButtonProps } from './RadioButton';\n\nexport type RadioButtonFieldProps = Partial<FieldProps> & RadioButtonProps;\n\nconst RadioButtonField = ({ field, value, ...rest }: RadioButtonFieldProps) => {\n    if (!field) {\n        return <RadioButton value={value} {...rest} />;\n    }\n    const { value: fieldValue, ...fieldRest } = field;\n    return <RadioButton {...fieldRest} {...rest} value={value} isSelected={value === fieldValue} />;\n};\n\nexport default RadioButtonField;\n"]},"metadata":{},"sourceType":"module"}