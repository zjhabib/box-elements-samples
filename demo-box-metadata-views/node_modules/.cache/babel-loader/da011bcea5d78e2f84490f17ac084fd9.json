{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\n/**\n * \n * @file Form to invoke an integration via POST\n * @author Box\n */\nimport React, { PureComponent } from 'react';\nimport { HTTP_POST } from '../../constants';\nvar ExecuteForm = /*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ExecuteForm, _PureComponent);\n  function ExecuteForm(props) {\n    var _this;\n    _classCallCheck(this, ExecuteForm);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExecuteForm).call(this, props));\n    _this.ref = React.createRef();\n    return _this;\n  }\n  _createClass(ExecuteForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var onSubmit = this.props.onSubmit;\n      this.ref.current.submit();\n      onSubmit();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        _this$props$executePo = _this$props.executePostData,\n        url = _this$props$executePo.url,\n        params = _this$props$executePo.params,\n        id = _this$props.id,\n        windowName = _this$props.windowName;\n      return React.createElement(\"form\", {\n        ref: this.ref,\n        action: url,\n        id: \"bcow-execute-form-\".concat(id),\n        method: HTTP_POST,\n        rel: \"noreferrer noopener\",\n        target: windowName || '_blank'\n      }, params && params.map(function (_ref) {\n        var key = _ref.key,\n          value = _ref.value;\n        return React.createElement(\"input\", {\n          key: key,\n          name: key,\n          type: \"hidden\",\n          value: value\n        });\n      }));\n    }\n  }]);\n  return ExecuteForm;\n}(PureComponent);\nexport default ExecuteForm;","map":{"version":3,"sources":["../../../src/elements/content-open-with/ExecuteForm.js"],"names":["React","PureComponent","HTTP_POST","ExecuteForm","props","ref","createRef","onSubmit","current","submit","executePostData","url","params","id","windowName","map","key","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,SAAT,QAA0B,iBAA1B;IAUMC,W;;;EAGF,SAAA,WAAA,CAAYC,KAAZ,EAA0B;IAAA,IAAA,KAAA;IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,CAAA;IACtB,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,WAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAN,CAAA,CAAA;IACA,KAAA,CAAKC,GAAL,GAAWL,KAAK,CAACM,SAANN,CAAAA,CAAX;IAFsB,OAAA,KAAA;EAGzB;;;wCAEmB;MAAA,IACRO,QADQ,GACY,IAAA,CAAKH,KADjB,CACRG,QADQ;MAEhB,IAAA,CAAKF,GAAL,CAASG,OAAT,CAAiBC,MAAjB,CAAA,CAAA;MACAF,QAAQ,CAAA,CAAA;IACX;;;6BAEQ;MAAA,IAAA,WAAA,GAKM,IAAA,CAAKH,KALX;QAAA,qBAAA,GAAA,WAAA,CAEDM,eAFC;QAEkBC,GAFlB,GAAA,qBAAA,CAEkBA,GAFlB;QAEuBC,MAFvB,GAAA,qBAAA,CAEuBA,MAFvB;QAGDC,EAHC,GAAA,WAAA,CAGDA,EAHC;QAIDC,UAJC,GAAA,WAAA,CAIDA,UAJC;MAML,OACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;QACI,GAAG,EAAE,IAAA,CAAKT,GADd;QAEI,MAAM,EAAEM,GAFZ;QAGI,EAAE,EAAA,oBAAA,CAAA,MAAA,CAAuBE,EAAvB,CAHN;QAII,MAAM,EAAEX,SAJZ;QAKI,GAAG,EAAC,qBALR;QAMI,MAAM,EAAEY,UAAU,IAAI;MAN1B,CAAA,EAQKF,MAAM,IAAI,MAAM,CAACG,GAAP,CAAW,UAAA,IAAA,EAAA;QAAA,IAAGC,GAAH,GAAA,IAAA,CAAGA,GAAH;UAAQC,KAAR,GAAA,IAAA,CAAQA,KAAR;QAAA,OAAoB,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;UAAO,GAAG,EAAED,GAAZ;UAAiB,IAAI,EAAEA,GAAvB;UAA4B,IAAI,EAAC,QAAjC;UAA0C,KAAK,EAAEC;QAAjD,CAAA,CAApB;MAAA,CAAX,CARf,CADJ;IAYH;;;EAhCqBhB,a;AAmC1B,eAAeE,WAAf","sourcesContent":["/**\n * @flow\n * @file Form to invoke an integration via POST\n * @author Box\n */\n\nimport React, { PureComponent } from 'react';\nimport { HTTP_POST } from '../../constants';\nimport type { ExecuteAPI } from '../../common/types/integrations';\n\ntype Props = {\n    executePostData: ExecuteAPI,\n    id: string,\n    onSubmit: Function,\n    windowName: ?string,\n};\n\nclass ExecuteForm extends PureComponent<Props> {\n    ref: any;\n\n    constructor(props: Props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        const { onSubmit }: Props = this.props;\n        this.ref.current.submit();\n        onSubmit();\n    }\n\n    render() {\n        const {\n            executePostData: { url, params },\n            id,\n            windowName,\n        }: Props = this.props;\n        return (\n            <form\n                ref={this.ref}\n                action={url}\n                id={`bcow-execute-form-${id}`}\n                method={HTTP_POST}\n                rel=\"noreferrer noopener\"\n                target={windowName || '_blank'}\n            >\n                {params && params.map(({ key, value }) => <input key={key} name={key} type=\"hidden\" value={value} />)}\n            </form>\n        );\n    }\n}\n\nexport default ExecuteForm;\n"]},"metadata":{},"sourceType":"module"}