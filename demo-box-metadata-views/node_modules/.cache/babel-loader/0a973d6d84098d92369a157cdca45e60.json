{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport FeatureProvider from './FeatureProvider';\nfunction withFeatureProvider(WrappedComponent) {\n  function wrapComponent(_ref, ref) {\n    var features = _ref.features,\n      props = _objectWithoutProperties(_ref, [\"features\"]);\n    return React.createElement(FeatureProvider, {\n      features: features\n    }, React.createElement(WrappedComponent, _extends({}, props, {\n      ref: ref\n    })));\n  }\n  var wrappedName = WrappedComponent.displayName || WrappedComponent.name || 'component';\n  wrapComponent.displayName = \"withFeatureProvider(\".concat(wrappedName, \")\"); // $FlowFixMe forwardRef not supported until Flow 0.89.0\n\n  return React.forwardRef(wrapComponent);\n}\nexport default withFeatureProvider;","map":{"version":3,"sources":["../../../../src/elements/common/feature-checking/withFeatureProvider.js"],"names":["React","FeatureProvider","withFeatureProvider","WrappedComponent","wrapComponent","features","props","ref","wrappedName","displayName","name","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAOA,SAASC,mBAAT,CAA6BC,gBAA7B,EAAwE;EACpE,SAASC,aAAT,CAAA,IAAA,EAA6DG,GAA7D,EAAkE;IAAA,IAAzCF,QAAyC,GAAA,IAAA,CAAzCA,QAAyC;MAA5BC,KAA4B,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA;IAC9D,OACI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA;MAAiB,QAAQ,EAAED;IAA3B,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAsBC,KAAtB,EAAA;MAA6B,GAAG,EAAEC;IAAlC,CAAA,CAAA,CADJ,CADJ;EAKH;EACD,IAAMC,WAAW,GAAGL,gBAAgB,CAACM,WAAjBN,IAAgCA,gBAAgB,CAACO,IAAjDP,IAAyD,WAA7E;EACAC,aAAa,CAACK,WAAdL,GAAAA,sBAAAA,CAAAA,MAAAA,CAAmDI,WAAnDJ,EAAAA,GAAAA,CAAAA,CAToE,CAUpE;;EACA,OAAOJ,KAAK,CAACW,UAANX,CAAiBI,aAAjBJ,CAAP;AACH;AAED,eAAeE,mBAAf","sourcesContent":["// @flow strict\nimport * as React from 'react';\nimport FeatureProvider from './FeatureProvider';\nimport type { FeatureConfig } from './flowTypes';\n\ntype WrapperProps = {\n    features: FeatureConfig,\n};\n\nfunction withFeatureProvider(WrappedComponent: React.ComponentType<{}>) {\n    function wrapComponent({ features, ...props }: WrapperProps, ref) {\n        return (\n            <FeatureProvider features={features}>\n                <WrappedComponent {...props} ref={ref} />\n            </FeatureProvider>\n        );\n    }\n    const wrappedName = WrappedComponent.displayName || WrappedComponent.name || 'component';\n    wrapComponent.displayName = `withFeatureProvider(${wrappedName})`;\n    // $FlowFixMe forwardRef not supported until Flow 0.89.0\n    return React.forwardRef(wrapComponent);\n}\n\nexport default withFeatureProvider;\n"]},"metadata":{},"sourceType":"module"}