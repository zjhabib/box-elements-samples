{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport startCase from 'lodash/startCase';\nimport LabelPillIcon from './LabelPillIcon';\nimport LabelPillText from './LabelPillText';\nimport './LabelPill.scss';\nexport var LabelPillStatus;\n(function (LabelPillStatus) {\n  LabelPillStatus[\"DEFAULT\"] = \"default\";\n  LabelPillStatus[\"INFO\"] = \"info\";\n  LabelPillStatus[\"HIGHLIGHT\"] = \"highlight\";\n  LabelPillStatus[\"SUCCESS\"] = \"success\";\n  LabelPillStatus[\"WARNING\"] = \"warning\";\n  LabelPillStatus[\"ALERT\"] = \"alert\";\n  LabelPillStatus[\"ERROR\"] = \"error\";\n})(LabelPillStatus || (LabelPillStatus = {}));\nexport var LabelPillSize;\n(function (LabelPillSize) {\n  LabelPillSize[\"REGULAR\"] = \"regular\";\n  LabelPillSize[\"LARGE\"] = \"large\";\n})(LabelPillSize || (LabelPillSize = {}));\nvar LabelPillContainer = React.forwardRef(function (props, ref) {\n  var children = props.children,\n    _props$type = props.type,\n    type = _props$type === void 0 ? LabelPillStatus.DEFAULT : _props$type,\n    _props$size = props.size,\n    size = _props$size === void 0 ? LabelPillSize.REGULAR : _props$size,\n    className = props.className,\n    rest = _objectWithoutProperties(props, [\"children\", \"type\", \"size\", \"className\"]);\n  var labelPillClasses = classNames('bdl-LabelPill', \"bdl-LabelPill--\".concat(type), \"bdl-LabelPill--size\".concat(startCase(size)), className);\n  return React.createElement(\"span\", _extends({\n    ref: ref,\n    className: labelPillClasses\n  }, rest), children);\n});\nLabelPillContainer.displayName = 'LabelPill';\nvar LabelPill = {\n  Pill: LabelPillContainer,\n  Text: LabelPillText,\n  Icon: LabelPillIcon\n};\nexport default LabelPill;","map":{"version":3,"sources":["../../../src/components/label-pill/LabelPill.tsx"],"names":["React","classNames","startCase","LabelPillIcon","LabelPillText","LabelPillStatus","LabelPillSize","LabelPillContainer","forwardRef","props","ref","children","type","DEFAULT","size","REGULAR","className","rest","labelPillClasses","displayName","LabelPill","Pill","Text","Icon"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,kBAAP;AAEA,OAAA,IAAYC,eAAZ;WAAYA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;EAAAA,e;GAAAA,e,KAAAA,e;AAUZ,OAAA,IAAYC,aAAZ;WAAYA,a;EAAAA,a;EAAAA,a;GAAAA,a,KAAAA,a;AAgBZ,IAAMC,kBAAkB,GAAG,KAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAwBC,GAAxB,EAA4D;EAAA,IAC5FC,QAD4F,GACGF,KADH,CAC5FE,QAD4F;IAAA,WAAA,GACGF,KADH,CAClFG,IADkF;IAClFA,IADkF,GAAA,WAAA,KAAA,KAAA,CAAA,GAC3EP,eAAe,CAACQ,OAD2D,GAAA,WAAA;IAAA,WAAA,GACGJ,KADH,CAClDK,IADkD;IAClDA,IADkD,GAAA,WAAA,KAAA,KAAA,CAAA,GAC3CR,aAAa,CAACS,OAD6B,GAAA,WAAA;IACpBC,SADoB,GACGP,KADH,CACpBO,SADoB;IACNC,IADM,GAAA,wBAAA,CACGR,KADH,EAAA,CAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,WAAA,CAAA,CAAA;EAEpG,IAAMS,gBAAgB,GAAGjB,UAAU,CAC/B,eAD+B,EAAA,iBAAA,CAAA,MAAA,CAEbW,IAFa,CAAA,EAAA,qBAAA,CAAA,MAAA,CAGTV,SAAS,CAACY,IAAD,CAHA,CAAA,EAI/BE,SAJ+B,CAAnC;EAMA,OACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;IAAM,GAAG,EAAEN,GAAX;IAAgB,SAAS,EAAEQ;EAA3B,CAAA,EAAiDD,IAAjD,CAAA,EACKN,QADL,CADJ;AAKH,CAb0B,CAA3B;AAeAJ,kBAAkB,CAACY,WAAnBZ,GAAiC,WAAjCA;AAEA,IAAMa,SAAS,GAAG;EACdC,IAAI,EAAEd,kBADQ;EAEde,IAAI,EAAElB,aAFQ;EAGdmB,IAAI,EAAEpB;AAHQ,CAAlB;AAMA,eAAeiB,SAAf","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport startCase from 'lodash/startCase';\nimport LabelPillIcon from './LabelPillIcon';\nimport LabelPillText from './LabelPillText';\n\nimport './LabelPill.scss';\n\nexport enum LabelPillStatus {\n    DEFAULT = 'default',\n    INFO = 'info',\n    HIGHLIGHT = 'highlight',\n    SUCCESS = 'success',\n    WARNING = 'warning',\n    ALERT = 'alert',\n    ERROR = 'error',\n}\n\nexport enum LabelPillSize {\n    REGULAR = 'regular',\n    LARGE = 'large',\n}\n\nexport interface LabelPillProps {\n    /** Content, wrapped in either LabelPill.Text or LabelPill.Icon */\n    children: Array<React.ReactChild> | React.ReactChild;\n    /** Type of pill */\n    type?: LabelPillStatus;\n    /** Size of pill */\n    size?: LabelPillSize;\n    /** Additional CSS classname(s) */\n    className?: string;\n}\n\nconst LabelPillContainer = React.forwardRef((props: LabelPillProps, ref: React.Ref<HTMLSpanElement>) => {\n    const { children, type = LabelPillStatus.DEFAULT, size = LabelPillSize.REGULAR, className, ...rest } = props;\n    const labelPillClasses = classNames(\n        'bdl-LabelPill',\n        `bdl-LabelPill--${type}`,\n        `bdl-LabelPill--size${startCase(size)}`,\n        className,\n    );\n    return (\n        <span ref={ref} className={labelPillClasses} {...rest}>\n            {children}\n        </span>\n    );\n});\n\nLabelPillContainer.displayName = 'LabelPill';\n\nconst LabelPill = {\n    Pill: LabelPillContainer,\n    Text: LabelPillText,\n    Icon: LabelPillIcon,\n};\n\nexport default LabelPill;\n"]},"metadata":{},"sourceType":"module"}