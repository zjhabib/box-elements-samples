{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Helper for the box collaborators API\n * @author Box\n */\nimport MarkerBasedAPI from './MarkerBasedAPI';\nimport { DEFAULT_MAX_COLLABORATORS } from '../constants';\nvar FileCollaborators = /*#__PURE__*/\nfunction (_MarkerBasedAPI) {\n  _inherits(FileCollaborators, _MarkerBasedAPI);\n  function FileCollaborators() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, FileCollaborators);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileCollaborators)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"successHandler\", function (data) {\n      if (_this.isDestroyed() || typeof _this.successCallback !== 'function') {\n        return;\n      } // Transform into \"mention selector\" format:\n\n      var collaboratorSelectorItems = data.entries.map(function (collab) {\n        var item;\n        if (collab.type === 'group') {\n          item = collab; // flow needs assignment to happen after type refinement\n        } else {\n          item = collab;\n          item.email = item.login; // transform user object\n        }\n\n        return {\n          id: collab.id,\n          name: collab.name,\n          item: item\n        };\n      });\n      _this.successCallback(_objectSpread({}, data, {\n        entries: collaboratorSelectorItems\n      }));\n    });\n    return _this;\n  }\n  _createClass(FileCollaborators, [{\n    key: \"getUrl\",\n    /**\n     * API URL for comments\n     *\n     * @param {string} [id] - a box file id\n     * @return {string} base url for files\n     */\n    value: function getUrl(id) {\n      if (!id) {\n        throw new Error('Missing file id!');\n      }\n      return \"\".concat(this.getBaseApiUrl(), \"/files/\").concat(id, \"/collaborators\");\n    }\n    /**\n     * Transform result of API response\n     *\n     * @param {Object} data the response data\n     */\n  }, {\n    key: \"getFileCollaborators\",\n    /**\n     * API for fetching collaborators on a file\n     *\n     * @param {string} id - the file id\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {Object} requestData - any additional request data\n     * @param {number} limit - the max number of collaborators to return\n     * @returns {void}\n     */\n    value: function getFileCollaborators(id, successCallback, errorCallback) {\n      var requestData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var limit = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : DEFAULT_MAX_COLLABORATORS;\n      // NOTE: successCallback is called with the result\n      // of this.successHandler, not the API response!\n      this.markerGet({\n        id: id,\n        limit: limit,\n        successCallback: successCallback,\n        errorCallback: errorCallback,\n        requestData: requestData\n      });\n    }\n  }]);\n  return FileCollaborators;\n}(MarkerBasedAPI);\nexport default FileCollaborators;","map":{"version":3,"sources":["../../src/api/FileCollaborators.js"],"names":["MarkerBasedAPI","DEFAULT_MAX_COLLABORATORS","FileCollaborators","id","Error","getBaseApiUrl","data","isDestroyed","successCallback","collaboratorSelectorItems","entries","map","collab","item","type","email","login","name","errorCallback","requestData","limit","markerGet"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,yBAAT,QAA0C,cAA1C;IASMC,iB;;;;;;;;;;;qEAoBe,UAACI,IAAD,EAA0C;MACvD,IAAI,KAAA,CAAKC,WAAL,CAAA,CAAA,IAAsB,OAAO,KAAA,CAAKC,eAAZ,KAAgC,UAA1D,EAAsE;QAClE;MACH,CAHsD,CAKvD;;MACA,IAAMC,yBAA8D,GAAG,IAAI,CAACC,OAAL,CAAaC,GAAb,CACnE,UAACC,MAAD,EAAkC;QAC9B,IAAIC,IAAJ;QACA,IAAID,MAAM,CAACE,IAAPF,KAAgB,OAApB,EAA6B;UACzBC,IAAI,GAAGD,MAAPC,CADyB,CACV;QAClB,CAFD,MAEO;UACHA,IAAI,GAAGD,MAAPC;UACAA,IAAI,CAACE,KAALF,GAAaA,IAAI,CAACG,KAAlBH,CAFG,CAEsB;QAC5B;;QACD,OAAO;UACHV,EAAE,EAAES,MAAM,CAACT,EADR;UAEHc,IAAI,EAAEL,MAAM,CAACK,IAFV;UAGHJ,IAAI,EAAJA;QAHG,CAAP;MAKH,CAdkE,CAAvE;MAiBA,KAAA,CAAKL,eAAL,CAAA,aAAA,CAAA,CAAA,CAAA,EAA0BF,IAA1B,EAAA;QAAgCI,OAAO,EAAED;MAAzC,CAAA,CAAA,CAAA;IACH,C;;;;;IA3CD;;;;;;2BAMON,E,EAAoB;MACvB,IAAI,CAACA,EAAL,EAAS;QACL,MAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;MACH;MAED,OAAA,EAAA,CAAA,MAAA,CAAU,IAAA,CAAKC,aAAL,CAAA,CAAV,EAAA,SAAA,CAAA,CAAA,MAAA,CAAwCF,EAAxC,EAAA,gBAAA,CAAA;IACH;IAED;;;;;;;IA+BA;;;;;;;;;;yCAWIA,E,EACAK,e,EACAU,a,EAGI;MAAA,IAFJC,WAEI,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAFkB,CAAA,CAElB;MAAA,IADJC,KACI,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADYnB,yBACZ;MACJ;MACA;MACA,IAAA,CAAKoB,SAAL,CAAe;QACXlB,EAAE,EAAFA,EADW;QAEXiB,KAAK,EAALA,KAFW;QAGXZ,eAAe,EAAfA,eAHW;QAIXU,aAAa,EAAbA,aAJW;QAKXC,WAAW,EAAXA;MALW,CAAf,CAAA;IAOH;;;EAxE2BnB,c;AA2EhC,eAAeE,iBAAf","sourcesContent":["/**\n * @flow\n * @file Helper for the box collaborators API\n * @author Box\n */\n\nimport MarkerBasedAPI from './MarkerBasedAPI';\nimport { DEFAULT_MAX_COLLABORATORS } from '../constants';\nimport type { ElementsErrorCallback } from '../common/types/api';\nimport type { SelectorItem, SelectorItems, UserMini, GroupMini } from '../common/types/core';\n\ntype CollaboratorsAPIResponse = {\n    entries: Array<GroupMini | UserMini>,\n    next_marker: ?string,\n};\n\nclass FileCollaborators extends MarkerBasedAPI {\n    /**\n     * API URL for comments\n     *\n     * @param {string} [id] - a box file id\n     * @return {string} base url for files\n     */\n    getUrl(id: string): string {\n        if (!id) {\n            throw new Error('Missing file id!');\n        }\n\n        return `${this.getBaseApiUrl()}/files/${id}/collaborators`;\n    }\n\n    /**\n     * Transform result of API response\n     *\n     * @param {Object} data the response data\n     */\n    successHandler = (data: CollaboratorsAPIResponse): void => {\n        if (this.isDestroyed() || typeof this.successCallback !== 'function') {\n            return;\n        }\n\n        // Transform into \"mention selector\" format:\n        const collaboratorSelectorItems: SelectorItems<UserMini | GroupMini> = data.entries.map(\n            (collab: UserMini | GroupMini) => {\n                let item;\n                if (collab.type === 'group') {\n                    item = collab; // flow needs assignment to happen after type refinement\n                } else {\n                    item = collab;\n                    item.email = item.login; // transform user object\n                }\n                return {\n                    id: collab.id,\n                    name: collab.name,\n                    item,\n                };\n            },\n        );\n\n        this.successCallback({ ...data, entries: collaboratorSelectorItems });\n    };\n\n    /**\n     * API for fetching collaborators on a file\n     *\n     * @param {string} id - the file id\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {Object} requestData - any additional request data\n     * @param {number} limit - the max number of collaborators to return\n     * @returns {void}\n     */\n    getFileCollaborators(\n        id: string,\n        successCallback: ({ entries: Array<SelectorItem<UserMini | GroupMini>>, next_marker: ?string }) => void,\n        errorCallback: ElementsErrorCallback,\n        requestData: Object = {},\n        limit: number = DEFAULT_MAX_COLLABORATORS,\n    ): void {\n        // NOTE: successCallback is called with the result\n        // of this.successHandler, not the API response!\n        this.markerGet({\n            id,\n            limit,\n            successCallback,\n            errorCallback,\n            requestData,\n        });\n    }\n}\n\nexport default FileCollaborators;\n"]},"metadata":{},"sourceType":"module"}