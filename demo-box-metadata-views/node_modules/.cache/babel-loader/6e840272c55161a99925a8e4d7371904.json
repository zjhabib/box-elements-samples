{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Read Only Keywords Card component\n * @author Box\n */\nimport * as React from 'react';\nimport PillCloud from '../../../../components/pill-cloud/PillCloud';\nimport { SKILLS_TARGETS, INTERACTION_TARGET } from '../../../common/interactionTargets';\nimport Timeline from '../timeline';\nimport getPills from './keywordUtils';\nimport './ReadOnlyKeywords.scss';\nvar ReadOnlyselecteds = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ReadOnlyselecteds, _React$PureComponent);\n  function ReadOnlyselecteds() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, ReadOnlyselecteds);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReadOnlyselecteds)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedIndex: -1\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onSelect\", function (pill) {\n      var selectedIndex = _this.state.selectedIndex;\n      var newIndex = pill.value;\n      _this.setState({\n        selectedIndex: selectedIndex === newIndex ? -1 : newIndex\n      });\n    });\n    return _this;\n  }\n  _createClass(ReadOnlyselecteds, [{\n    key: \"render\",\n    /**\n     * Renders the keywords\n     *\n     * @private\n     * @return {void}\n     */\n    value: function render() {\n      var _this$props = this.props,\n        keywords = _this$props.keywords,\n        getViewer = _this$props.getViewer,\n        duration = _this$props.duration;\n      var selectedIndex = this.state.selectedIndex;\n      var options = getPills(keywords);\n      var selected = keywords[selectedIndex];\n      var pillCloudProps = selected ? {\n        selectedOptions: [options[selectedIndex]]\n      } : {};\n      return React.createElement(React.Fragment, null, React.createElement(PillCloud, _extends({\n        onSelect: this.onSelect,\n        options: options\n      }, pillCloudProps, {\n        buttonProps: _defineProperty({}, INTERACTION_TARGET, SKILLS_TARGETS.KEYWORDS.SELECT)\n      })), !!selected && Array.isArray(selected.appears) && selected.appears.length > 0 && React.createElement(Timeline, {\n        duration: duration,\n        getViewer: getViewer,\n        interactionTarget: SKILLS_TARGETS.KEYWORDS.TIMELINE,\n        text: selected.text,\n        timeslices: selected.appears\n      }));\n    }\n  }]);\n  return ReadOnlyselecteds;\n}(React.PureComponent);\nexport default ReadOnlyselecteds;","map":{"version":3,"sources":["../../../../../src/elements/content-sidebar/skills/keywords/ReadOnlyKeywords.js"],"names":["React","PillCloud","SKILLS_TARGETS","INTERACTION_TARGET","Timeline","getPills","ReadOnlyselecteds","PureComponent","selectedIndex","pill","state","newIndex","value","setState","keywords","getViewer","duration","props","options","selected","pillCloudProps","selectedOptions","onSelect","KEYWORDS","SELECT","Array","isArray","appears","length","TIMELINE","text"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,oCAAnD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAGA,OAAO,yBAAP;IAYMC,iB;;;;;;;;;;;4DAGa;MACXE,aAAa,EAAE,CAAC;IADL,C;+DAWJ,UAACC,IAAD,EAAgB;MAAA,IACfD,aADe,GACU,KAAA,CAAKE,KADf,CACfF,aADe;MAEvB,IAAMG,QAAgB,GAAKF,IAAI,CAACG,KAAhC;MACA,KAAA,CAAKC,QAAL,CAAc;QACVL,aAAa,EAAEA,aAAa,KAAKG,QAAlBH,GAA6B,CAAC,CAA9BA,GAAkCG;MADvC,CAAd,CAAA;IAGH,C;;;;;IAED;;;;;;6BAMS;MAAA,IAAA,WAAA,GAC4C,IAAA,CAAKM,KADjD;QACGH,QADH,GAAA,WAAA,CACGA,QADH;QACaC,SADb,GAAA,WAAA,CACaA,SADb;QACwBC,QADxB,GAAA,WAAA,CACwBA,QADxB;MAAA,IAEGR,aAFH,GAE4B,IAAA,CAAKE,KAFjC,CAEGF,aAFH;MAGL,IAAMU,OAAc,GAAGb,QAAQ,CAACS,QAAD,CAA/B;MACA,IAAMK,QAAQ,GAAGL,QAAQ,CAACN,aAAD,CAAzB;MACA,IAAMY,cAAc,GAAGD,QAAQ,GAAG;QAAEE,eAAe,EAAE,CAACH,OAAO,CAACV,aAAD,CAAR;MAAnB,CAAH,GAAmD,CAAA,CAAlF;MAEA,OACI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,QAAA,CAAA;QACI,QAAQ,EAAE,IAAA,CAAKc,QADnB;QAEI,OAAO,EAAEJ;MAFb,CAAA,EAGQE,cAHR,EAAA;QAII,WAAW,EAAA,eAAA,CAAA,CAAA,CAAA,EACNjB,kBADM,EACeD,cAAc,CAACqB,QAAfrB,CAAwBsB,MADvC;MAJf,CAAA,CAAA,CADJ,EASK,CAAC,CAACL,QAAF,IAAcM,KAAK,CAACC,OAAND,CAAcN,QAAQ,CAACQ,OAAvBF,CAAd,IAAiDN,QAAQ,CAACQ,OAATR,CAAiBS,MAAjBT,GAA0B,CAA3E,IACG,KAAA,CAAA,aAAA,CAAC,QAAD,EAAA;QACI,QAAQ,EAAEH,QADd;QAEI,SAAS,EAAED,SAFf;QAGI,iBAAiB,EAAEb,cAAc,CAACqB,QAAfrB,CAAwB2B,QAH/C;QAII,IAAI,EAAEV,QAAQ,CAACW,IAJnB;QAKI,UAAU,EAAEX,QAAQ,CAACQ;MALzB,CAAA,CAVR,CADJ;IAqBH;;;EAxD2B3B,KAAK,CAACO,a;AA2DtC,eAAeD,iBAAf","sourcesContent":["/**\n * @flow\n * @file Read Only Keywords Card component\n * @author Box\n */\n\nimport * as React from 'react';\nimport PillCloud from '../../../../components/pill-cloud/PillCloud';\nimport { SKILLS_TARGETS, INTERACTION_TARGET } from '../../../common/interactionTargets';\nimport Timeline from '../timeline';\nimport getPills from './keywordUtils';\nimport type { Pill, Pills } from './flowTypes';\nimport type { SkillCardEntry } from '../../../../common/types/skills';\nimport './ReadOnlyKeywords.scss';\n\ntype Props = {\n    duration?: number,\n    getViewer?: Function,\n    keywords: Array<SkillCardEntry>,\n};\n\ntype State = {\n    selectedIndex: number,\n};\n\nclass ReadOnlyselecteds extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State = {\n        selectedIndex: -1,\n    };\n\n    /**\n     * Shows the time line by selecting the keyword\n     *\n     * @private\n     * @param {Object} pill - keyword\n     * @return {void}\n     */\n    onSelect = (pill: Pill) => {\n        const { selectedIndex }: State = this.state;\n        const newIndex: number = ((pill.value: any): number);\n        this.setState({\n            selectedIndex: selectedIndex === newIndex ? -1 : newIndex,\n        });\n    };\n\n    /**\n     * Renders the keywords\n     *\n     * @private\n     * @return {void}\n     */\n    render() {\n        const { keywords, getViewer, duration }: Props = this.props;\n        const { selectedIndex }: State = this.state;\n        const options: Pills = getPills(keywords);\n        const selected = keywords[selectedIndex];\n        const pillCloudProps = selected ? { selectedOptions: [options[selectedIndex]] } : {};\n\n        return (\n            <>\n                <PillCloud\n                    onSelect={this.onSelect}\n                    options={options}\n                    {...pillCloudProps}\n                    buttonProps={{\n                        [INTERACTION_TARGET]: SKILLS_TARGETS.KEYWORDS.SELECT,\n                    }}\n                />\n                {!!selected && Array.isArray(selected.appears) && selected.appears.length > 0 && (\n                    <Timeline\n                        duration={duration}\n                        getViewer={getViewer}\n                        interactionTarget={SKILLS_TARGETS.KEYWORDS.TIMELINE}\n                        text={selected.text}\n                        timeslices={selected.appears}\n                    />\n                )}\n            </>\n        );\n    }\n}\n\nexport default ReadOnlyselecteds;\n"]},"metadata":{},"sourceType":"module"}