{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport LoadingIndicator from './LoadingIndicator';\nvar makeLoadable = function makeLoadable(BaseComponent) {\n  var LoadableComponent = function LoadableComponent(_ref) {\n    var _ref$isLoading = _ref.isLoading,\n      isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n      _ref$loadingIndicator = _ref.loadingIndicatorProps,\n      loadingIndicatorProps = _ref$loadingIndicator === void 0 ? {} : _ref$loadingIndicator,\n      rest = _objectWithoutProperties(_ref, [\"isLoading\", \"loadingIndicatorProps\"]);\n    return isLoading ? React.createElement(LoadingIndicator, loadingIndicatorProps) : React.createElement(BaseComponent, rest);\n  };\n  LoadableComponent.displayName = \"Loadable\".concat(BaseComponent.displayName || BaseComponent.name || 'Component');\n  return LoadableComponent;\n};\nexport default makeLoadable;","map":{"version":3,"sources":["../../../src/components/loading-indicator/makeLoadable.tsx"],"names":["React","LoadingIndicator","makeLoadable","BaseComponent","LoadableComponent","isLoading","loadingIndicatorProps","rest","displayName","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,gBAAP,MAAwD,oBAAxD;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CACjBC,aADiB,EAEiB;EAClC,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,IAAA,EAAA;IAAA,IAAA,cAAA,GAAA,IAAA,CAAGC,SAAH;MAAGA,SAAH,GAAA,cAAA,KAAA,KAAA,CAAA,GAAe,KAAf,GAAA,cAAA;MAAA,qBAAA,GAAA,IAAA,CAAsBC,qBAAtB;MAAsBA,qBAAtB,GAAA,qBAAA,KAAA,KAAA,CAAA,GAA8C,CAAA,CAA9C,GAAA,qBAAA;MAAqDC,IAArD,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,uBAAA,CAAA,CAAA;IAAA,OACtBF,SAAS,GAAG,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBC,qBAAtB,CAAH,GAAqD,KAAA,CAAA,aAAA,CAAC,aAAD,EAAoBC,IAApB,CADxC;EAAA,CAA1B;EAGAH,iBAAiB,CAACI,WAAlBJ,GAAAA,UAAAA,CAAAA,MAAAA,CAA2CD,aAAa,CAACK,WAAdL,IAA6BA,aAAa,CAACM,IAA3CN,IAAmD,WAA9FC,CAAAA;EAEA,OAAOA,iBAAP;AACH,CATD;AAWA,eAAeF,YAAf","sourcesContent":["import * as React from 'react';\nimport LoadingIndicator, { LoadingIndicatorProps } from './LoadingIndicator';\n\nexport interface MakeLoadableProps {\n    isLoading?: boolean;\n    loadingIndicatorProps?: LoadingIndicatorProps;\n}\n\nconst makeLoadable = <P extends MakeLoadableProps>(\n    BaseComponent: React.ComponentType<P>,\n): React.FC<P & MakeLoadableProps> => {\n    const LoadableComponent = ({ isLoading = false, loadingIndicatorProps = {}, ...rest }: MakeLoadableProps) =>\n        isLoading ? <LoadingIndicator {...loadingIndicatorProps} /> : <BaseComponent {...(rest as P)} />;\n\n    LoadableComponent.displayName = `Loadable${BaseComponent.displayName || BaseComponent.name || 'Component'}`;\n\n    return LoadableComponent;\n};\n\nexport default makeLoadable;\n"]},"metadata":{},"sourceType":"module"}