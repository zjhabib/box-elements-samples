{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport LoadingIndicator from '../loading-indicator';\nimport RadarAnimation from '../radar';\nexport var ButtonType;\n(function (ButtonType) {\n  ButtonType[\"BUTTON\"] = \"button\";\n  ButtonType[\"RESET\"] = \"reset\";\n  ButtonType[\"SUBMIT\"] = \"submit\";\n})(ButtonType || (ButtonType = {}));\nvar Button = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Button, _React$Component);\n  function Button() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, Button);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"btnElement\", null);\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (event) {\n      var _this$props = _this.props,\n        isDisabled = _this$props.isDisabled,\n        onClick = _this$props.onClick;\n      if (isDisabled || _this.btnElement && _this.btnElement.classList.contains('is-disabled')) {\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n      if (onClick) {\n        onClick(event);\n      }\n    });\n    return _this;\n  }\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props2 = this.props,\n        children = _this$props2.children,\n        className = _this$props2.className,\n        isDisabled = _this$props2.isDisabled,\n        isLoading = _this$props2.isLoading,\n        isSelected = _this$props2.isSelected,\n        setRef = _this$props2.setRef,\n        type = _this$props2.type,\n        showRadar = _this$props2.showRadar,\n        rest = _objectWithoutProperties(_this$props2, [\"children\", \"className\", \"isDisabled\", \"isLoading\", \"isSelected\", \"setRef\", \"type\", \"showRadar\"]);\n      var buttonProps = omit(rest, ['onClick']);\n      if (isDisabled) {\n        buttonProps['aria-disabled'] = true;\n      }\n      var styleClassName = classNames('btn', {\n        'is-disabled': isDisabled,\n        'is-loading': isLoading,\n        'is-selected': isSelected\n      }, className);\n      var button =\n      // eslint-disable-next-line react/button-has-type\n      React.createElement(\"button\", _extends({\n        ref: function ref(element) {\n          _this2.btnElement = element;\n          if (setRef) {\n            setRef(element);\n          }\n        },\n        className: styleClassName,\n        onClick: this.handleClick,\n        type: type\n      }, buttonProps), React.createElement(\"span\", {\n        className: \"btn-content\"\n      }, children), isLoading && React.createElement(LoadingIndicator, {\n        className: \"btn-loading-indicator\"\n      }));\n      if (showRadar) {\n        button = React.createElement(RadarAnimation, null, button);\n      }\n      return button;\n    }\n  }]);\n  return Button;\n}(React.Component);\n_defineProperty(Button, \"defaultProps\", {\n  className: '',\n  isLoading: false,\n  showRadar: false,\n  type: ButtonType.SUBMIT\n});\nexport default Button;","map":{"version":3,"sources":["../../../src/components/button/Button.tsx"],"names":["React","classNames","omit","LoadingIndicator","RadarAnimation","ButtonType","Button","Component","className","isLoading","showRadar","type","SUBMIT","event","isDisabled","onClick","props","btnElement","classList","contains","preventDefault","stopPropagation","children","isSelected","setRef","rest","buttonProps","styleClassName","button","element","handleClick"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport LoadingIndicator from '../loading-indicator';\nimport RadarAnimation from '../radar';\n\nexport enum ButtonType {\n    BUTTON = 'button',\n    RESET = 'reset',\n    SUBMIT = 'submit',\n}\nexport interface ButtonProps {\n    /** Child components for the button, generally localized text */\n    children?: React.ReactNode;\n    /** Custom class for the button */\n    className: string;\n    /** whether the button is disabled or not */\n    isDisabled?: boolean;\n    /** whether the button is loading or not */\n    isLoading: boolean;\n    /** whether the button is selected or not */\n    isSelected?: boolean;\n    /** onClick handler for the button */\n    onClick?: Function;\n    /** to set buttons inner ref */\n    setRef?: Function;\n    /** whether to show a radar */\n    showRadar: boolean;\n    /** type for the button */\n    type: ButtonType;\n}\n\nclass Button extends React.Component<ButtonProps> {\n    btnElement: HTMLButtonElement | null = null;\n\n    static defaultProps = {\n        className: '',\n        isLoading: false,\n        showRadar: false,\n        type: ButtonType.SUBMIT,\n    };\n\n    handleClick = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n        const { isDisabled, onClick } = this.props;\n        if (isDisabled || (this.btnElement && this.btnElement.classList.contains('is-disabled'))) {\n            event.preventDefault();\n            event.stopPropagation();\n            return;\n        }\n        if (onClick) {\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { children, className, isDisabled, isLoading, isSelected, setRef, type, showRadar, ...rest } = this.props;\n        const buttonProps: Record<string, boolean> = omit(rest, ['onClick']);\n        if (isDisabled) {\n            buttonProps['aria-disabled'] = true;\n        }\n\n        const styleClassName = classNames(\n            'btn',\n            {\n                'is-disabled': isDisabled,\n                'is-loading': isLoading,\n                'is-selected': isSelected,\n            },\n            className,\n        );\n\n        let button = (\n            // eslint-disable-next-line react/button-has-type\n            <button\n                ref={element => {\n                    this.btnElement = element;\n                    if (setRef) {\n                        setRef(element);\n                    }\n                }}\n                className={styleClassName}\n                onClick={this.handleClick}\n                type={type}\n                {...buttonProps}\n            >\n                <span className=\"btn-content\">{children}</span>\n                {isLoading && <LoadingIndicator className=\"btn-loading-indicator\" />}\n            </button>\n        );\n        if (showRadar) {\n            button = <RadarAnimation>{button}</RadarAnimation>;\n        }\n\n        return button;\n    }\n}\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}