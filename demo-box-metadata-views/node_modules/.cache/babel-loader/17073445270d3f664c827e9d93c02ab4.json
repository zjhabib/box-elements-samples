{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport classNames from 'classnames';\nvar LabelPrimitive = function LabelPrimitive(_ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    labelContent = _ref.labelContent,\n    rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"labelContent\"]);\n  return React.createElement(\"label\", null, React.createElement(\"span\", _extends({\n    className: classNames('label bdl-Label', className)\n  }, rest), labelContent), children);\n};\nexport default LabelPrimitive;","map":{"version":3,"sources":["../../../src/components/label/LabelPrimitive.tsx"],"names":["React","classNames","LabelPrimitive","children","className","labelContent","rest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAWA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAAA;EAAA,IAAGC,QAAH,GAAA,IAAA,CAAGA,QAAH;IAAaC,SAAb,GAAA,IAAA,CAAaA,SAAb;IAAwBC,YAAxB,GAAA,IAAA,CAAwBA,YAAxB;IAAyCC,IAAzC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,cAAA,CAAA,CAAA;EAAA,OACnB,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;IAAM,SAAS,EAAEL,UAAU,CAAC,iBAAD,EAAoBG,SAApB;EAA3B,CAAA,EAA+DE,IAA/D,CAAA,EACKD,YADL,CADJ,EAIKF,QAJL,CADmB;AAAA,CAAvB;AASA,eAAeD,cAAf","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface LabelPrimitiveProps {\n    /** Child for the label */\n    children: React.ReactElement;\n    /** Custom class for the label */\n    className?: string;\n    /** Text content of the label */\n    labelContent: React.ReactNode;\n}\n\nconst LabelPrimitive = ({ children, className, labelContent, ...rest }: LabelPrimitiveProps) => (\n    <label>\n        <span className={classNames('label bdl-Label', className)} {...rest}>\n            {labelContent}\n        </span>\n        {children}\n    </label>\n);\n\nexport default LabelPrimitive;\n"]},"metadata":{},"sourceType":"module"}