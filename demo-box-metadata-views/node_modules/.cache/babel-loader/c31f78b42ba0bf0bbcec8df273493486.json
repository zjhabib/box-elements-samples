{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport FeatureConsumer from './FeatureConsumer';\nfunction withFeatureConsumer(WrappedComponent) {\n  function wrapComponent(props, ref) {\n    return React.createElement(FeatureConsumer, null, function (features) {\n      return React.createElement(WrappedComponent, _extends({}, props, {\n        ref: ref,\n        features: features\n      }));\n    });\n  }\n  var wrappedName = WrappedComponent.displayName || WrappedComponent.name || 'component';\n  wrapComponent.displayName = \"withFeatureConsumer(\".concat(wrappedName, \")\");\n  return React.forwardRef(wrapComponent);\n}\nexport default withFeatureConsumer;","map":{"version":3,"sources":["../../../../src/elements/common/feature-checking/withFeatureConsumer.js"],"names":["React","FeatureConsumer","withFeatureConsumer","WrappedComponent","wrapComponent","props","ref","features","wrappedName","displayName","name","forwardRef"],"mappings":";;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAKA,SAASC,mBAAT,CAA6BC,gBAA7B,EAAiG;EAC7F,SAASC,aAAT,CAAuBC,KAAvB,EAA4CC,GAA5C,EAAiD;IAC7C,OACI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA,IAAA,EACK,UAACC,QAAD,EAAA;MAAA,OAA6B,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAsBF,KAAtB,EAAA;QAA6B,GAAG,EAAEC,GAAlC;QAAuC,QAAQ,EAAEC;MAAjD,CAAA,CAAA,CAA7B;IAAA,CADL,CADJ;EAKH;EACD,IAAMC,WAAW,GAAGL,gBAAgB,CAACM,WAAjBN,IAAgCA,gBAAgB,CAACO,IAAjDP,IAAyD,WAA7E;EACAC,aAAa,CAACK,WAAdL,GAAAA,sBAAAA,CAAAA,MAAAA,CAAmDI,WAAnDJ,EAAAA,GAAAA,CAAAA;EACA,OAAOJ,KAAK,CAACW,UAANX,CAA4CI,aAA5CJ,CAAP;AACH;AAED,eAAeE,mBAAf","sourcesContent":["// @flow strict\nimport * as React from 'react';\nimport FeatureConsumer from './FeatureConsumer';\nimport type { FeatureConfig } from './flowTypes';\n\ntype WrapperProps = {};\n\nfunction withFeatureConsumer(WrappedComponent: React.ComponentType<{ features: FeatureConfig }>) {\n    function wrapComponent(props: WrapperProps, ref) {\n        return (\n            <FeatureConsumer>\n                {(features: FeatureConfig) => <WrappedComponent {...props} ref={ref} features={features} />}\n            </FeatureConsumer>\n        );\n    }\n    const wrappedName = WrappedComponent.displayName || WrappedComponent.name || 'component';\n    wrapComponent.displayName = `withFeatureConsumer(${wrappedName})`;\n    return React.forwardRef<WrapperProps, HTMLElement>(wrapComponent);\n}\n\nexport default withFeatureConsumer;\n"]},"metadata":{},"sourceType":"module"}