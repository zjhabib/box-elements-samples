{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zhabib/Documents/GitHub/box-elements-samples/demo-box-metadata-views/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Activity feed sidebar component\n * @author Box\n */\nimport * as React from 'react';\nimport debounce from 'lodash/debounce';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport ActivityFeed from './activity-feed';\nimport AddTaskButton from './AddTaskButton';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarContent from './SidebarContent';\nimport { WithAnnotatorContextProps, withAnnotatorContext } from '../common/annotator-context';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadUserError, getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withFeatureConsumer, isFeatureEnabled } from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\nimport { withRouterAndRef } from '../common/routing';\nimport { DEFAULT_COLLAB_DEBOUNCE, ERROR_CODE_FETCH_ACTIVITY, ORIGIN_ACTIVITY_SIDEBAR, SIDEBAR_VIEW_ACTIVITY, TASK_COMPLETION_RULE_ALL } from '../../constants';\nimport './ActivitySidebar.scss';\nexport var activityFeedInlineError = {\n  inlineError: {\n    title: messages.errorOccured,\n    content: messages.activityFeedItemApiError\n  }\n};\nvar MARK_NAME_JS_READY = \"\".concat(ORIGIN_ACTIVITY_SIDEBAR, \"_\").concat(EVENT_JS_READY);\nmark(MARK_NAME_JS_READY);\nvar ActivitySidebar = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ActivitySidebar, _React$PureComponent);\n  function ActivitySidebar(props) {\n    var _this;\n    _classCallCheck(this, ActivitySidebar);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActivitySidebar).call(this, props)); // eslint-disable-next-line react/prop-types\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAnnotationDelete\", function (_ref) {\n      var id = _ref.id,\n        permissions = _ref.permissions;\n      var _this$props = _this.props,\n        api = _this$props.api,\n        file = _this$props.file;\n      api.getFeedAPI(false).deleteAnnotation(file, id, permissions, _this.deleteAnnotationSuccess.bind(_assertThisInitialized(_this), id), _this.feedErrorCallback);\n      _this.fetchFeedItems();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"feedSuccessCallback\", function () {\n      _this.fetchFeedItems();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"feedErrorCallback\", function (e, code, contextInfo) {\n      _this.errorCallback(e, code, contextInfo);\n      _this.fetchFeedItems();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"createTask\", function (message, assignees, taskType, dueAt, completionRule, onSuccess, onError) {\n      var currentUser = _this.state.currentUser;\n      var _this$props2 = _this.props,\n        file = _this$props2.file,\n        api = _this$props2.api;\n      if (!currentUser) {\n        throw getBadUserError();\n      }\n      var errorCallback = function errorCallback(e, code, contextInfo) {\n        if (onError) {\n          onError(e, code, contextInfo);\n        }\n        _this.feedErrorCallback(e, code, contextInfo);\n      };\n      var successCallback = function successCallback() {\n        if (onSuccess) {\n          onSuccess();\n        }\n        _this.feedSuccessCallback();\n      };\n      api.getFeedAPI(false).createTaskNew(file, currentUser, message, assignees, taskType, dueAt, completionRule, successCallback, errorCallback); // need to load the pending item\n\n      _this.fetchFeedItems();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"deleteTask\", function (task) {\n      var _this$props3 = _this.props,\n        file = _this$props3.file,\n        api = _this$props3.api,\n        onTaskDelete = _this$props3.onTaskDelete;\n      api.getFeedAPI(false).deleteTaskNew(file, task, function (taskId) {\n        _this.feedSuccessCallback();\n        onTaskDelete(taskId);\n      }, _this.feedErrorCallback); // need to load the pending item\n\n      _this.fetchFeedItems();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateTask\", function (task, onSuccess, onError) {\n      var _this$props4 = _this.props,\n        file = _this$props4.file,\n        api = _this$props4.api,\n        onTaskUpdate = _this$props4.onTaskUpdate;\n      var errorCallback = function errorCallback(e, code) {\n        if (onError) {\n          onError(e, code);\n        }\n        _this.feedErrorCallback(e, code);\n      };\n      var successCallback = function successCallback() {\n        _this.feedSuccessCallback();\n        if (onSuccess) {\n          onSuccess();\n        }\n        onTaskUpdate();\n      };\n      api.getFeedAPI(false).updateTaskNew(file, task, successCallback, errorCallback); // need to load the pending item\n\n      _this.fetchFeedItems();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateTaskAssignment\", function (taskId, taskAssignmentId, status) {\n      var _this$props5 = _this.props,\n        file = _this$props5.file,\n        api = _this$props5.api;\n      api.getFeedAPI(false).updateTaskCollaborator(file, taskId, taskAssignmentId, status, _this.feedSuccessCallback, _this.feedErrorCallback); // need to load the pending item\n\n      _this.fetchFeedItems();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"deleteComment\", function (_ref2) {\n      var id = _ref2.id,\n        permissions = _ref2.permissions;\n      var _this$props6 = _this.props,\n        file = _this$props6.file,\n        api = _this$props6.api,\n        onCommentDelete = _this$props6.onCommentDelete;\n      api.getFeedAPI(false).deleteComment(file, id, permissions, function (comment) {\n        _this.feedSuccessCallback();\n        onCommentDelete(comment);\n      }, _this.feedErrorCallback); // need to load the pending item\n\n      _this.fetchFeedItems();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateComment\", function (id, text, hasMention, permissions, onSuccess, onError) {\n      var _this$props7 = _this.props,\n        file = _this$props7.file,\n        api = _this$props7.api,\n        onCommentUpdate = _this$props7.onCommentUpdate;\n      var errorCallback = function errorCallback(e, code) {\n        if (onError) {\n          onError(e, code);\n        }\n        _this.feedErrorCallback(e, code);\n      };\n      var successCallback = function successCallback() {\n        _this.feedSuccessCallback();\n        if (onSuccess) {\n          onSuccess();\n        }\n        onCommentUpdate();\n      };\n      api.getFeedAPI(false).updateComment(file, id, text, hasMention, permissions, successCallback, errorCallback); // need to load the pending item\n\n      _this.fetchFeedItems();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"createComment\", function (text, hasMention) {\n      var _this$props8 = _this.props,\n        file = _this$props8.file,\n        api = _this$props8.api,\n        onCommentCreate = _this$props8.onCommentCreate;\n      var currentUser = _this.state.currentUser;\n      if (!currentUser) {\n        throw getBadUserError();\n      }\n      api.getFeedAPI(false).createComment(file, currentUser, text, hasMention, function (comment) {\n        onCommentCreate(comment);\n        _this.feedSuccessCallback();\n      }, _this.feedErrorCallback); // need to load the pending item\n\n      _this.fetchFeedItems();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"deleteAppActivity\", function (_ref3) {\n      var id = _ref3.id;\n      var _this$props9 = _this.props,\n        file = _this$props9.file,\n        api = _this$props9.api;\n      api.getFeedAPI(false).deleteAppActivity(file, id, _this.feedSuccessCallback, _this.feedErrorCallback); // need to load the pending item\n\n      _this.fetchFeedItems();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"fetchFeedItemsSuccessCallback\", function (feedItems) {\n      _this.setState({\n        feedItems: feedItems,\n        activityFeedError: undefined\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"fetchFeedItemsErrorCallback\", function (feedItems, errors) {\n      var onError = _this.props.onError;\n      _this.setState({\n        feedItems: feedItems,\n        activityFeedError: activityFeedInlineError\n      });\n      if (Array.isArray(errors) && errors.length) {\n        onError(new Error('Fetch feed items error'), ERROR_CODE_FETCH_ACTIVITY, {\n          showNotification: true,\n          errors: errors.map(function (_ref4) {\n            var code = _ref4.code;\n            return code;\n          })\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"errorCallback\", function (error, code) {\n      var contextInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      /* eslint-disable no-console */\n      console.error(error);\n      /* eslint-enable no-console */\n      // eslint-disable-next-line react/prop-types\n\n      _this.props.onError(error, code, contextInfo);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"fetchCurrentUserSuccessCallback\", function (currentUser) {\n      _this.setState({\n        currentUser: currentUser,\n        currentUserError: undefined\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getApproverContactsSuccessCallback\", function (collaborators) {\n      var entries = collaborators.entries;\n      _this.setState({\n        approverSelectorContacts: entries\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getMentionContactsSuccessCallback\", function (collaborators) {\n      var entries = collaborators.entries;\n      _this.setState({\n        mentionSelectorContacts: entries\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getApproverWithQuery\", debounce(function (searchStr) {\n      return _this.getCollaborators(_this.getApproverContactsSuccessCallback, _this.errorCallback, searchStr, {\n        includeGroups: true\n      });\n    }, DEFAULT_COLLAB_DEBOUNCE));\n    _defineProperty(_assertThisInitialized(_this), \"getMentionWithQuery\", debounce(function (searchStr) {\n      return _this.getCollaborators(_this.getMentionContactsSuccessCallback, _this.errorCallback, searchStr);\n    }, DEFAULT_COLLAB_DEBOUNCE));\n    _defineProperty(_assertThisInitialized(_this), \"fetchCurrentUserErrorCallback\", function (e, code) {\n      _this.setState({\n        currentUser: undefined,\n        currentUserError: {\n          maskError: {\n            errorHeader: messages.currentUserErrorHeaderMessage,\n            errorSubHeader: messages.defaultErrorMaskSubHeaderMessage\n          }\n        }\n      });\n      _this.errorCallback(e, code, {\n        error: e\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getAvatarUrl\", /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(userId) {\n        var _this$props10, file, api;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props10 = _this.props, file = _this$props10.file, api = _this$props10.api;\n                return _context.abrupt(\"return\", api.getUsersAPI(false).getAvatarUrlWithAccessToken(userId, file.id));\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    _defineProperty(_assertThisInitialized(_this), \"handleAnnotationSelect\", function (annotation) {\n      var file_version = annotation.file_version,\n        nextActiveAnnotationId = annotation.id;\n      var _this$props11 = _this.props,\n        emitAnnotatorActiveChangeEvent = _this$props11.emitAnnotatorActiveChangeEvent,\n        file = _this$props11.file,\n        getAnnotationsMatchPath = _this$props11.getAnnotationsMatchPath,\n        getAnnotationsPath = _this$props11.getAnnotationsPath,\n        history = _this$props11.history,\n        location = _this$props11.location,\n        onAnnotationSelect = _this$props11.onAnnotationSelect;\n      var annotationFileVersionId = getProp(file_version, 'id');\n      var currentFileVersionId = getProp(file, 'file_version.id');\n      var match = getAnnotationsMatchPath(location);\n      var selectedFileVersionId = getProp(match, 'params.fileVersionId', currentFileVersionId);\n      emitAnnotatorActiveChangeEvent(nextActiveAnnotationId);\n      if (annotationFileVersionId && annotationFileVersionId !== selectedFileVersionId) {\n        history.push(getAnnotationsPath(annotationFileVersionId, nextActiveAnnotationId));\n      }\n      onAnnotationSelect(annotation);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onTaskModalClose\", function () {\n      _this.setState({\n        approverSelectorContacts: []\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"renderAddTaskButton\", function () {\n      var isDisabled = _this.props.isDisabled;\n      var approverSelectorContacts = _this.state.approverSelectorContacts;\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        getApproverWithQuery = _assertThisInitialize.getApproverWithQuery,\n        getAvatarUrl = _assertThisInitialize.getAvatarUrl,\n        createTask = _assertThisInitialize.createTask,\n        onTaskModalClose = _assertThisInitialize.onTaskModalClose;\n      var taskFormProps = {\n        approverSelectorContacts: approverSelectorContacts,\n        completionRule: TASK_COMPLETION_RULE_ALL,\n        createTask: createTask,\n        getApproverWithQuery: getApproverWithQuery,\n        getAvatarUrl: getAvatarUrl,\n        id: '',\n        message: '',\n        approvers: []\n      };\n      return React.createElement(AddTaskButton, {\n        isDisabled: isDisabled,\n        onTaskModalClose: onTaskModalClose,\n        taskFormProps: taskFormProps\n      });\n    });\n    var logger = _this.props.logger;\n    logger.onReadyMetric({\n      endMarkName: MARK_NAME_JS_READY\n    });\n    _this.state = {};\n    return _this;\n  }\n  _createClass(ActivitySidebar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentUser = this.props.currentUser;\n      this.fetchFeedItems(true);\n      this.fetchCurrentUser(currentUser);\n    }\n  }, {\n    key: \"deleteAnnotationSuccess\",\n    value: function deleteAnnotationSuccess(id) {\n      var emitRemoveEvent = this.props.emitRemoveEvent;\n      this.feedSuccessCallback();\n      emitRemoveEvent(id);\n    }\n    /**\n     * Fetches a Users info\n     *\n     * @private\n     * @param {User} [user] - Box User. If missing, gets user that the current token was generated for.\n     * @param {boolean} shouldDestroy\n     * @return {void}\n     */\n  }, {\n    key: \"fetchCurrentUser\",\n    value: function fetchCurrentUser(user) {\n      var shouldDestroy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props12 = this.props,\n        api = _this$props12.api,\n        file = _this$props12.file;\n      if (!file) {\n        throw getBadItemError();\n      }\n      if (typeof user === 'undefined') {\n        api.getUsersAPI(shouldDestroy).getUser(file.id, this.fetchCurrentUserSuccessCallback, this.fetchCurrentUserErrorCallback);\n      } else {\n        this.setState({\n          currentUser: user,\n          currentUserError: undefined\n        });\n      }\n    }\n    /**\n     * Success callback for fetching feed items\n     */\n  }, {\n    key: \"fetchFeedItems\",\n    /**\n     * Fetches the feed items for the sidebar\n     *\n     * @param {boolean} shouldDestroy true if the api factory should be destroyed\n     */\n    value: function fetchFeedItems() {\n      var shouldRefreshCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var shouldDestroy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props13 = this.props,\n        file = _this$props13.file,\n        api = _this$props13.api,\n        features = _this$props13.features;\n      var shouldShowAppActivity = isFeatureEnabled(features, 'activityFeed.appActivity.enabled');\n      var shouldShowAnnotations = isFeatureEnabled(features, 'activityFeed.annotations.enabled');\n      api.getFeedAPI(shouldDestroy).feedItems(file, shouldRefreshCache, this.fetchFeedItemsSuccessCallback, this.fetchFeedItemsErrorCallback, this.errorCallback, {\n        shouldShowAnnotations: shouldShowAnnotations,\n        shouldShowAppActivity: shouldShowAppActivity\n      });\n    }\n    /**\n     * Handles a successful feed API fetch\n     *\n     * @private\n     * @param {Array} feedItems - the feed items\n     * @return {void}\n     */\n  }, {\n    key: \"getCollaborators\",\n    /**\n     * Fetches file collaborators\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {string} searchStr - the search string\n     * @param {Object} [options]\n     * @param {boolean} [options.includeGroups] - return groups as well as users\n     * @return {void}\n     */\n    value: function getCollaborators(successCallback, errorCallback, searchStr) {\n      var _ref6 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n        _ref6$includeGroups = _ref6.includeGroups,\n        includeGroups = _ref6$includeGroups === void 0 ? false : _ref6$includeGroups;\n\n      // Do not fetch without filter\n      var _this$props14 = this.props,\n        file = _this$props14.file,\n        api = _this$props14.api;\n      if (!searchStr || searchStr.trim() === '') {\n        return;\n      }\n      api.getFileCollaboratorsAPI(true).getFileCollaborators(file.id, successCallback, errorCallback, {\n        filter_term: searchStr,\n        include_groups: includeGroups,\n        include_uploader_collabs: false\n      });\n    }\n    /**\n     * Handles a failed file user info fetch\n     *\n     * @private\n     * @param {ElementsXhrError} e - API error\n     * @return {void}\n     */\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var shouldRefreshCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.fetchFeedItems(shouldRefreshCache);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props15 = this.props,\n        elementId = _this$props15.elementId,\n        file = _this$props15.file,\n        _this$props15$isDisab = _this$props15.isDisabled,\n        isDisabled = _this$props15$isDisab === void 0 ? false : _this$props15$isDisab,\n        onVersionHistoryClick = _this$props15.onVersionHistoryClick,\n        getUserProfileUrl = _this$props15.getUserProfileUrl,\n        activeFeedEntryId = _this$props15.activeFeedEntryId,\n        activeFeedEntryType = _this$props15.activeFeedEntryType,\n        onTaskView = _this$props15.onTaskView;\n      var _this$state = this.state,\n        currentUser = _this$state.currentUser,\n        approverSelectorContacts = _this$state.approverSelectorContacts,\n        mentionSelectorContacts = _this$state.mentionSelectorContacts,\n        feedItems = _this$state.feedItems,\n        activityFeedError = _this$state.activityFeedError,\n        currentUserError = _this$state.currentUserError;\n      return React.createElement(SidebarContent, {\n        actions: this.renderAddTaskButton(),\n        className: \"bcs-activity\",\n        elementId: elementId,\n        sidebarView: SIDEBAR_VIEW_ACTIVITY,\n        title: React.createElement(FormattedMessage, messages.sidebarActivityTitle)\n      }, React.createElement(ActivityFeed, {\n        activeFeedEntryId: activeFeedEntryId,\n        activeFeedEntryType: activeFeedEntryType,\n        activityFeedError: activityFeedError,\n        approverSelectorContacts: approverSelectorContacts,\n        currentUser: currentUser,\n        currentUserError: currentUserError,\n        feedItems: feedItems,\n        file: file,\n        getApproverWithQuery: this.getApproverWithQuery,\n        getAvatarUrl: this.getAvatarUrl,\n        getMentionWithQuery: this.getMentionWithQuery,\n        getUserProfileUrl: getUserProfileUrl,\n        isDisabled: isDisabled,\n        mentionSelectorContacts: mentionSelectorContacts,\n        onAnnotationDelete: this.handleAnnotationDelete,\n        onAnnotationSelect: this.handleAnnotationSelect,\n        onAppActivityDelete: this.deleteAppActivity,\n        onCommentCreate: this.createComment,\n        onCommentDelete: this.deleteComment,\n        onCommentUpdate: this.updateComment,\n        onTaskAssignmentUpdate: this.updateTaskAssignment,\n        onTaskCreate: this.createTask,\n        onTaskDelete: this.deleteTask,\n        onTaskModalClose: this.onTaskModalClose,\n        onTaskUpdate: this.updateTask,\n        onTaskView: onTaskView,\n        onVersionHistoryClick: onVersionHistoryClick\n      }));\n    }\n  }]);\n  return ActivitySidebar;\n}(React.PureComponent);\n_defineProperty(ActivitySidebar, \"defaultProps\", {\n  annotatorState: {},\n  emitAnnotatorActiveChangeEvent: noop,\n  getAnnotationsMatchPath: noop,\n  getAnnotationsPath: noop,\n  isDisabled: false,\n  onAnnotationSelect: noop,\n  onCommentCreate: noop,\n  onCommentDelete: noop,\n  onCommentUpdate: noop,\n  onTaskAssignmentUpdate: noop,\n  onTaskCreate: noop,\n  onTaskDelete: noop,\n  onTaskUpdate: noop,\n  onVersionChange: noop,\n  onVersionHistoryClick: noop\n});\nexport { ActivitySidebar as ActivitySidebarComponent };\nexport default flow([withLogger(ORIGIN_ACTIVITY_SIDEBAR), withErrorBoundary(ORIGIN_ACTIVITY_SIDEBAR), withAPIContext, withFeatureConsumer, withAnnotatorContext, withRouterAndRef])(ActivitySidebar);","map":{"version":3,"sources":["../../../src/elements/content-sidebar/ActivitySidebar.js"],"names":["React","debounce","flow","getProp","noop","FormattedMessage","ActivityFeed","AddTaskButton","API","messages","SidebarContent","WithAnnotatorContextProps","withAnnotatorContext","EVENT_JS_READY","getBadUserError","getBadItemError","mark","withAPIContext","withErrorBoundary","withFeatureConsumer","isFeatureEnabled","withLogger","withRouterAndRef","DEFAULT_COLLAB_DEBOUNCE","ERROR_CODE_FETCH_ACTIVITY","ORIGIN_ACTIVITY_SIDEBAR","SIDEBAR_VIEW_ACTIVITY","TASK_COMPLETION_RULE_ALL","activityFeedInlineError","inlineError","title","errorOccured","content","activityFeedItemApiError","MARK_NAME_JS_READY","ActivitySidebar","PureComponent","annotatorState","emitAnnotatorActiveChangeEvent","getAnnotationsMatchPath","getAnnotationsPath","isDisabled","onAnnotationSelect","onCommentCreate","onCommentDelete","onCommentUpdate","onTaskAssignmentUpdate","onTaskCreate","onTaskDelete","onTaskUpdate","onVersionChange","onVersionHistoryClick","props","logger","onReadyMetric","endMarkName","state","currentUser","fetchFeedItems","fetchCurrentUser","id","permissions","api","file","getFeedAPI","deleteAnnotation","deleteAnnotationSuccess","bind","feedErrorCallback","emitRemoveEvent","feedSuccessCallback","user","shouldDestroy","getUsersAPI","getUser","fetchCurrentUserSuccessCallback","fetchCurrentUserErrorCallback","setState","currentUserError","undefined","e","code","contextInfo","errorCallback","message","assignees","taskType","dueAt","completionRule","onSuccess","onError","successCallback","createTaskNew","task","deleteTaskNew","taskId","updateTaskNew","taskAssignmentId","status","updateTaskCollaborator","deleteComment","comment","text","hasMention","updateComment","createComment","deleteAppActivity","shouldRefreshCache","features","shouldShowAppActivity","shouldShowAnnotations","feedItems","fetchFeedItemsSuccessCallback","fetchFeedItemsErrorCallback","activityFeedError","errors","Array","isArray","length","Error","showNotification","map","error","console","collaborators","entries","approverSelectorContacts","mentionSelectorContacts","searchStr","getCollaborators","getApproverContactsSuccessCallback","includeGroups","getMentionContactsSuccessCallback","trim","getFileCollaboratorsAPI","getFileCollaborators","filter_term","include_groups","include_uploader_collabs","maskError","errorHeader","currentUserErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","userId","getAvatarUrlWithAccessToken","annotation","file_version","nextActiveAnnotationId","history","location","annotationFileVersionId","currentFileVersionId","match","selectedFileVersionId","push","getApproverWithQuery","getAvatarUrl","createTask","onTaskModalClose","taskFormProps","approvers","elementId","getUserProfileUrl","activeFeedEntryId","activeFeedEntryType","onTaskView","renderAddTaskButton","sidebarActivityTitle","getMentionWithQuery","handleAnnotationDelete","handleAnnotationSelect","updateTaskAssignment","deleteTask","updateTask","ActivitySidebarComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Activity feed sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport debounce from 'lodash/debounce';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport { type ContextRouter } from 'react-router-dom';\nimport ActivityFeed from './activity-feed';\nimport AddTaskButton from './AddTaskButton';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarContent from './SidebarContent';\nimport { WithAnnotatorContextProps, withAnnotatorContext } from '../common/annotator-context';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadUserError, getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withFeatureConsumer, isFeatureEnabled } from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\nimport { withRouterAndRef } from '../common/routing';\nimport {\n    DEFAULT_COLLAB_DEBOUNCE,\n    ERROR_CODE_FETCH_ACTIVITY,\n    ORIGIN_ACTIVITY_SIDEBAR,\n    SIDEBAR_VIEW_ACTIVITY,\n    TASK_COMPLETION_RULE_ALL,\n} from '../../constants';\nimport type {\n    TaskCompletionRule,\n    TaskType,\n    TaskNew,\n    TaskUpdatePayload,\n    TaskCollabStatus,\n} from '../../common/types/tasks';\nimport type { Annotation, AnnotationPermission, FocusableFeedItemType, FeedItems } from '../../common/types/feed';\nimport type { ElementsErrorCallback, ErrorContextProps, ElementsXhrError } from '../../common/types/api';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { SelectorItems, User, UserMini, GroupMini, BoxItem, BoxItemPermission } from '../../common/types/core';\nimport type { GetProfileUrlCallback } from '../common/flowTypes';\nimport type { Translations, Collaborators, Errors } from './flowTypes';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport './ActivitySidebar.scss';\n\ntype ExternalProps = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    currentUser?: User,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    onCommentCreate: Function,\n    onCommentDelete: (comment: Comment) => any,\n    onCommentUpdate: () => any,\n    onTaskAssignmentUpdate: Function,\n    onTaskCreate: Function,\n    onTaskDelete: (id: string) => any,\n    onTaskUpdate: () => any,\n    onTaskView: (id: string, isCreator: boolean) => any,\n} & ErrorContextProps &\n    WithAnnotatorContextProps;\n\ntype PropsWithoutContext = {\n    elementId: string,\n    file: BoxItem,\n    hasSidebarInitialized?: boolean,\n    isDisabled: boolean,\n    onAnnotationSelect: Function,\n    onVersionChange: Function,\n    onVersionHistoryClick?: Function,\n    translations?: Translations,\n} & ExternalProps &\n    WithLoggerProps &\n    ContextRouter;\n\ntype Props = {\n    api: API,\n    features: FeatureConfig,\n} & PropsWithoutContext;\n\ntype State = {\n    activityFeedError?: Errors,\n    approverSelectorContacts: SelectorItems<UserMini | GroupMini>,\n    currentUser?: User,\n    currentUserError?: Errors,\n    feedItems?: FeedItems,\n    mentionSelectorContacts?: SelectorItems<UserMini>,\n};\n\nexport const activityFeedInlineError: Errors = {\n    inlineError: {\n        title: messages.errorOccured,\n        content: messages.activityFeedItemApiError,\n    },\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_ACTIVITY_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass ActivitySidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        annotatorState: {},\n        emitAnnotatorActiveChangeEvent: noop,\n        getAnnotationsMatchPath: noop,\n        getAnnotationsPath: noop,\n        isDisabled: false,\n        onAnnotationSelect: noop,\n        onCommentCreate: noop,\n        onCommentDelete: noop,\n        onCommentUpdate: noop,\n        onTaskAssignmentUpdate: noop,\n        onTaskCreate: noop,\n        onTaskDelete: noop,\n        onTaskUpdate: noop,\n        onVersionChange: noop,\n        onVersionHistoryClick: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        // eslint-disable-next-line react/prop-types\n        const { logger } = this.props;\n\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { currentUser } = this.props;\n        this.fetchFeedItems(true);\n        this.fetchCurrentUser(currentUser);\n    }\n\n    handleAnnotationDelete = ({ id, permissions }: { id: string, permissions: AnnotationPermission }) => {\n        const { api, file } = this.props;\n\n        api.getFeedAPI(false).deleteAnnotation(\n            file,\n            id,\n            permissions,\n            this.deleteAnnotationSuccess.bind(this, id),\n            this.feedErrorCallback,\n        );\n\n        this.fetchFeedItems();\n    };\n\n    deleteAnnotationSuccess(id: string) {\n        const { emitRemoveEvent } = this.props;\n\n        this.feedSuccessCallback();\n        emitRemoveEvent(id);\n    }\n\n    /**\n     * Fetches a Users info\n     *\n     * @private\n     * @param {User} [user] - Box User. If missing, gets user that the current token was generated for.\n     * @param {boolean} shouldDestroy\n     * @return {void}\n     */\n    fetchCurrentUser(user?: User, shouldDestroy?: boolean = false): void {\n        const { api, file } = this.props;\n\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        if (typeof user === 'undefined') {\n            api.getUsersAPI(shouldDestroy).getUser(\n                file.id,\n                this.fetchCurrentUserSuccessCallback,\n                this.fetchCurrentUserErrorCallback,\n            );\n        } else {\n            this.setState({ currentUser: user, currentUserError: undefined });\n        }\n    }\n\n    /**\n     * Success callback for fetching feed items\n     */\n    feedSuccessCallback = (): void => {\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Error callback for fetching feed items\n     *\n     * @param {Error} e - the error which occured\n     * @param {Error} code - the code for the error\n     * @param {Object} contextInfo - the context info for the error\n     */\n    feedErrorCallback = (e: ElementsXhrError, code: string, contextInfo?: Object) => {\n        this.errorCallback(e, code, contextInfo);\n        this.fetchFeedItems();\n    };\n\n    createTask = (\n        message: string,\n        assignees: SelectorItems<>,\n        taskType: TaskType,\n        dueAt: ?string,\n        completionRule: TaskCompletionRule,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ): void => {\n        const { currentUser } = this.state;\n        const { file, api } = this.props;\n\n        if (!currentUser) {\n            throw getBadUserError();\n        }\n        const errorCallback = (e, code, contextInfo) => {\n            if (onError) {\n                onError(e, code, contextInfo);\n            }\n            this.feedErrorCallback(e, code, contextInfo);\n        };\n        const successCallback = () => {\n            if (onSuccess) {\n                onSuccess();\n            }\n            this.feedSuccessCallback();\n        };\n\n        api.getFeedAPI(false).createTaskNew(\n            file,\n            currentUser,\n            message,\n            assignees,\n            taskType,\n            dueAt,\n            completionRule,\n            successCallback,\n            errorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    deleteTask = (task: TaskNew): void => {\n        const { file, api, onTaskDelete } = this.props;\n        api.getFeedAPI(false).deleteTaskNew(\n            file,\n            task,\n            (taskId: string) => {\n                this.feedSuccessCallback();\n                onTaskDelete(taskId);\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateTask = (task: TaskUpdatePayload, onSuccess: ?Function, onError: ?Function): void => {\n        const { file, api, onTaskUpdate } = this.props;\n        const errorCallback = (e, code) => {\n            if (onError) {\n                onError(e, code);\n            }\n            this.feedErrorCallback(e, code);\n        };\n        const successCallback = () => {\n            this.feedSuccessCallback();\n\n            if (onSuccess) {\n                onSuccess();\n            }\n\n            onTaskUpdate();\n        };\n\n        api.getFeedAPI(false).updateTaskNew(file, task, successCallback, errorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateTaskAssignment = (taskId: string, taskAssignmentId: string, status: TaskCollabStatus): void => {\n        const { file, api } = this.props;\n\n        api.getFeedAPI(false).updateTaskCollaborator(\n            file,\n            taskId,\n            taskAssignmentId,\n            status,\n            this.feedSuccessCallback,\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Deletes a comment via the API.\n     *\n     * @param {Object} args - A subset of the comment\n     * @return void\n     */\n    deleteComment = ({ id, permissions }: { id: string, permissions: BoxItemPermission }): void => {\n        const { file, api, onCommentDelete } = this.props;\n\n        api.getFeedAPI(false).deleteComment(\n            file,\n            id,\n            permissions,\n            (comment: Comment) => {\n                this.feedSuccessCallback();\n                onCommentDelete(comment);\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateComment = (\n        id: string,\n        text: string,\n        hasMention: boolean,\n        permissions: BoxItemPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ): void => {\n        const { file, api, onCommentUpdate } = this.props;\n\n        const errorCallback = (e, code) => {\n            if (onError) {\n                onError(e, code);\n            }\n            this.feedErrorCallback(e, code);\n        };\n\n        const successCallback = () => {\n            this.feedSuccessCallback();\n            if (onSuccess) {\n                onSuccess();\n            }\n            onCommentUpdate();\n        };\n\n        api.getFeedAPI(false).updateComment(file, id, text, hasMention, permissions, successCallback, errorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Posts a new comment to the API\n     *\n     * @param {string} text - The comment's text\n     * @param {boolean} hasMention - The comment's text\n     * @return {void}\n     */\n    createComment = (text: string, hasMention: boolean): void => {\n        const { file, api, onCommentCreate } = this.props;\n        const { currentUser } = this.state;\n\n        if (!currentUser) {\n            throw getBadUserError();\n        }\n\n        api.getFeedAPI(false).createComment(\n            file,\n            currentUser,\n            text,\n            hasMention,\n            (comment: Comment) => {\n                onCommentCreate(comment);\n                this.feedSuccessCallback();\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Deletes an app activity item via the API.\n     *\n     * @param {Object} args - A subset of the app activity\n     * @return void\n     */\n    deleteAppActivity = ({ id }: { id: string }): void => {\n        const { file, api } = this.props;\n\n        api.getFeedAPI(false).deleteAppActivity(file, id, this.feedSuccessCallback, this.feedErrorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Fetches the feed items for the sidebar\n     *\n     * @param {boolean} shouldDestroy true if the api factory should be destroyed\n     */\n    fetchFeedItems(shouldRefreshCache: boolean = false, shouldDestroy: boolean = false) {\n        const { file, api, features } = this.props;\n        const shouldShowAppActivity = isFeatureEnabled(features, 'activityFeed.appActivity.enabled');\n        const shouldShowAnnotations = isFeatureEnabled(features, 'activityFeed.annotations.enabled');\n\n        api.getFeedAPI(shouldDestroy).feedItems(\n            file,\n            shouldRefreshCache,\n            this.fetchFeedItemsSuccessCallback,\n            this.fetchFeedItemsErrorCallback,\n            this.errorCallback,\n            { shouldShowAnnotations, shouldShowAppActivity },\n        );\n    }\n\n    /**\n     * Handles a successful feed API fetch\n     *\n     * @private\n     * @param {Array} feedItems - the feed items\n     * @return {void}\n     */\n    fetchFeedItemsSuccessCallback = (feedItems: FeedItems): void => {\n        this.setState({ feedItems, activityFeedError: undefined });\n    };\n\n    /**\n     * Handles a failed feed item fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @return {void}\n     */\n    fetchFeedItemsErrorCallback = (feedItems: FeedItems, errors: ElementsXhrError[]): void => {\n        const { onError } = this.props;\n\n        this.setState({\n            feedItems,\n            activityFeedError: activityFeedInlineError,\n        });\n\n        if (Array.isArray(errors) && errors.length) {\n            onError(new Error('Fetch feed items error'), ERROR_CODE_FETCH_ACTIVITY, {\n                showNotification: true,\n                errors: errors.map(({ code }) => code),\n            });\n        }\n    };\n\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @param {Error} code - the code for the error\n     * @param {Object} contextInfo - the context info for the error\n     * @return {void}\n     */\n    errorCallback = (error: ElementsXhrError, code: string, contextInfo: Object = {}): void => {\n        /* eslint-disable no-console */\n        console.error(error);\n        /* eslint-enable no-console */\n\n        // eslint-disable-next-line react/prop-types\n        this.props.onError(error, code, contextInfo);\n    };\n\n    /**\n     * User fetch success callback\n     *\n     * @private\n     * @param {Object} currentUser - User info object\n     * @return {void}\n     */\n    fetchCurrentUserSuccessCallback = (currentUser: User): void => {\n        this.setState({ currentUser, currentUserError: undefined });\n    };\n\n    /**\n     * File approver contacts fetch success callback\n     *\n     * @private\n     * @param {BoxItemCollection} collaborators - Collaborators response data\n     * @return {void}\n     */\n    getApproverContactsSuccessCallback = (collaborators: { entries: SelectorItems<> }): void => {\n        const { entries } = collaborators;\n        this.setState({ approverSelectorContacts: entries });\n    };\n\n    /**\n     * File @mention contacts fetch success callback\n     *\n     * @private\n     * @param {BoxItemCollection} collaborators - Collaborators response data\n     * @return {void}\n     */\n    getMentionContactsSuccessCallback = (collaborators: { entries: SelectorItems<> }): void => {\n        const { entries } = collaborators;\n        this.setState({ mentionSelectorContacts: entries });\n    };\n\n    /**\n     * File @mention contacts fetch success callback\n     *\n     * @private\n     * @param {string} searchStr - Search string to filter file collaborators by\n     * @return {void}\n     */\n    getApproverWithQuery = debounce(\n        (searchStr: string) =>\n            this.getCollaborators(this.getApproverContactsSuccessCallback, this.errorCallback, searchStr, {\n                includeGroups: true,\n            }),\n        DEFAULT_COLLAB_DEBOUNCE,\n    );\n\n    /**\n     * Fetches file @mention's\n     *\n     * @private\n     * @param {string} searchStr - Search string to filter file collaborators by\n     * @return {void}\n     */\n    getMentionWithQuery = debounce(\n        (searchStr: string) =>\n            this.getCollaborators(this.getMentionContactsSuccessCallback, this.errorCallback, searchStr),\n        DEFAULT_COLLAB_DEBOUNCE,\n    );\n\n    /**\n     * Fetches file collaborators\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {string} searchStr - the search string\n     * @param {Object} [options]\n     * @param {boolean} [options.includeGroups] - return groups as well as users\n     * @return {void}\n     */\n    getCollaborators(\n        successCallback: Collaborators => void,\n        errorCallback: ElementsErrorCallback,\n        searchStr: string,\n        { includeGroups = false }: { includeGroups: boolean } = {},\n    ): void {\n        // Do not fetch without filter\n        const { file, api } = this.props;\n        if (!searchStr || searchStr.trim() === '') {\n            return;\n        }\n\n        api.getFileCollaboratorsAPI(true).getFileCollaborators(file.id, successCallback, errorCallback, {\n            filter_term: searchStr,\n            include_groups: includeGroups,\n            include_uploader_collabs: false,\n        });\n    }\n\n    /**\n     * Handles a failed file user info fetch\n     *\n     * @private\n     * @param {ElementsXhrError} e - API error\n     * @return {void}\n     */\n    fetchCurrentUserErrorCallback = (e: ElementsXhrError, code: string) => {\n        this.setState({\n            currentUser: undefined,\n            currentUserError: {\n                maskError: {\n                    errorHeader: messages.currentUserErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            },\n        });\n\n        this.errorCallback(e, code, {\n            error: e,\n        });\n    };\n\n    /**\n     * Gets the user avatar URL\n     *\n     * @param {string} userId the user id\n     * @param {string} fileId the file id\n     * @return the user avatar URL string for a given user with access token attached\n     */\n    getAvatarUrl = async (userId: string): Promise<?string> => {\n        const { file, api } = this.props;\n\n        return api.getUsersAPI(false).getAvatarUrlWithAccessToken(userId, file.id);\n    };\n\n    handleAnnotationSelect = (annotation: Annotation): void => {\n        const { file_version, id: nextActiveAnnotationId } = annotation;\n        const {\n            emitAnnotatorActiveChangeEvent,\n            file,\n            getAnnotationsMatchPath,\n            getAnnotationsPath,\n            history,\n            location,\n            onAnnotationSelect,\n        } = this.props;\n        const annotationFileVersionId = getProp(file_version, 'id');\n        const currentFileVersionId = getProp(file, 'file_version.id');\n        const match = getAnnotationsMatchPath(location);\n        const selectedFileVersionId = getProp(match, 'params.fileVersionId', currentFileVersionId);\n\n        emitAnnotatorActiveChangeEvent(nextActiveAnnotationId);\n\n        if (annotationFileVersionId && annotationFileVersionId !== selectedFileVersionId) {\n            history.push(getAnnotationsPath(annotationFileVersionId, nextActiveAnnotationId));\n        }\n\n        onAnnotationSelect(annotation);\n    };\n\n    onTaskModalClose = () => {\n        this.setState({\n            approverSelectorContacts: [],\n        });\n    };\n\n    refresh(shouldRefreshCache: boolean = true): void {\n        this.fetchFeedItems(shouldRefreshCache);\n    }\n\n    renderAddTaskButton = () => {\n        const { isDisabled } = this.props;\n        const { approverSelectorContacts } = this.state;\n        const { getApproverWithQuery, getAvatarUrl, createTask, onTaskModalClose } = this;\n        const taskFormProps = {\n            approverSelectorContacts,\n            completionRule: TASK_COMPLETION_RULE_ALL,\n            createTask,\n            getApproverWithQuery,\n            getAvatarUrl,\n            id: '',\n            message: '',\n            approvers: [],\n        };\n        return (\n            <AddTaskButton isDisabled={isDisabled} onTaskModalClose={onTaskModalClose} taskFormProps={taskFormProps} />\n        );\n    };\n\n    render() {\n        const {\n            elementId,\n            file,\n            isDisabled = false,\n            onVersionHistoryClick,\n            getUserProfileUrl,\n            activeFeedEntryId,\n            activeFeedEntryType,\n            onTaskView,\n        } = this.props;\n        const {\n            currentUser,\n            approverSelectorContacts,\n            mentionSelectorContacts,\n            feedItems,\n            activityFeedError,\n            currentUserError,\n        } = this.state;\n\n        return (\n            <SidebarContent\n                actions={this.renderAddTaskButton()}\n                className=\"bcs-activity\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_ACTIVITY}\n                title={<FormattedMessage {...messages.sidebarActivityTitle} />}\n            >\n                <ActivityFeed\n                    activeFeedEntryId={activeFeedEntryId}\n                    activeFeedEntryType={activeFeedEntryType}\n                    activityFeedError={activityFeedError}\n                    approverSelectorContacts={approverSelectorContacts}\n                    currentUser={currentUser}\n                    currentUserError={currentUserError}\n                    feedItems={feedItems}\n                    file={file}\n                    getApproverWithQuery={this.getApproverWithQuery}\n                    getAvatarUrl={this.getAvatarUrl}\n                    getMentionWithQuery={this.getMentionWithQuery}\n                    getUserProfileUrl={getUserProfileUrl}\n                    isDisabled={isDisabled}\n                    mentionSelectorContacts={mentionSelectorContacts}\n                    onAnnotationDelete={this.handleAnnotationDelete}\n                    onAnnotationSelect={this.handleAnnotationSelect}\n                    onAppActivityDelete={this.deleteAppActivity}\n                    onCommentCreate={this.createComment}\n                    onCommentDelete={this.deleteComment}\n                    onCommentUpdate={this.updateComment}\n                    onTaskAssignmentUpdate={this.updateTaskAssignment}\n                    onTaskCreate={this.createTask}\n                    onTaskDelete={this.deleteTask}\n                    onTaskModalClose={this.onTaskModalClose}\n                    onTaskUpdate={this.updateTask}\n                    onTaskView={onTaskView}\n                    onVersionHistoryClick={onVersionHistoryClick}\n                />\n            </SidebarContent>\n        );\n    }\n}\n\nexport type ActivitySidebarProps = ExternalProps;\nexport { ActivitySidebar as ActivitySidebarComponent };\nexport default flow([\n    withLogger(ORIGIN_ACTIVITY_SIDEBAR),\n    withErrorBoundary(ORIGIN_ACTIVITY_SIDEBAR),\n    withAPIContext,\n    withFeatureConsumer,\n    withAnnotatorContext,\n    withRouterAndRef,\n])(ActivitySidebar);\n"]},"metadata":{},"sourceType":"module"}