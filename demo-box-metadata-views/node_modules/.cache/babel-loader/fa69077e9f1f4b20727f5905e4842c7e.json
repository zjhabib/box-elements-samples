{"ast":null,"code":"/**\n * \n * @file Skills card component\n * @author Box\n */\nimport React from 'react';\nimport Status from './status';\nimport Transcript from './transcript';\nimport Keywords from './keywords';\nimport Faces from './faces';\nimport { SKILLS_TRANSCRIPT, SKILLS_KEYWORD, SKILLS_TIMELINE, SKILLS_FACE, SKILLS_STATUS } from '../../../constants';\nvar SidebarSkillsCard = function SidebarSkillsCard(_ref) {\n  var card = _ref.card,\n    cards = _ref.cards,\n    hasError = _ref.hasError,\n    isEditable = _ref.isEditable,\n    onSkillChange = _ref.onSkillChange,\n    getViewer = _ref.getViewer;\n  switch (card.skill_card_type) {\n    case SKILLS_KEYWORD:\n      return React.createElement(Keywords, {\n        card: card,\n        getViewer: getViewer,\n        hasError: hasError,\n        isEditable: isEditable,\n        onSkillChange: onSkillChange,\n        transcript: isEditable ? cards.find(function (_ref2) {\n          var skill_card_type = _ref2.skill_card_type;\n          return skill_card_type === SKILLS_TRANSCRIPT;\n        }) : undefined\n      });\n    case SKILLS_TIMELINE:\n    case SKILLS_FACE:\n      return React.createElement(Faces, {\n        card: card,\n        getViewer: getViewer,\n        hasError: hasError,\n        isEditable: isEditable,\n        onSkillChange: onSkillChange\n      });\n    case SKILLS_TRANSCRIPT:\n      return React.createElement(Transcript, {\n        card: card,\n        getViewer: getViewer,\n        hasError: hasError,\n        isEditable: isEditable,\n        onSkillChange: onSkillChange\n      });\n    case SKILLS_STATUS:\n      return React.createElement(Status, {\n        card: card\n      });\n    default:\n      return null;\n  }\n};\nexport default SidebarSkillsCard;","map":{"version":3,"sources":["../../../../src/elements/content-sidebar/skills/SidebarSkillsCard.js"],"names":["React","Status","Transcript","Keywords","Faces","SKILLS_TRANSCRIPT","SKILLS_KEYWORD","SKILLS_TIMELINE","SKILLS_FACE","SKILLS_STATUS","SidebarSkillsCard","card","cards","hasError","isEditable","onSkillChange","getViewer","skill_card_type","find","undefined"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,iBAAT,EAA4BC,cAA5B,EAA4CC,eAA5C,EAA6DC,WAA7D,EAA0EC,aAA1E,QAA+F,oBAA/F;AAYA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,IAAA,EAA4E;EAAA,IAAzEC,IAAyE,GAAA,IAAA,CAAzEA,IAAyE;IAAnEC,KAAmE,GAAA,IAAA,CAAnEA,KAAmE;IAA5DC,QAA4D,GAAA,IAAA,CAA5DA,QAA4D;IAAlDC,UAAkD,GAAA,IAAA,CAAlDA,UAAkD;IAAtCC,aAAsC,GAAA,IAAA,CAAtCA,aAAsC;IAAvBC,SAAuB,GAAA,IAAA,CAAvBA,SAAuB;EAClG,QAAQL,IAAI,CAACM,eAAb;IACI,KAAKX,cAAL;MACI,OACI,KAAA,CAAA,aAAA,CAAC,QAAD,EAAA;QACI,IAAI,EAAEK,IADV;QAEI,SAAS,EAAEK,SAFf;QAGI,QAAQ,EAAEH,QAHd;QAII,UAAU,EAAEC,UAJhB;QAKI,aAAa,EAAEC,aALnB;QAMI,UAAU,EACND,UAAU,GACJ,KAAK,CAACI,IAAN,CAAW,UAAA,KAAA,EAAA;UAAA,IAAGD,eAAH,GAAA,KAAA,CAAGA,eAAH;UAAA,OAAyBA,eAAe,KAAKZ,iBAA7C;QAAA,CAAX,CADI,GAEJc;MATd,CAAA,CADJ;IAcJ,KAAKZ,eAAL;IACA,KAAKC,WAAL;MACI,OACI,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA;QACI,IAAI,EAAEG,IADV;QAEI,SAAS,EAAEK,SAFf;QAGI,QAAQ,EAAEH,QAHd;QAII,UAAU,EAAEC,UAJhB;QAKI,aAAa,EAAEC;MALnB,CAAA,CADJ;IASJ,KAAKV,iBAAL;MACI,OACI,KAAA,CAAA,aAAA,CAAC,UAAD,EAAA;QACI,IAAI,EAAEM,IADV;QAEI,SAAS,EAAEK,SAFf;QAGI,QAAQ,EAAEH,QAHd;QAII,UAAU,EAAEC,UAJhB;QAKI,aAAa,EAAEC;MALnB,CAAA,CADJ;IASJ,KAAKN,aAAL;MACI,OAAO,KAAA,CAAA,aAAA,CAAC,MAAD,EAAA;QAAQ,IAAI,EAAEE;MAAd,CAAA,CAAP;IACJ;MACI,OAAO,IAAP;EAxCR;AA0CH,CA3CD;AA6CA,eAAeD,iBAAf","sourcesContent":["/**\n * @flow\n * @file Skills card component\n * @author Box\n */\n\nimport React from 'react';\nimport Status from './status';\nimport Transcript from './transcript';\nimport Keywords from './keywords';\nimport Faces from './faces';\nimport { SKILLS_TRANSCRIPT, SKILLS_KEYWORD, SKILLS_TIMELINE, SKILLS_FACE, SKILLS_STATUS } from '../../../constants';\nimport type { SkillCard } from '../../../common/types/skills';\n\ntype Props = {\n    card: SkillCard,\n    cards: Array<SkillCard>,\n    getViewer: Function,\n    hasError: boolean,\n    isEditable: boolean,\n    onSkillChange: Function,\n};\n\nconst SidebarSkillsCard = ({ card, cards, hasError, isEditable, onSkillChange, getViewer }: Props) => {\n    switch (card.skill_card_type) {\n        case SKILLS_KEYWORD:\n            return (\n                <Keywords\n                    card={card}\n                    getViewer={getViewer}\n                    hasError={hasError}\n                    isEditable={isEditable}\n                    onSkillChange={onSkillChange}\n                    transcript={\n                        isEditable\n                            ? cards.find(({ skill_card_type }) => skill_card_type === SKILLS_TRANSCRIPT)\n                            : undefined\n                    }\n                />\n            );\n        case SKILLS_TIMELINE:\n        case SKILLS_FACE:\n            return (\n                <Faces\n                    card={card}\n                    getViewer={getViewer}\n                    hasError={hasError}\n                    isEditable={isEditable}\n                    onSkillChange={onSkillChange}\n                />\n            );\n        case SKILLS_TRANSCRIPT:\n            return (\n                <Transcript\n                    card={card}\n                    getViewer={getViewer}\n                    hasError={hasError}\n                    isEditable={isEditable}\n                    onSkillChange={onSkillChange}\n                />\n            );\n        case SKILLS_STATUS:\n            return <Status card={card} />;\n        default:\n            return null;\n    }\n};\n\nexport default SidebarSkillsCard;\n"]},"metadata":{},"sourceType":"module"}