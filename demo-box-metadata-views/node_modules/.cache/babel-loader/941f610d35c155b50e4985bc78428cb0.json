{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '../../../../../components/tooltip';\nimport ReadableTime from '../../../../../components/time/ReadableTime';\nimport messages from './messages';\nimport './ActivityTimestamp.scss';\nvar ActivityTimestamp = function ActivityTimestamp(_ref) {\n  var date = _ref.date;\n  return React.createElement(Tooltip, {\n    text: React.createElement(FormattedMessage, _extends({}, messages.fullDateTime, {\n      values: {\n        time: date\n      }\n    }))\n  }, React.createElement(\"small\", {\n    className: \"bcs-ActivityTimestamp\"\n  }, React.createElement(ReadableTime, {\n    relativeThreshold: 0,\n    alwaysShowTime: true,\n    timestamp: date\n  })));\n};\nexport default ActivityTimestamp;","map":{"version":3,"sources":["../../../../../../src/elements/content-sidebar/activity-feed/common/activity-timestamp/ActivityTimestamp.js"],"names":["React","FormattedMessage","Tooltip","ReadableTime","messages","ActivityTimestamp","date","fullDateTime","time"],"mappings":";;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,0BAAP;AAMA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,IAAA,EAAA;EAAA,IAAGC,IAAH,GAAA,IAAA,CAAGA,IAAH;EAAA,OACtB,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA;IAAS,IAAI,EAAE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAsBF,QAAQ,CAACG,YAA/B,EAAA;MAA6C,MAAM,EAAE;QAAEC,IAAI,EAAEF;MAAR;IAArD,CAAA,CAAA;EAAf,CAAA,EACI,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;IAAO,SAAS,EAAC;EAAjB,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,YAAD,EAAA;IAAc,iBAAiB,EAAE,CAAjC;IAAoC,cAAc,EAAA,IAAlD;IAAmD,SAAS,EAAEA;EAA9D,CAAA,CADJ,CADJ,CADsB;AAAA,CAA1B;AAQA,eAAeD,iBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '../../../../../components/tooltip';\nimport ReadableTime from '../../../../../components/time/ReadableTime';\nimport messages from './messages';\nimport './ActivityTimestamp.scss';\n\ntype Props = {\n    date: number, // unix epoch timestamp (new Date().getTime())\n};\n\nconst ActivityTimestamp = ({ date }: Props) => (\n    <Tooltip text={<FormattedMessage {...messages.fullDateTime} values={{ time: date }} />}>\n        <small className=\"bcs-ActivityTimestamp\">\n            <ReadableTime relativeThreshold={0} alwaysShowTime timestamp={date} />\n        </small>\n    </Tooltip>\n);\n\nexport default ActivityTimestamp;\n"]},"metadata":{},"sourceType":"module"}