{"ast":null,"code":"/**\n * \n * @file Utility functions for urls\n * @author Box\n */\nimport Uri from 'jsuri';\n/**\n * Update URL query parameters\n *\n * @param {string} url - the url that contains the potential query parameter string\n * @param {Object} queryParams\n * @return {string}\n */\n\nfunction updateQueryParameters(url, queryParams) {\n  if (!queryParams) {\n    return url;\n  }\n  var uri = new Uri(url);\n  Object.keys(queryParams).forEach(function (key) {\n    var value = queryParams[key];\n    if (!value) {\n      return;\n    }\n    if (uri.hasQueryParam(key)) {\n      uri.replaceQueryParam(key, value);\n      return;\n    }\n    uri.addQueryParam(key, value);\n  });\n  return uri.toString();\n} // eslint-disable-next-line import/prefer-default-export\n\nexport { updateQueryParameters };","map":{"version":3,"sources":["../../src/utils/url.js"],"names":["Uri","updateQueryParameters","url","queryParams","uri","Object","keys","forEach","value","key","hasQueryParam","replaceQueryParam","addQueryParam","toString"],"mappings":"AAAA;;;;;AAKA,OAAOA,GAAP,MAAgB,OAAhB;AAEA;;;;;;;;AAOA,SAASC,qBAAT,CAA+BC,GAA/B,EAA4CC,WAA5C,EAAyE;EACrE,IAAI,CAACA,WAAL,EAAkB;IACd,OAAOD,GAAP;EACH;EAED,IAAME,GAAG,GAAG,IAAIJ,GAAJ,CAAQE,GAAR,CAAZ;EAEAG,MAAM,CAACC,IAAPD,CAAYF,WAAZE,CAAAA,CAAyBE,OAAzBF,CAAiC,UAAA,GAAG,EAAI;IACpC,IAAMG,KAAK,GAAGL,WAAW,CAACM,GAAD,CAAzB;IAEA,IAAI,CAACD,KAAL,EAAY;MACR;IACH;IAED,IAAIJ,GAAG,CAACM,aAAJN,CAAkBK,GAAlBL,CAAJ,EAA4B;MACxBA,GAAG,CAACO,iBAAJP,CAAsBK,GAAtBL,EAA2BI,KAA3BJ,CAAAA;MACA;IACH;IAEDA,GAAG,CAACQ,aAAJR,CAAkBK,GAAlBL,EAAuBI,KAAvBJ,CAAAA;EACH,CAbDC,CAAAA;EAeA,OAAOD,GAAG,CAACS,QAAJT,CAAAA,CAAP;AACH,C,CAED;;AACA,SAASH,qBAAT","sourcesContent":["/**\n * @flow\n * @file Utility functions for urls\n * @author Box\n */\nimport Uri from 'jsuri';\n\n/**\n * Update URL query parameters\n *\n * @param {string} url - the url that contains the potential query parameter string\n * @param {Object} queryParams\n * @return {string}\n */\nfunction updateQueryParameters(url: string, queryParams: Object): string {\n    if (!queryParams) {\n        return url;\n    }\n\n    const uri = new Uri(url);\n\n    Object.keys(queryParams).forEach(key => {\n        const value = queryParams[key];\n\n        if (!value) {\n            return;\n        }\n\n        if (uri.hasQueryParam(key)) {\n            uri.replaceQueryParam(key, value);\n            return;\n        }\n\n        uri.addQueryParam(key, value);\n    });\n\n    return uri.toString();\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport { updateQueryParameters };\n"]},"metadata":{},"sourceType":"module"}