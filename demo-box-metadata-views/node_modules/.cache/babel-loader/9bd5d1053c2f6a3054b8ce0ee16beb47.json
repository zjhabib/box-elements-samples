{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PlainButton from '../../../../components/plain-button';\nimport messages from './messages';\nimport AvatarGroupAvatar from './AvatarGroupAvatar';\nimport AssigneeDetails from './AssigneeDetails';\nimport './AssigneeList.scss';\nvar DEFAULT_ASSIGNEES_SHOWN = 3;\nvar TASKS_PAGE_SIZE = 20; // service does not return the page size to the client at the moment\n\nfunction AssigneeList(props) {\n  var _props$initialAssigne = props.initialAssigneeCount,\n    initialAssigneeCount = _props$initialAssigne === void 0 ? DEFAULT_ASSIGNEES_SHOWN : _props$initialAssigne,\n    _props$users = props.users,\n    users = _props$users === void 0 ? {} : _props$users,\n    getAvatarUrl = props.getAvatarUrl,\n    isOpen = props.isOpen,\n    onCollapse = props.onCollapse,\n    onExpand = props.onExpand;\n  var _users$entries = users.entries,\n    entries = _users$entries === void 0 ? [] : _users$entries,\n    next_marker = users.next_marker;\n  var entryCount = entries.length;\n  var numVisibleAssignees = isOpen ? entryCount : initialAssigneeCount;\n  var visibleUsers = entries.slice(0, numVisibleAssignees).map(function (_ref) {\n    var id = _ref.id,\n      target = _ref.target,\n      status = _ref.status,\n      completedAt = _ref.completed_at;\n    return React.createElement(\"li\", {\n      key: id,\n      className: \"bcs-AssigneeList-listItem\",\n      \"data-testid\": \"assignee-list-item\"\n    }, React.createElement(AvatarGroupAvatar, {\n      status: status,\n      className: \"bcs-AssigneeList-listItemAvatar\",\n      user: target,\n      getAvatarUrl: getAvatarUrl\n    }), React.createElement(AssigneeDetails, {\n      user: target,\n      status: status,\n      completedAt: completedAt\n    }));\n  });\n  var hiddenAssigneeCount = Math.max(0, entryCount - initialAssigneeCount);\n  var maxAdditionalAssignees = TASKS_PAGE_SIZE - initialAssigneeCount;\n  var hasMoreAssigneesThanPageSize = hiddenAssigneeCount > maxAdditionalAssignees || next_marker;\n  var additionalAssigneeMessage = hasMoreAssigneesThanPageSize ? messages.taskShowMoreAssigneesOverflow : messages.taskShowMoreAssignees;\n  return React.createElement(\"div\", {\n    className: \"bcs-AssigneeList\"\n  }, React.createElement(\"ul\", {\n    className: \"bcs-AssigneeList-list\",\n    \"data-testid\": \"task-assignee-list\"\n  }, visibleUsers), !isOpen && hiddenAssigneeCount > 0 && React.createElement(\"div\", {\n    className: \"bcs-AssigneeList-toggleBtn\"\n  }, React.createElement(PlainButton, {\n    \"data-resin-target\": \"showmorebtn\",\n    \"data-testid\": \"show-more-assignees\",\n    onClick: onExpand,\n    className: \"lnk\"\n  }, React.createElement(FormattedMessage, _extends({}, additionalAssigneeMessage, {\n    values: {\n      additionalAssigneeCount: hasMoreAssigneesThanPageSize ? maxAdditionalAssignees : hiddenAssigneeCount\n    }\n  })))), isOpen && React.createElement(\"div\", {\n    className: \"bcs-AssigneeList-toggleBtn\"\n  }, React.createElement(PlainButton, {\n    \"data-resin-target\": \"showlessbtn\",\n    \"data-testid\": \"show-less-assignees\",\n    onClick: onCollapse,\n    className: \"lnk\"\n  }, React.createElement(FormattedMessage, messages.taskShowLessAssignees))));\n}\nexport default AssigneeList;","map":{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/task-new/AssigneeList.js"],"names":["React","FormattedMessage","PlainButton","messages","AvatarGroupAvatar","AssigneeDetails","DEFAULT_ASSIGNEES_SHOWN","TASKS_PAGE_SIZE","AssigneeList","props","initialAssigneeCount","users","getAvatarUrl","isOpen","onCollapse","onExpand","entries","next_marker","entryCount","length","numVisibleAssignees","visibleUsers","slice","map","id","target","status","completed_at","completedAt","hiddenAssigneeCount","Math","max","maxAdditionalAssignees","hasMoreAssigneesThanPageSize","additionalAssigneeMessage","taskShowMoreAssigneesOverflow","taskShowMoreAssignees","additionalAssigneeCount","taskShowLessAssignees"],"mappings":"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","sourcesContent":["// @flow strict\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PlainButton from '../../../../components/plain-button';\nimport messages from './messages';\nimport AvatarGroupAvatar from './AvatarGroupAvatar';\nimport AssigneeDetails from './AssigneeDetails';\nimport type { TaskAssigneeCollection } from '../../../../common/types/tasks';\nimport type { GetAvatarUrlCallback } from '../../../common/flowTypes';\n\nimport './AssigneeList.scss';\n\nconst DEFAULT_ASSIGNEES_SHOWN = 3;\nconst TASKS_PAGE_SIZE = 20; // service does not return the page size to the client at the moment\n\ntype Props = {|\n    getAvatarUrl: GetAvatarUrlCallback,\n    initialAssigneeCount: number,\n    isOpen: boolean,\n    onCollapse: () => void | Promise<void>,\n    onExpand: () => void | Promise<void>,\n    users: TaskAssigneeCollection,\n|};\n\nfunction AssigneeList(props: Props) {\n    const {\n        initialAssigneeCount = DEFAULT_ASSIGNEES_SHOWN,\n        users = {},\n        getAvatarUrl,\n        isOpen,\n        onCollapse,\n        onExpand,\n    } = props;\n    const { entries = [], next_marker } = users;\n    const entryCount = entries.length;\n    const numVisibleAssignees = isOpen ? entryCount : initialAssigneeCount;\n    const visibleUsers = entries\n        .slice(0, numVisibleAssignees)\n        .map(({ id, target, status, completed_at: completedAt }) => {\n            return (\n                <li key={id} className=\"bcs-AssigneeList-listItem\" data-testid=\"assignee-list-item\">\n                    <AvatarGroupAvatar\n                        status={status}\n                        className=\"bcs-AssigneeList-listItemAvatar\"\n                        user={target}\n                        getAvatarUrl={getAvatarUrl}\n                    />\n                    <AssigneeDetails user={target} status={status} completedAt={completedAt} />\n                </li>\n            );\n        });\n\n    const hiddenAssigneeCount = Math.max(0, entryCount - initialAssigneeCount);\n    const maxAdditionalAssignees = TASKS_PAGE_SIZE - initialAssigneeCount;\n    const hasMoreAssigneesThanPageSize = hiddenAssigneeCount > maxAdditionalAssignees || next_marker;\n    const additionalAssigneeMessage = hasMoreAssigneesThanPageSize\n        ? messages.taskShowMoreAssigneesOverflow\n        : messages.taskShowMoreAssignees;\n\n    return (\n        <div className=\"bcs-AssigneeList\">\n            <ul className=\"bcs-AssigneeList-list\" data-testid=\"task-assignee-list\">\n                {visibleUsers}\n            </ul>\n            {!isOpen && hiddenAssigneeCount > 0 && (\n                <div className=\"bcs-AssigneeList-toggleBtn\">\n                    <PlainButton\n                        data-resin-target=\"showmorebtn\"\n                        data-testid=\"show-more-assignees\"\n                        onClick={onExpand}\n                        className=\"lnk\"\n                    >\n                        <FormattedMessage\n                            {...additionalAssigneeMessage}\n                            values={{\n                                additionalAssigneeCount: hasMoreAssigneesThanPageSize\n                                    ? maxAdditionalAssignees\n                                    : hiddenAssigneeCount,\n                            }}\n                        />\n                    </PlainButton>\n                </div>\n            )}\n            {isOpen && (\n                <div className=\"bcs-AssigneeList-toggleBtn\">\n                    <PlainButton\n                        data-resin-target=\"showlessbtn\"\n                        data-testid=\"show-less-assignees\"\n                        onClick={onCollapse}\n                        className=\"lnk\"\n                    >\n                        <FormattedMessage {...messages.taskShowLessAssignees} />\n                    </PlainButton>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AssigneeList;\n"]},"metadata":{},"sourceType":"module"}