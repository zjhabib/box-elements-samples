{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Versions Sidebar API Helper\n * @author Box\n */\nimport API from '../../../api';\nimport { FILE_VERSION_FIELDS_TO_FETCH } from '../../../utils/fields';\nvar VersionsSidebarAPI = function VersionsSidebarAPI(_ref) {\n  var _this = this;\n  var api = _ref.api,\n    fileId = _ref.fileId;\n  _classCallCheck(this, VersionsSidebarAPI);\n  _defineProperty(this, \"fetchData\", function () {\n    return Promise.all([_this.fetchFile(), _this.fetchVersions()]).then(_this.fetchVersionCurrent);\n  });\n  _defineProperty(this, \"fetchDownloadUrl\", function (version) {\n    return new Promise(function (resolve, reject) {\n      if (!version) {\n        return reject(new Error('Could not find requested version'));\n      }\n      return _this.api.getFileAPI().getDownloadUrl(_this.fileId, version, resolve, reject);\n    });\n  });\n  _defineProperty(this, \"fetchFile\", function () {\n    return new Promise(function (resolve, reject) {\n      return _this.api.getFileAPI().getFile(_this.fileId, resolve, reject, {\n        fields: FILE_VERSION_FIELDS_TO_FETCH,\n        forceFetch: true\n      });\n    });\n  });\n  _defineProperty(this, \"fetchVersions\", function () {\n    return new Promise(function (resolve, reject) {\n      return _this.api.getVersionsAPI(false).getVersions(_this.fileId, resolve, reject);\n    });\n  });\n  _defineProperty(this, \"fetchVersionCurrent\", function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n      fileResponse = _ref3[0],\n      versionsResponse = _ref3[1];\n    var _fileResponse$file_ve = fileResponse.file_version,\n      file_version = _fileResponse$file_ve === void 0 ? {} : _fileResponse$file_ve;\n    return new Promise(function (resolve, reject) {\n      return _this.api.getVersionsAPI(false).getVersion(_this.fileId, file_version.id, function (currentVersionResponse) {\n        resolve([fileResponse, _this.api.getVersionsAPI(false).addCurrentVersion(currentVersionResponse, versionsResponse, fileResponse)]);\n      }, reject);\n    });\n  });\n  _defineProperty(this, \"fetchVersion\", function (versionId) {\n    return new Promise(function (resolve, reject) {\n      return _this.api.getVersionsAPI(false).getVersion(_this.fileId, versionId, resolve, reject);\n    });\n  });\n  _defineProperty(this, \"deleteVersion\", function (version) {\n    var _ref4 = version || {},\n      versionId = _ref4.id,\n      _ref4$permissions = _ref4.permissions,\n      permissions = _ref4$permissions === void 0 ? {} : _ref4$permissions;\n    return new Promise(function (resolve, reject) {\n      return _this.api.getVersionsAPI(false).deleteVersion({\n        fileId: _this.fileId,\n        permissions: permissions,\n        successCallback: resolve,\n        errorCallback: reject,\n        versionId: versionId\n      });\n    });\n  });\n  _defineProperty(this, \"promoteVersion\", function (version) {\n    var _ref5 = version || {},\n      versionId = _ref5.id,\n      _ref5$permissions = _ref5.permissions,\n      permissions = _ref5$permissions === void 0 ? {} : _ref5$permissions;\n    return new Promise(function (resolve, reject) {\n      return _this.api.getVersionsAPI(false).promoteVersion({\n        fileId: _this.fileId,\n        permissions: permissions,\n        successCallback: resolve,\n        errorCallback: reject,\n        versionId: versionId\n      });\n    });\n  });\n  _defineProperty(this, \"restoreVersion\", function (version) {\n    var _ref6 = version || {},\n      versionId = _ref6.id,\n      _ref6$permissions = _ref6.permissions,\n      permissions = _ref6$permissions === void 0 ? {} : _ref6$permissions;\n    return new Promise(function (resolve, reject) {\n      return _this.api.getVersionsAPI(false).restoreVersion({\n        fileId: _this.fileId,\n        permissions: permissions,\n        successCallback: resolve,\n        errorCallback: reject,\n        versionId: versionId\n      });\n    });\n  });\n  this.api = api;\n  this.fileId = fileId;\n};\nexport { VersionsSidebarAPI as default };","map":{"version":3,"sources":["../../../../src/elements/content-sidebar/versions/VersionsSidebarAPI.js"],"names":["API","FILE_VERSION_FIELDS_TO_FETCH","VersionsSidebarAPI","api","fileId","Promise","all","fetchFile","fetchVersions","then","fetchVersionCurrent","version","resolve","reject","Error","getFileAPI","getDownloadUrl","getFile","fields","forceFetch","getVersionsAPI","getVersions","fileResponse","versionsResponse","file_version","getVersion","id","currentVersionResponse","addCurrentVersion","versionId","permissions","deleteVersion","successCallback","errorCallback","promoteVersion","restoreVersion"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Versions Sidebar API Helper\n * @author Box\n */\nimport API from '../../../api';\nimport { FILE_VERSION_FIELDS_TO_FETCH } from '../../../utils/fields';\nimport type { BoxItem, FileVersions, BoxItemVersion } from '../../../common/types/core';\n\nexport type fetchPayload = [BoxItem, FileVersions];\n\nexport default class VersionsSidebarAPI {\n    api: API;\n\n    fileId: string;\n\n    constructor({ api, fileId }: { api: API, fileId: string }) {\n        this.api = api;\n        this.fileId = fileId;\n    }\n\n    fetchData = (): Promise<fetchPayload> => {\n        return Promise.all([this.fetchFile(), this.fetchVersions()]).then(this.fetchVersionCurrent);\n    };\n\n    fetchDownloadUrl = (version: ?BoxItemVersion): Promise<string> => {\n        return new Promise((resolve, reject) => {\n            if (!version) {\n                return reject(new Error('Could not find requested version'));\n            }\n\n            return this.api.getFileAPI().getDownloadUrl(this.fileId, version, resolve, reject);\n        });\n    };\n\n    fetchFile = (): Promise<BoxItem> => {\n        return new Promise((resolve, reject) =>\n            this.api.getFileAPI().getFile(this.fileId, resolve, reject, {\n                fields: FILE_VERSION_FIELDS_TO_FETCH,\n                forceFetch: true,\n            }),\n        );\n    };\n\n    fetchVersions = (): Promise<FileVersions> => {\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).getVersions(this.fileId, resolve, reject),\n        );\n    };\n\n    fetchVersionCurrent = ([fileResponse, versionsResponse]: fetchPayload): Promise<fetchPayload> => {\n        const { file_version = {} } = fileResponse;\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).getVersion(\n                this.fileId,\n                file_version.id,\n                (currentVersionResponse: BoxItemVersion) => {\n                    resolve([\n                        fileResponse,\n                        this.api\n                            .getVersionsAPI(false)\n                            .addCurrentVersion(currentVersionResponse, versionsResponse, fileResponse),\n                    ]);\n                },\n                reject,\n            ),\n        );\n    };\n\n    fetchVersion = (versionId: string): Promise<BoxItemVersion> => {\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).getVersion(this.fileId, versionId, resolve, reject),\n        );\n    };\n\n    deleteVersion = (version: ?BoxItemVersion): Promise<null> => {\n        const { id: versionId, permissions = {} } = version || {};\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).deleteVersion({\n                fileId: this.fileId,\n                permissions,\n                successCallback: resolve,\n                errorCallback: reject,\n                versionId,\n            }),\n        );\n    };\n\n    promoteVersion = (version: ?BoxItemVersion): Promise<BoxItemVersion> => {\n        const { id: versionId, permissions = {} } = version || {};\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).promoteVersion({\n                fileId: this.fileId,\n                permissions,\n                successCallback: resolve,\n                errorCallback: reject,\n                versionId,\n            }),\n        );\n    };\n\n    restoreVersion = (version: ?BoxItemVersion): Promise<any> => {\n        const { id: versionId, permissions = {} } = version || {};\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).restoreVersion({\n                fileId: this.fileId,\n                permissions,\n                successCallback: resolve,\n                errorCallback: reject,\n                versionId,\n            }),\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}