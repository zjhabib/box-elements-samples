{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport AnnotatorContext from './AnnotatorContext';\nexport default function withAnnotatorContext(WrappedComponent) {\n  return React.forwardRef(function (props, ref) {\n    return React.createElement(AnnotatorContext.Consumer, null, function (_ref) {\n      var emitActiveChangeEvent = _ref.emitActiveChangeEvent,\n        emitRemoveEvent = _ref.emitRemoveEvent,\n        getAnnotationsMatchPath = _ref.getAnnotationsMatchPath,\n        getAnnotationsPath = _ref.getAnnotationsPath,\n        state = _ref.state;\n      return React.createElement(WrappedComponent, _extends({\n        ref: ref\n      }, props, {\n        annotatorState: state,\n        emitAnnotatorActiveChangeEvent: emitActiveChangeEvent,\n        emitRemoveEvent: emitRemoveEvent,\n        getAnnotationsMatchPath: getAnnotationsMatchPath,\n        getAnnotationsPath: getAnnotationsPath\n      }));\n    });\n  });\n}","map":{"version":3,"sources":["../../../../src/elements/common/annotator-context/withAnnotatorContext.tsx"],"names":["React","AnnotatorContext","withAnnotatorContext","WrappedComponent","forwardRef","props","ref","emitActiveChangeEvent","emitRemoveEvent","getAnnotationsMatchPath","getAnnotationsPath","state"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAWA,eAAe,SAASC,oBAAT,CAA4CC,gBAA5C,EAAsF;EACjG,OAAO,KAAK,CAACC,UAAN,CAA0E,UAACC,KAAD,EAAQC,GAAR,EAAA;IAAA,OAC7E,KAAA,CAAA,aAAA,CAAC,gBAAD,CAAkB,QAAlB,EAAA,IAAA,EACK,UAAA,IAAA,EAAA;MAAA,IAAGC,qBAAH,GAAA,IAAA,CAAGA,qBAAH;QAA0BC,eAA1B,GAAA,IAAA,CAA0BA,eAA1B;QAA2CC,uBAA3C,GAAA,IAAA,CAA2CA,uBAA3C;QAAoEC,kBAApE,GAAA,IAAA,CAAoEA,kBAApE;QAAwFC,KAAxF,GAAA,IAAA,CAAwFA,KAAxF;MAAA,OACG,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,QAAA,CAAA;QACI,GAAG,EAAEL;MADT,CAAA,EAEQD,KAFR,EAAA;QAGI,cAAc,EAAEM,KAHpB;QAII,8BAA8B,EAAEJ,qBAJpC;QAKI,eAAe,EAAEC,eALrB;QAMI,uBAAuB,EAAEC,uBAN7B;QAOI,kBAAkB,EAAEC;MAPxB,CAAA,CAAA,CADH;IAAA,CADL,CAD6E;EAAA,CAA1E,CAAP;AAeH","sourcesContent":["import * as React from 'react';\nimport AnnotatorContext from './AnnotatorContext';\nimport { AnnotatorState, GetMatchPath } from './types';\n\nexport interface WithAnnotatorContextProps {\n    annotatorState?: AnnotatorState;\n    emitAnnotatorActiveChangeEvent?: (id: string) => void;\n    emitRemoveEvent?: (id: string) => void;\n    getAnnotationsMatchPath?: GetMatchPath;\n    getAnnotationsPath?: (fileVersionId?: string, annotationId?: string) => string;\n}\n\nexport default function withAnnotatorContext<P extends {}>(WrappedComponent: React.ComponentType<P>) {\n    return React.forwardRef<React.RefForwardingComponent<React.ComponentType<P>>, P>((props, ref) => (\n        <AnnotatorContext.Consumer>\n            {({ emitActiveChangeEvent, emitRemoveEvent, getAnnotationsMatchPath, getAnnotationsPath, state }) => (\n                <WrappedComponent\n                    ref={ref}\n                    {...props}\n                    annotatorState={state}\n                    emitAnnotatorActiveChangeEvent={emitActiveChangeEvent}\n                    emitRemoveEvent={emitRemoveEvent}\n                    getAnnotationsMatchPath={getAnnotationsMatchPath}\n                    getAnnotationsPath={getAnnotationsPath}\n                />\n            )}\n        </AnnotatorContext.Consumer>\n    ));\n}\n"]},"metadata":{},"sourceType":"module"}