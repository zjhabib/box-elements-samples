{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __assign, __extends, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, assignUniqueKeysToParts, shallowEqual } from '../utils';\nimport { formatMessage as coreFormatMessage, createIntl as coreCreateIntl, createIntlCache } from '@formatjs/intl';\nimport { isFormatXMLElementFn } from 'intl-messageformat';\nfunction processIntlConfig(config) {\n  return {\n    locale: config.locale,\n    timeZone: config.timeZone,\n    fallbackOnEmptyString: config.fallbackOnEmptyString,\n    formats: config.formats,\n    textComponent: config.textComponent,\n    messages: config.messages,\n    defaultLocale: config.defaultLocale,\n    defaultFormats: config.defaultFormats,\n    onError: config.onError,\n    onWarn: config.onWarn,\n    wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n    defaultRichTextElements: config.defaultRichTextElements\n  };\n}\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\n  if (!values) {\n    return values;\n  }\n  return Object.keys(values).reduce(function (acc, k) {\n    var v = values[k];\n    acc[k] = isFormatXMLElementFn(v) ? assignUniqueKeysToParts(v) : v;\n    return acc;\n  }, {});\n}\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\n  var rest = [];\n  for (var _i = 4; _i < arguments.length; _i++) {\n    rest[_i - 4] = arguments[_i];\n  }\n  var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\n  var chunks = coreFormatMessage.apply(void 0, __spreadArray([config, formatters, descriptor, values], rest, false));\n  if (Array.isArray(chunks)) {\n    return React.Children.toArray(chunks);\n  }\n  return chunks;\n};\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport var createIntl = function (_a, cache) {\n  var rawDefaultRichTextElements = _a.defaultRichTextElements,\n    config = __rest(_a, [\"defaultRichTextElements\"]);\n  var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\n  var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), {\n    defaultRichTextElements: defaultRichTextElements\n  }), cache);\n  var resolvedConfig = {\n    locale: coreIntl.locale,\n    timeZone: coreIntl.timeZone,\n    fallbackOnEmptyString: coreIntl.fallbackOnEmptyString,\n    formats: coreIntl.formats,\n    defaultLocale: coreIntl.defaultLocale,\n    defaultFormats: coreIntl.defaultFormats,\n    messages: coreIntl.messages,\n    onError: coreIntl.onError,\n    defaultRichTextElements: defaultRichTextElements\n  };\n  return __assign(__assign({}, coreIntl), {\n    // @ts-expect-error fix this\n    formatMessage: formatMessage.bind(null, resolvedConfig, coreIntl.formatters),\n    // @ts-expect-error fix this\n    $t: formatMessage.bind(null, resolvedConfig, coreIntl.formatters)\n  });\n};\nvar IntlProvider = /** @class */function (_super) {\n  __extends(IntlProvider, _super);\n  function IntlProvider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.cache = createIntlCache();\n    _this.state = {\n      cache: _this.cache,\n      intl: createIntl(processIntlConfig(_this.props), _this.cache),\n      prevConfig: processIntlConfig(_this.props)\n    };\n    return _this;\n  }\n  IntlProvider.getDerivedStateFromProps = function (props, _a) {\n    var prevConfig = _a.prevConfig,\n      cache = _a.cache;\n    var config = processIntlConfig(props);\n    if (!shallowEqual(prevConfig, config)) {\n      return {\n        intl: createIntl(config, cache),\n        prevConfig: config\n      };\n    }\n    return null;\n  };\n  IntlProvider.prototype.render = function () {\n    invariantIntlContext(this.state.intl);\n    return React.createElement(Provider, {\n      value: this.state.intl\n    }, this.props.children);\n  };\n  IntlProvider.displayName = 'IntlProvider';\n  IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n  return IntlProvider;\n}(React.PureComponent);\nexport default IntlProvider;","map":{"version":3,"names":["__assign","__extends","__rest","__spreadArray","React","Provider","DEFAULT_INTL_CONFIG","invariantIntlContext","assignUniqueKeysToParts","shallowEqual","formatMessage","coreFormatMessage","createIntl","coreCreateIntl","createIntlCache","isFormatXMLElementFn","processIntlConfig","config","locale","timeZone","fallbackOnEmptyString","formats","textComponent","messages","defaultLocale","defaultFormats","onError","onWarn","wrapRichTextChunksInFragment","defaultRichTextElements","assignUniqueKeysToFormatXMLElementFnArgument","values","Object","keys","reduce","acc","k","v","formatters","descriptor","rawValues","rest","_i","arguments","length","chunks","apply","Array","isArray","Children","toArray","_a","cache","rawDefaultRichTextElements","coreIntl","resolvedConfig","bind","$t","IntlProvider","_super","_this","state","intl","props","prevConfig","getDerivedStateFromProps","prototype","render","createElement","value","children","displayName","defaultProps","PureComponent"],"sources":["/Users/zhabib/Documents/GitHub/box-elements-samples/demo-box-metadata-views/node_modules/react-intl/lib/src/components/provider.js"],"sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __assign, __extends, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, assignUniqueKeysToParts, shallowEqual, } from '../utils';\nimport { formatMessage as coreFormatMessage, createIntl as coreCreateIntl, createIntlCache, } from '@formatjs/intl';\nimport { isFormatXMLElementFn, } from 'intl-messageformat';\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        fallbackOnEmptyString: config.fallbackOnEmptyString,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        onWarn: config.onWarn,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n        defaultRichTextElements: config.defaultRichTextElements,\n    };\n}\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\n    if (!values) {\n        return values;\n    }\n    return Object.keys(values).reduce(function (acc, k) {\n        var v = values[k];\n        acc[k] = isFormatXMLElementFn(v)\n            ? assignUniqueKeysToParts(v)\n            : v;\n        return acc;\n    }, {});\n}\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\n    var rest = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        rest[_i - 4] = arguments[_i];\n    }\n    var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\n    var chunks = coreFormatMessage.apply(void 0, __spreadArray([config,\n        formatters,\n        descriptor,\n        values], rest, false));\n    if (Array.isArray(chunks)) {\n        return React.Children.toArray(chunks);\n    }\n    return chunks;\n};\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport var createIntl = function (_a, cache) {\n    var rawDefaultRichTextElements = _a.defaultRichTextElements, config = __rest(_a, [\"defaultRichTextElements\"]);\n    var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\n    var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), { defaultRichTextElements: defaultRichTextElements }), cache);\n    var resolvedConfig = {\n        locale: coreIntl.locale,\n        timeZone: coreIntl.timeZone,\n        fallbackOnEmptyString: coreIntl.fallbackOnEmptyString,\n        formats: coreIntl.formats,\n        defaultLocale: coreIntl.defaultLocale,\n        defaultFormats: coreIntl.defaultFormats,\n        messages: coreIntl.messages,\n        onError: coreIntl.onError,\n        defaultRichTextElements: defaultRichTextElements,\n    };\n    return __assign(__assign({}, coreIntl), { \n        // @ts-expect-error fix this\n        formatMessage: formatMessage.bind(null, resolvedConfig, coreIntl.formatters), \n        // @ts-expect-error fix this\n        $t: formatMessage.bind(null, resolvedConfig, coreIntl.formatters) });\n};\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEqual(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}