{"ast":null,"code":"import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Label from '../../components/label/Label';\nimport MultiSelect from '../../components/select-field/MultiSelectField';\nimport messages from './messages';\nimport './MultiSelectMetadataField.scss';\nvar MultiSelectMetadataField = function MultiSelectMetadataField(_ref) {\n  var blurExceptionClassNames = _ref.blurExceptionClassNames,\n    dataKey = _ref.dataKey,\n    dataValue = _ref.dataValue,\n    displayName = _ref.displayName,\n    description = _ref.description,\n    _onChange = _ref.onChange,\n    onRemove = _ref.onRemove,\n    _ref$options = _ref.options,\n    options = _ref$options === void 0 ? [] : _ref$options;\n  var placeholder = React.createElement(FormattedMessage, messages.metadataFieldMultiSelectValue);\n  return React.createElement(\"div\", {\n    className: \"bdl-MultiSelectMetadataField\"\n  }, React.createElement(Label, {\n    text: displayName\n  }, !!description && React.createElement(\"i\", {\n    className: \"bdl-MultiSelectMetadataField-desc\"\n  }, description), React.createElement(MultiSelect, {\n    blurExceptionClassNames: blurExceptionClassNames,\n    isEscapedWithReference: true,\n    isScrollable: true,\n    onChange: function onChange(selectedOptions) {\n      if (selectedOptions.length) {\n        _onChange(dataKey, selectedOptions.map(function (_ref2) {\n          var value = _ref2.value;\n          return value;\n        }));\n      } else {\n        onRemove(dataKey);\n      }\n    },\n    options: options.map(function (option) {\n      return {\n        displayText: option.key,\n        value: option.key\n      };\n    }),\n    placeholder: placeholder,\n    selectedValues: dataValue\n  })));\n};\nexport { MultiSelectMetadataField as MultiSelectMetadataFieldBase };\nexport default MultiSelectMetadataField;","map":{"version":3,"sources":["../../../src/features/metadata-instance-fields/MultiSelectMetadataField.js"],"names":["React","FormattedMessage","Label","MultiSelect","messages","MultiSelectMetadataField","blurExceptionClassNames","dataKey","dataValue","displayName","description","onChange","onRemove","options","placeholder","metadataFieldMultiSelectValue","selectedOptions","length","map","value","displayText","option","key","MultiSelectMetadataFieldBase"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,WAAP,MAAwB,gDAAxB;AAGA,OAAOC,QAAP,MAAqB,YAArB;AAIA,OAAO,iCAAP;AAaA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAA,IAAA,EASpB;EAAA,IARTC,uBAQS,GAAA,IAAA,CARTA,uBAQS;IAPTC,OAOS,GAAA,IAAA,CAPTA,OAOS;IANTC,SAMS,GAAA,IAAA,CANTA,SAMS;IALTC,WAKS,GAAA,IAAA,CALTA,WAKS;IAJTC,WAIS,GAAA,IAAA,CAJTA,WAIS;IAHTC,SAGS,GAAA,IAAA,CAHTA,QAGS;IAFTC,QAES,GAAA,IAAA,CAFTA,QAES;IAAA,YAAA,GAAA,IAAA,CADTC,OACS;IADTA,OACS,GAAA,YAAA,KAAA,KAAA,CAAA,GADC,EACD,GAAA,YAAA;EACT,IAAMC,WAAW,GAAG,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBV,QAAQ,CAACW,6BAA/B,CAApB;EAEA,OACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA;IAAO,IAAI,EAAEN;EAAb,CAAA,EACK,CAAC,CAACC,WAAF,IAAiB,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;IAAG,SAAS,EAAC;EAAb,CAAA,EAAkDA,WAAlD,CADtB,EAEI,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA;IACI,uBAAuB,EAAEJ,uBAD7B;IAEI,sBAAsB,EAAA,IAF1B;IAGI,YAAY,EAAA,IAHhB;IAII,QAAQ,EAAE,SAAA,QAAA,CAACU,eAAD,EAA8C;MACpD,IAAIA,eAAe,CAACC,MAApB,EAA4B;QACxBN,SAAQ,CACJJ,OADI,EAEJ,eAAe,CAACW,GAAhB,CAAoB,UAAA,KAAA,EAAA;UAAA,IAAGC,KAAH,GAAA,KAAA,CAAGA,KAAH;UAAA,OAAeA,KAAf;QAAA,CAApB,CAFI,CAARR;MAIH,CALD,MAKO;QACHC,QAAQ,CAACL,OAAD,CAARK;MACH;IACJ,CAbL;IAcI,OAAO,EAAE,OAAO,CAACM,GAAR,CAAY,UAAA,MAAM,EAAA;MAAA,OAAK;QAC5BE,WAAW,EAAEC,MAAM,CAACC,GADQ;QAE5BH,KAAK,EAAEE,MAAM,CAACC;MAFc,CAAL;IAAA,CAAlB,CAdb;IAkBI,WAAW,EAAER,WAlBjB;IAmBI,cAAc,EAAEN;EAnBpB,CAAA,CAFJ,CADJ,CADJ;AA4BH,CAxCD;AA0CA,SAASH,wBAAwB,IAAIkB,4BAArC;AACA,eAAelB,wBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Label from '../../components/label/Label';\nimport MultiSelect from '../../components/select-field/MultiSelectField';\nimport type { SelectOptionProp } from '../../components/select-field/props';\n\nimport messages from './messages';\n\nimport type { MetadataFieldValue, MetadataTemplateFieldOption } from '../../common/types/metadata';\n\nimport './MultiSelectMetadataField.scss';\n\ntype Props = {\n    blurExceptionClassNames?: Array<string>,\n    dataKey: string,\n    dataValue?: MetadataFieldValue,\n    description?: string,\n    displayName: string,\n    onChange: (key: string, value: MetadataFieldValue) => void,\n    onRemove: (key: string) => void,\n    options?: Array<MetadataTemplateFieldOption>,\n};\n\nconst MultiSelectMetadataField = ({\n    blurExceptionClassNames,\n    dataKey,\n    dataValue,\n    displayName,\n    description,\n    onChange,\n    onRemove,\n    options = [],\n}: Props) => {\n    const placeholder = <FormattedMessage {...messages.metadataFieldMultiSelectValue} />;\n\n    return (\n        <div className=\"bdl-MultiSelectMetadataField\">\n            <Label text={displayName}>\n                {!!description && <i className=\"bdl-MultiSelectMetadataField-desc\">{description}</i>}\n                <MultiSelect\n                    blurExceptionClassNames={blurExceptionClassNames}\n                    isEscapedWithReference\n                    isScrollable\n                    onChange={(selectedOptions: Array<SelectOptionProp>) => {\n                        if (selectedOptions.length) {\n                            onChange(\n                                dataKey,\n                                selectedOptions.map(({ value }) => value),\n                            );\n                        } else {\n                            onRemove(dataKey);\n                        }\n                    }}\n                    options={options.map(option => ({\n                        displayText: option.key,\n                        value: option.key,\n                    }))}\n                    placeholder={placeholder}\n                    selectedValues={dataValue}\n                />\n            </Label>\n        </div>\n    );\n};\n\nexport { MultiSelectMetadataField as MultiSelectMetadataFieldBase };\nexport default MultiSelectMetadataField;\n"]},"metadata":{},"sourceType":"module"}