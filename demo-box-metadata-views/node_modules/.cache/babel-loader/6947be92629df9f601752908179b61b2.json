{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Helper for the box recents api\n * @author Box\n */\nimport flatten from '../utils/flatten';\nimport { getBadItemError } from '../utils/error';\nimport { FOLDER_FIELDS_TO_FETCH } from '../utils/fields';\nimport Base from './Base';\nimport FileAPI from './File';\nimport FolderAPI from './Folder';\nimport WebLinkAPI from './WebLink';\nimport { DEFAULT_ROOT, CACHE_PREFIX_RECENTS, ERROR_CODE_FETCH_RECENTS, FIELD_DATE, FIELD_REPRESENTATIONS, X_REP_HINT_HEADER_DIMENSIONS_DEFAULT, SORT_DESC } from '../constants';\nvar Recents = /*#__PURE__*/\nfunction (_Base) {\n  _inherits(Recents, _Base);\n  function Recents() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, Recents);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Recents)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"recentsSuccessHandler\", function (_ref) {\n      var data = _ref.data;\n      if (_this.isDestroyed()) {\n        return;\n      }\n      var entries = data.entries,\n        _data$order = data.order,\n        by = _data$order.by,\n        direction = _data$order.direction;\n      var items = [];\n      entries.forEach(function (_ref2) {\n        var item = _ref2.item,\n          interacted_at = _ref2.interacted_at;\n        var path_collection = item.path_collection;\n        var shouldInclude = _this.id === DEFAULT_ROOT || !!path_collection && path_collection.entries.findIndex(function (crumb) {\n          return crumb.id === _this.id;\n        }) !== -1;\n        if (shouldInclude) {\n          items.push(_extends(item, {\n            interacted_at: interacted_at\n          }));\n        }\n      });\n      var flattenedItems = flatten(items, new FolderAPI(_this.options), new FileAPI(_this.options), new WebLinkAPI(_this.options));\n      _this.getCache().set(_this.key, {\n        item_collection: {\n          entries: flattenedItems,\n          order: [{\n            by: by,\n            direction: direction\n          }]\n        }\n      });\n      _this.finish();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"recentsErrorHandler\", function (error) {\n      if (_this.isDestroyed()) {\n        return;\n      }\n      _this.errorCallback(error, _this.errorCode);\n    });\n    return _this;\n  }\n  _createClass(Recents, [{\n    key: \"getCacheKey\",\n    /**\n     * @property {string}\n     */\n\n    /**\n     * @property {string}\n     */\n\n    /**\n     * @property {Function}\n     */\n\n    /**\n     * @property {Function}\n     */\n\n    /**\n     * Creates a key for the cache\n     *\n     * @param {string} id folder id\n     * @return {string} key\n     */\n    value: function getCacheKey(id) {\n      return \"\".concat(CACHE_PREFIX_RECENTS).concat(id);\n    }\n    /**\n     * URL for recents api\n     *\n     * @return {string} base url for files\n     */\n  }, {\n    key: \"getUrl\",\n    value: function getUrl() {\n      return \"\".concat(this.getBaseApiUrl(), \"/recent_items\");\n    }\n    /**\n     * Returns the results\n     *\n     * @return {void}\n     */\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      if (this.isDestroyed()) {\n        return;\n      }\n      var cache = this.getCache();\n      var recents = cache.get(this.key);\n      var item_collection = recents.item_collection;\n      if (!item_collection) {\n        throw getBadItemError();\n      }\n      var entries = item_collection.entries;\n      if (!Array.isArray(entries)) {\n        throw getBadItemError();\n      }\n      var collection = {\n        id: this.id,\n        items: entries.map(function (key) {\n          return cache.get(key);\n        }),\n        percentLoaded: 100,\n        sortBy: FIELD_DATE,\n        // Results are always sorted by date\n        sortDirection: SORT_DESC // Results are always sorted descending\n      };\n\n      this.successCallback(collection);\n    }\n    /**\n     * Handles the folder Recents response\n     *\n     * @param {Object} response\n     * @return {void}\n     */\n  }, {\n    key: \"recentsRequest\",\n    /**\n     * Does the network request\n     *\n     * @param {RequestOptions} options - options for request\n     * @return {Promise}\n     */\n    value: function recentsRequest() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (this.isDestroyed()) {\n        return Promise.reject();\n      }\n      var fields = options.fields;\n      var requestFields = fields || FOLDER_FIELDS_TO_FETCH;\n      this.errorCode = ERROR_CODE_FETCH_RECENTS;\n      return this.xhr.get({\n        url: this.getUrl(),\n        params: {\n          fields: requestFields.toString()\n        },\n        headers: requestFields.includes(FIELD_REPRESENTATIONS) ? {\n          'X-Rep-Hints': X_REP_HINT_HEADER_DIMENSIONS_DEFAULT\n        } : {}\n      }).then(this.recentsSuccessHandler).catch(this.recentsErrorHandler);\n    }\n    /**\n     * Gets recent files\n     *\n     * @param {string} id - parent folder id\n     * @param {Function} successCallback - Function to call with results\n     * @param {Function} errorCallback - Function to call with errors\n     * @param {boolean|void} [options.forceFetch] - Bypasses the cache\n     * @return {void}\n     */\n  }, {\n    key: \"recents\",\n    value: function recents(id, successCallback, errorCallback) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (this.isDestroyed()) {\n        return;\n      } // Save references\n\n      this.id = id;\n      this.successCallback = successCallback;\n      this.errorCallback = errorCallback;\n      var cache = this.getCache();\n      this.key = this.getCacheKey(this.id); // Clear the cache if needed\n\n      if (options.forceFetch) {\n        cache.unset(this.key);\n      } // Return the Cache value if it exists\n\n      if (cache.has(this.key)) {\n        this.finish();\n        return;\n      } // Make the XHR request\n\n      this.recentsRequest(options);\n    }\n  }]);\n  return Recents;\n}(Base);\nexport default Recents;","map":{"version":3,"sources":["../../src/api/Recents.js"],"names":["flatten","getBadItemError","FOLDER_FIELDS_TO_FETCH","Base","FileAPI","FolderAPI","WebLinkAPI","DEFAULT_ROOT","CACHE_PREFIX_RECENTS","ERROR_CODE_FETCH_RECENTS","FIELD_DATE","FIELD_REPRESENTATIONS","X_REP_HINT_HEADER_DIMENSIONS_DEFAULT","SORT_DESC","Recents","id","getBaseApiUrl","isDestroyed","cache","getCache","recents","get","key","item_collection","entries","Array","isArray","collection","items","map","percentLoaded","sortBy","sortDirection","successCallback","data","order","by","direction","forEach","item","interacted_at","path_collection","shouldInclude","findIndex","crumb","push","flattenedItems","options","set","finish","error","errorCallback","errorCode","Promise","reject","fields","requestFields","xhr","url","getUrl","params","toString","headers","includes","then","recentsSuccessHandler","catch","recentsErrorHandler","getCacheKey","forceFetch","unset","has","recentsRequest"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Helper for the box recents api\n * @author Box\n */\n\nimport flatten from '../utils/flatten';\nimport { getBadItemError } from '../utils/error';\nimport { FOLDER_FIELDS_TO_FETCH } from '../utils/fields';\nimport Base from './Base';\nimport FileAPI from './File';\nimport FolderAPI from './Folder';\nimport WebLinkAPI from './WebLink';\nimport {\n    DEFAULT_ROOT,\n    CACHE_PREFIX_RECENTS,\n    ERROR_CODE_FETCH_RECENTS,\n    FIELD_DATE,\n    FIELD_REPRESENTATIONS,\n    X_REP_HINT_HEADER_DIMENSIONS_DEFAULT,\n    SORT_DESC,\n} from '../constants';\nimport type { RequestOptions, ElementsErrorCallback } from '../common/types/api';\nimport type {\n    BoxItem,\n    FlattenedBoxItem,\n    FlattenedBoxItemCollection,\n    Collection,\n    Recent,\n    RecentCollection,\n    Crumb,\n} from '../common/types/core';\nimport type APICache from '../utils/Cache';\n\nclass Recents extends Base {\n    /**\n     * @property {string}\n     */\n    key: string;\n\n    /**\n     * @property {string}\n     */\n    id: string;\n\n    /**\n     * @property {Function}\n     */\n    successCallback: Function;\n\n    /**\n     * @property {Function}\n     */\n    errorCallback: ElementsErrorCallback;\n\n    /**\n     * Creates a key for the cache\n     *\n     * @param {string} id folder id\n     * @return {string} key\n     */\n    getCacheKey(id: string): string {\n        return `${CACHE_PREFIX_RECENTS}${id}`;\n    }\n\n    /**\n     * URL for recents api\n     *\n     * @return {string} base url for files\n     */\n    getUrl(): string {\n        return `${this.getBaseApiUrl()}/recent_items`;\n    }\n\n    /**\n     * Returns the results\n     *\n     * @return {void}\n     */\n    finish(): void {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        const cache: APICache = this.getCache();\n        const recents: FlattenedBoxItem = cache.get(this.key);\n        const { item_collection }: FlattenedBoxItem = recents;\n        if (!item_collection) {\n            throw getBadItemError();\n        }\n\n        const { entries }: FlattenedBoxItemCollection = item_collection;\n        if (!Array.isArray(entries)) {\n            throw getBadItemError();\n        }\n\n        const collection: Collection = {\n            id: this.id,\n            items: entries.map((key: string) => cache.get(key)),\n            percentLoaded: 100,\n            sortBy: FIELD_DATE, // Results are always sorted by date\n            sortDirection: SORT_DESC, // Results are always sorted descending\n        };\n        this.successCallback(collection);\n    }\n\n    /**\n     * Handles the folder Recents response\n     *\n     * @param {Object} response\n     * @return {void}\n     */\n    recentsSuccessHandler = ({ data }: { data: RecentCollection }): void => {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        const {\n            entries,\n            order: { by, direction },\n        }: RecentCollection = data;\n        const items: BoxItem[] = [];\n\n        entries.forEach(({ item, interacted_at }: Recent) => {\n            const { path_collection }: BoxItem = item;\n            const shouldInclude =\n                this.id === DEFAULT_ROOT ||\n                (!!path_collection && path_collection.entries.findIndex((crumb: Crumb) => crumb.id === this.id) !== -1);\n            if (shouldInclude) {\n                items.push(Object.assign(item, { interacted_at }));\n            }\n        });\n\n        const flattenedItems: string[] = flatten(\n            items,\n            new FolderAPI(this.options),\n            new FileAPI(this.options),\n            new WebLinkAPI(this.options),\n        );\n\n        this.getCache().set(this.key, {\n            item_collection: {\n                entries: flattenedItems,\n                order: [\n                    {\n                        by,\n                        direction,\n                    },\n                ],\n            },\n        });\n        this.finish();\n    };\n\n    /**\n     * Handles the Recents error\n     *\n     * @param {Error} error fetch error\n     * @return {void}\n     */\n    recentsErrorHandler = (error: Error): void => {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        this.errorCallback(error, this.errorCode);\n    };\n\n    /**\n     * Does the network request\n     *\n     * @param {RequestOptions} options - options for request\n     * @return {Promise}\n     */\n    recentsRequest(options: RequestOptions = {}): Promise<void> {\n        if (this.isDestroyed()) {\n            return Promise.reject();\n        }\n\n        const { fields } = options;\n        const requestFields = fields || FOLDER_FIELDS_TO_FETCH;\n\n        this.errorCode = ERROR_CODE_FETCH_RECENTS;\n        return this.xhr\n            .get({\n                url: this.getUrl(),\n                params: {\n                    fields: requestFields.toString(),\n                },\n                headers: requestFields.includes(FIELD_REPRESENTATIONS)\n                    ? {\n                          'X-Rep-Hints': X_REP_HINT_HEADER_DIMENSIONS_DEFAULT,\n                      }\n                    : {},\n            })\n            .then(this.recentsSuccessHandler)\n            .catch(this.recentsErrorHandler);\n    }\n\n    /**\n     * Gets recent files\n     *\n     * @param {string} id - parent folder id\n     * @param {Function} successCallback - Function to call with results\n     * @param {Function} errorCallback - Function to call with errors\n     * @param {boolean|void} [options.forceFetch] - Bypasses the cache\n     * @return {void}\n     */\n    recents(id: string, successCallback: Function, errorCallback: ElementsErrorCallback, options: Object = {}): void {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        // Save references\n        this.id = id;\n        this.successCallback = successCallback;\n        this.errorCallback = errorCallback;\n\n        const cache: APICache = this.getCache();\n        this.key = this.getCacheKey(this.id);\n\n        // Clear the cache if needed\n        if (options.forceFetch) {\n            cache.unset(this.key);\n        }\n\n        // Return the Cache value if it exists\n        if (cache.has(this.key)) {\n            this.finish();\n            return;\n        }\n\n        // Make the XHR request\n        this.recentsRequest(options);\n    }\n}\n\nexport default Recents;\n"]},"metadata":{},"sourceType":"module"}