{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * \n * @file Preview header component\n * @author Box\n */\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport getProp from 'lodash/get';\nimport AsyncLoad from '../../common/async-load';\nimport FileInfo from './FileInfo';\nimport IconClose from '../../../icons/general/IconClose';\nimport IconDownload from '../../../icons/general/IconDownloadSolid';\nimport IconDrawAnnotationMode from '../../../icons/annotations/IconDrawAnnotation';\nimport IconPointAnnotation from '../../../icons/annotations/IconPointAnnotation';\nimport IconPrint from '../../../icons/general/IconPrint';\nimport Logo from '../../common/header/Logo';\nimport messages from '../../common/messages';\nimport PlainButton from '../../../components/plain-button/PlainButton';\nimport { bdlGray50 } from '../../../styles/variables';\nimport './PreviewHeader.scss';\nvar LoadableContentOpenWith = AsyncLoad({\n  loader: function loader() {\n    return import( /* webpackMode: \"lazy\", webpackChunkName: \"content-open-with\" */\n    '../../content-open-with');\n  }\n});\nvar PreviewHeader = function PreviewHeader(_ref) {\n  var canAnnotate = _ref.canAnnotate,\n    canDownload = _ref.canDownload,\n    canPrint = _ref.canPrint,\n    _ref$contentOpenWithP = _ref.contentOpenWithProps,\n    contentOpenWithProps = _ref$contentOpenWithP === void 0 ? {} : _ref$contentOpenWithP,\n    file = _ref.file,\n    intl = _ref.intl,\n    logoUrl = _ref.logoUrl,\n    onClose = _ref.onClose,\n    onDownload = _ref.onDownload,\n    onPrint = _ref.onPrint,\n    selectedVersion = _ref.selectedVersion,\n    token = _ref.token;\n  var fileId = file && file.id;\n  var shouldRenderOpenWith = fileId && contentOpenWithProps.show;\n  var currentVersionId = getProp(file, 'file_version.id');\n  var selectedVersionId = getProp(selectedVersion, 'id', currentVersionId);\n  var isPreviewingCurrentVersion = currentVersionId === selectedVersionId; // When previewing an older version the close button returns the user to the current version\n\n  var closeMsg = isPreviewingCurrentVersion ? intl.formatMessage(messages.close) : intl.formatMessage(messages.back);\n  var printMsg = intl.formatMessage(messages.print);\n  var downloadMsg = intl.formatMessage(messages.download);\n  var drawMsg = intl.formatMessage(messages.drawAnnotation);\n  var pointMsg = intl.formatMessage(messages.pointAnnotation);\n  return React.createElement(\"header\", {\n    className: classNames('bcpr-PreviewHeader', {\n      'bcpr-PreviewHeader--basic': !isPreviewingCurrentVersion\n    })\n  }, React.createElement(\"div\", {\n    className: \"bcpr-PreviewHeader-content bp-header bp-base-header\"\n  }, logoUrl ? React.createElement(Logo, {\n    url: logoUrl\n  }) : React.createElement(FileInfo, {\n    file: file,\n    version: selectedVersion\n  }), React.createElement(\"div\", {\n    className: \"bcpr-PreviewHeader-controls\"\n  }, isPreviewingCurrentVersion && React.createElement(React.Fragment, null, shouldRenderOpenWith && React.createElement(LoadableContentOpenWith, _extends({\n    className: \"bcpr-bcow-btn\",\n    fileId: fileId,\n    token: token\n  }, contentOpenWithProps)), canAnnotate && React.createElement(React.Fragment, null, React.createElement(PlainButton, {\n    \"aria-label\": drawMsg,\n    className: \"bcpr-PreviewHeader-button bp-btn-annotate-draw bp-is-hidden\",\n    title: drawMsg,\n    type: \"button\"\n  }, React.createElement(IconDrawAnnotationMode, {\n    color: bdlGray50,\n    height: 18,\n    width: 18\n  })), React.createElement(PlainButton, {\n    \"aria-label\": pointMsg,\n    className: \"bcpr-PreviewHeader-button bp-btn-annotate-point bp-is-hidden\",\n    title: pointMsg,\n    type: \"button\"\n  }, React.createElement(IconPointAnnotation, {\n    color: bdlGray50,\n    height: 18,\n    width: 18\n  }))), canPrint && React.createElement(PlainButton, {\n    \"aria-label\": printMsg,\n    className: \"bcpr-PreviewHeader-button\",\n    onClick: onPrint,\n    title: printMsg,\n    type: \"button\"\n  }, React.createElement(IconPrint, {\n    color: bdlGray50,\n    height: 22,\n    width: 22\n  })), canDownload && React.createElement(PlainButton, {\n    \"aria-label\": downloadMsg,\n    className: \"bcpr-PreviewHeader-button\",\n    onClick: onDownload,\n    title: downloadMsg,\n    type: \"button\"\n  }, React.createElement(IconDownload, {\n    color: bdlGray50,\n    height: 18,\n    width: 18\n  }))), onClose && React.createElement(PlainButton, {\n    \"aria-label\": isPreviewingCurrentVersion && closeMsg,\n    className: \"bcpr-PreviewHeader-button bcpr-PreviewHeader-button-close\",\n    onClick: onClose,\n    type: \"button\"\n  }, isPreviewingCurrentVersion ? React.createElement(IconClose, {\n    color: bdlGray50,\n    height: 24,\n    width: 24\n  }) : closeMsg))));\n};\nexport default injectIntl(PreviewHeader);","map":{"version":3,"sources":["../../../../src/elements/content-preview/preview-header/PreviewHeader.js"],"names":["React","injectIntl","classNames","getProp","AsyncLoad","FileInfo","IconClose","IconDownload","IconDrawAnnotationMode","IconPointAnnotation","IconPrint","Logo","messages","PlainButton","bdlGray50","LoadableContentOpenWith","loader","PreviewHeader","canAnnotate","canDownload","canPrint","contentOpenWithProps","file","intl","logoUrl","onClose","onDownload","onPrint","selectedVersion","token","fileId","id","shouldRenderOpenWith","show","currentVersionId","selectedVersionId","isPreviewingCurrentVersion","closeMsg","formatMessage","close","back","printMsg","print","downloadMsg","download","drawMsg","drawAnnotation","pointMsg","pointAnnotation"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Preview header component\n * @author Box\n */\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport classNames from 'classnames';\nimport getProp from 'lodash/get';\nimport AsyncLoad from '../../common/async-load';\nimport FileInfo from './FileInfo';\nimport IconClose from '../../../icons/general/IconClose';\nimport IconDownload from '../../../icons/general/IconDownloadSolid';\nimport IconDrawAnnotationMode from '../../../icons/annotations/IconDrawAnnotation';\nimport IconPointAnnotation from '../../../icons/annotations/IconPointAnnotation';\nimport IconPrint from '../../../icons/general/IconPrint';\nimport Logo from '../../common/header/Logo';\nimport messages from '../../common/messages';\nimport PlainButton from '../../../components/plain-button/PlainButton';\nimport { bdlGray50 } from '../../../styles/variables';\nimport type { BoxItem, BoxItemVersion } from '../../../common/types/core';\n\nimport './PreviewHeader.scss';\n\ntype Props = {\n    canAnnotate: boolean,\n    canDownload: boolean,\n    canPrint?: boolean,\n    contentOpenWithProps?: ContentOpenWithProps,\n    file?: BoxItem,\n    logoUrl?: string,\n    onClose?: Function,\n    onDownload: Function,\n    onPrint: Function,\n    selectedVersion: ?BoxItemVersion,\n    token: ?string,\n} & InjectIntlProvidedProps;\n\nconst LoadableContentOpenWith = AsyncLoad({\n    loader: () => import(/* webpackMode: \"lazy\", webpackChunkName: \"content-open-with\" */ '../../content-open-with'),\n});\n\nconst PreviewHeader = ({\n    canAnnotate,\n    canDownload,\n    canPrint,\n    contentOpenWithProps = {},\n    file,\n    intl,\n    logoUrl,\n    onClose,\n    onDownload,\n    onPrint,\n    selectedVersion,\n    token,\n}: Props) => {\n    const fileId = file && file.id;\n    const shouldRenderOpenWith = fileId && contentOpenWithProps.show;\n    const currentVersionId = getProp(file, 'file_version.id');\n    const selectedVersionId = getProp(selectedVersion, 'id', currentVersionId);\n    const isPreviewingCurrentVersion = currentVersionId === selectedVersionId;\n\n    // When previewing an older version the close button returns the user to the current version\n    const closeMsg = isPreviewingCurrentVersion\n        ? intl.formatMessage(messages.close)\n        : intl.formatMessage(messages.back);\n    const printMsg = intl.formatMessage(messages.print);\n    const downloadMsg = intl.formatMessage(messages.download);\n    const drawMsg = intl.formatMessage(messages.drawAnnotation);\n    const pointMsg = intl.formatMessage(messages.pointAnnotation);\n\n    return (\n        <header\n            className={classNames('bcpr-PreviewHeader', {\n                'bcpr-PreviewHeader--basic': !isPreviewingCurrentVersion,\n            })}\n        >\n            {/*\n                bp-header and bp-base-header are used by box-annotations,\n                and must be put one level under bcpr-PreviewHeader\n            */}\n            <div className=\"bcpr-PreviewHeader-content bp-header bp-base-header\">\n                {logoUrl ? <Logo url={logoUrl} /> : <FileInfo file={file} version={selectedVersion} />}\n\n                <div className=\"bcpr-PreviewHeader-controls\">\n                    {isPreviewingCurrentVersion && (\n                        <>\n                            {shouldRenderOpenWith && (\n                                <LoadableContentOpenWith\n                                    className=\"bcpr-bcow-btn\"\n                                    fileId={fileId}\n                                    token={token}\n                                    {...contentOpenWithProps}\n                                />\n                            )}\n                            {canAnnotate && (\n                                <>\n                                    <PlainButton\n                                        aria-label={drawMsg}\n                                        className=\"bcpr-PreviewHeader-button bp-btn-annotate-draw bp-is-hidden\"\n                                        title={drawMsg}\n                                        type=\"button\"\n                                    >\n                                        <IconDrawAnnotationMode color={bdlGray50} height={18} width={18} />\n                                    </PlainButton>\n                                    <PlainButton\n                                        aria-label={pointMsg}\n                                        className=\"bcpr-PreviewHeader-button bp-btn-annotate-point bp-is-hidden\"\n                                        title={pointMsg}\n                                        type=\"button\"\n                                    >\n                                        <IconPointAnnotation color={bdlGray50} height={18} width={18} />\n                                    </PlainButton>\n                                </>\n                            )}\n                            {canPrint && (\n                                <PlainButton\n                                    aria-label={printMsg}\n                                    className=\"bcpr-PreviewHeader-button\"\n                                    onClick={onPrint}\n                                    title={printMsg}\n                                    type=\"button\"\n                                >\n                                    <IconPrint color={bdlGray50} height={22} width={22} />\n                                </PlainButton>\n                            )}\n                            {canDownload && (\n                                <PlainButton\n                                    aria-label={downloadMsg}\n                                    className=\"bcpr-PreviewHeader-button\"\n                                    onClick={onDownload}\n                                    title={downloadMsg}\n                                    type=\"button\"\n                                >\n                                    <IconDownload color={bdlGray50} height={18} width={18} />\n                                </PlainButton>\n                            )}\n                        </>\n                    )}\n\n                    {onClose && (\n                        <PlainButton\n                            aria-label={isPreviewingCurrentVersion && closeMsg}\n                            className=\"bcpr-PreviewHeader-button bcpr-PreviewHeader-button-close\"\n                            onClick={onClose}\n                            type=\"button\"\n                        >\n                            {isPreviewingCurrentVersion ? (\n                                <IconClose color={bdlGray50} height={24} width={24} />\n                            ) : (\n                                closeMsg\n                            )}\n                        </PlainButton>\n                    )}\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default injectIntl(PreviewHeader);\n"]},"metadata":{},"sourceType":"module"}