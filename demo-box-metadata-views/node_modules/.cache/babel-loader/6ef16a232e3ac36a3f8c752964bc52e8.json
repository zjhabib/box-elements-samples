{"ast":null,"code":"import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport messages from './messages';\nimport Button from '../../../../components/button';\nimport PrimaryButton from '../../../../components/primary-button';\nimport { TASK_TYPE_APPROVAL, TASK_TYPE_GENERAL } from '../../../../constants';\nimport './TaskActions.scss';\nvar TaskActions = function TaskActions(_ref) {\n  var isMultiFile = _ref.isMultiFile,\n    onTaskApproval = _ref.onTaskApproval,\n    onTaskReject = _ref.onTaskReject,\n    onTaskComplete = _ref.onTaskComplete,\n    onTaskView = _ref.onTaskView,\n    taskType = _ref.taskType;\n  var action = null;\n  if (isMultiFile) {\n    action = onTaskView && React.createElement(PrimaryButton, {\n      className: \"bcs-TaskActions-button\",\n      \"data-testid\": \"view-task\",\n      onClick: onTaskView,\n      \"data-resin-target\": ACTIVITY_TARGETS.TASK_VIEW_DETAILS\n    }, React.createElement(FormattedMessage, messages.tasksFeedViewDetailsAction));\n  } else if (taskType === TASK_TYPE_APPROVAL) {\n    action = React.createElement(React.Fragment, null, React.createElement(Button, {\n      className: \"bcs-TaskActions-button\",\n      \"data-testid\": \"reject-task\",\n      onClick: onTaskReject,\n      \"data-resin-target\": ACTIVITY_TARGETS.TASK_REJECT\n    }, React.createElement(FormattedMessage, messages.tasksFeedRejectAction)), React.createElement(PrimaryButton, {\n      className: \"bcs-TaskActions-button\",\n      \"data-testid\": \"approve-task\",\n      onClick: onTaskApproval,\n      \"data-resin-target\": ACTIVITY_TARGETS.TASK_APPROVE\n    }, React.createElement(FormattedMessage, messages.tasksFeedApproveAction)));\n  } else if (taskType === TASK_TYPE_GENERAL) {\n    action = React.createElement(PrimaryButton, {\n      className: \"bcs-TaskActions-button\",\n      \"data-testid\": \"complete-task\",\n      onClick: onTaskComplete,\n      \"data-resin-target\": ACTIVITY_TARGETS.TASK_COMPLETE\n    }, React.createElement(FormattedMessage, messages.tasksFeedCompleteAction));\n  }\n  return React.createElement(\"div\", {\n    className: \"bcs-TaskActions\"\n  }, action);\n};\nexport default TaskActions;","map":{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/task-new/TaskActions.js"],"names":["React","FormattedMessage","ACTIVITY_TARGETS","messages","Button","PrimaryButton","TASK_TYPE_APPROVAL","TASK_TYPE_GENERAL","TaskActions","isMultiFile","onTaskApproval","onTaskReject","onTaskComplete","onTaskView","taskType","action","TASK_VIEW_DETAILS","tasksFeedViewDetailsAction","TASK_REJECT","tasksFeedRejectAction","TASK_APPROVE","tasksFeedApproveAction","TASK_COMPLETE","tasksFeedCompleteAction"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,uBAAtD;AAGA,OAAO,oBAAP;AAWA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAOK;EAAA,IANrBC,WAMqB,GAAA,IAAA,CANrBA,WAMqB;IALrBC,cAKqB,GAAA,IAAA,CALrBA,cAKqB;IAJrBC,YAIqB,GAAA,IAAA,CAJrBA,YAIqB;IAHrBC,cAGqB,GAAA,IAAA,CAHrBA,cAGqB;IAFrBC,UAEqB,GAAA,IAAA,CAFrBA,UAEqB;IADrBC,QACqB,GAAA,IAAA,CADrBA,QACqB;EACrB,IAAIC,MAAM,GAAG,IAAb;EACA,IAAIN,WAAJ,EAAiB;IACbM,MAAM,GAAGF,UAAU,IACf,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA;MACI,SAAS,EAAC,wBADd;MAEI,aAAA,EAAY,WAFhB;MAGI,OAAO,EAAEA,UAHb;MAII,mBAAA,EAAmBX,gBAAgB,CAACc;IAJxC,CAAA,EAMI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBb,QAAQ,CAACc,0BAA/B,CANJ,CADJF;EAUH,CAXD,MAWO,IAAID,QAAQ,KAAKR,kBAAjB,EAAqC;IACxCS,MAAM,GACF,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAA;MACI,SAAS,EAAC,wBADd;MAEI,aAAA,EAAY,aAFhB;MAGI,OAAO,EAAEJ,YAHb;MAII,mBAAA,EAAmBT,gBAAgB,CAACgB;IAJxC,CAAA,EAMI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBf,QAAQ,CAACgB,qBAA/B,CANJ,CADJ,EASI,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA;MACI,SAAS,EAAC,wBADd;MAEI,aAAA,EAAY,cAFhB;MAGI,OAAO,EAAET,cAHb;MAII,mBAAA,EAAmBR,gBAAgB,CAACkB;IAJxC,CAAA,EAMI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBjB,QAAQ,CAACkB,sBAA/B,CANJ,CATJ,CADJN;EAoBH,CArBM,MAqBA,IAAID,QAAQ,KAAKP,iBAAjB,EAAoC;IACvCQ,MAAM,GACF,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA;MACI,SAAS,EAAC,wBADd;MAEI,aAAA,EAAY,eAFhB;MAGI,OAAO,EAAEH,cAHb;MAII,mBAAA,EAAmBV,gBAAgB,CAACoB;IAJxC,CAAA,EAMI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBnB,QAAQ,CAACoB,uBAA/B,CANJ,CADJR;EAUH;EACD,OAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EAAkCA,MAAlC,CAAP;AACH,CAtDD;AAwDA,eAAeP,WAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport messages from './messages';\nimport Button from '../../../../components/button';\nimport PrimaryButton from '../../../../components/primary-button';\nimport { TASK_TYPE_APPROVAL, TASK_TYPE_GENERAL } from '../../../../constants';\nimport type { TaskType } from '../../../../common/types/tasks';\n\nimport './TaskActions.scss';\n\ntype Props = {|\n    isMultiFile: boolean,\n    onTaskApproval: Function,\n    onTaskComplete: Function,\n    onTaskReject: Function,\n    onTaskView: Function,\n    taskType: TaskType,\n|};\n\nconst TaskActions = ({\n    isMultiFile,\n    onTaskApproval,\n    onTaskReject,\n    onTaskComplete,\n    onTaskView,\n    taskType,\n}: Props): React.Node => {\n    let action = null;\n    if (isMultiFile) {\n        action = onTaskView && (\n            <PrimaryButton\n                className=\"bcs-TaskActions-button\"\n                data-testid=\"view-task\"\n                onClick={onTaskView}\n                data-resin-target={ACTIVITY_TARGETS.TASK_VIEW_DETAILS}\n            >\n                <FormattedMessage {...messages.tasksFeedViewDetailsAction} />\n            </PrimaryButton>\n        );\n    } else if (taskType === TASK_TYPE_APPROVAL) {\n        action = (\n            <>\n                <Button\n                    className=\"bcs-TaskActions-button\"\n                    data-testid=\"reject-task\"\n                    onClick={onTaskReject}\n                    data-resin-target={ACTIVITY_TARGETS.TASK_REJECT}\n                >\n                    <FormattedMessage {...messages.tasksFeedRejectAction} />\n                </Button>\n                <PrimaryButton\n                    className=\"bcs-TaskActions-button\"\n                    data-testid=\"approve-task\"\n                    onClick={onTaskApproval}\n                    data-resin-target={ACTIVITY_TARGETS.TASK_APPROVE}\n                >\n                    <FormattedMessage {...messages.tasksFeedApproveAction} />\n                </PrimaryButton>\n            </>\n        );\n    } else if (taskType === TASK_TYPE_GENERAL) {\n        action = (\n            <PrimaryButton\n                className=\"bcs-TaskActions-button\"\n                data-testid=\"complete-task\"\n                onClick={onTaskComplete}\n                data-resin-target={ACTIVITY_TARGETS.TASK_COMPLETE}\n            >\n                <FormattedMessage {...messages.tasksFeedCompleteAction} />\n            </PrimaryButton>\n        );\n    }\n    return <div className=\"bcs-TaskActions\">{action}</div>;\n};\n\nexport default TaskActions;\n"]},"metadata":{},"sourceType":"module"}