{"ast":null,"code":"import * as React from 'react';\nimport TextMetadataField from './TextMetadataField';\nimport { isValidValue } from './validateMetadataField';\nvar IntegerMetadataField = function IntegerMetadataField(_ref) {\n  var dataKey = _ref.dataKey,\n    dataValue = _ref.dataValue,\n    displayName = _ref.displayName,\n    description = _ref.description,\n    error = _ref.error,\n    _onChange = _ref.onChange,\n    onRemove = _ref.onRemove,\n    type = _ref.type;\n  return React.createElement(TextMetadataField, {\n    dataKey: dataKey,\n    dataValue: dataValue,\n    description: description,\n    displayName: displayName,\n    error: error,\n    onChange: function onChange(key, value) {\n      if (isValidValue(type, value)) {\n        _onChange(key, value);\n      }\n    },\n    onRemove: onRemove\n  });\n};\nexport default IntegerMetadataField;","map":{"version":3,"sources":["../../../src/features/metadata-instance-fields/IntegerMetadataField.js"],"names":["React","TextMetadataField","isValidValue","IntegerMetadataField","dataKey","dataValue","displayName","description","error","onChange","onRemove","type","key","value"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAcA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,IAAA,EAAA;EAAA,IACzBC,OADyB,GAAA,IAAA,CACzBA,OADyB;IAEzBC,SAFyB,GAAA,IAAA,CAEzBA,SAFyB;IAGzBC,WAHyB,GAAA,IAAA,CAGzBA,WAHyB;IAIzBC,WAJyB,GAAA,IAAA,CAIzBA,WAJyB;IAKzBC,KALyB,GAAA,IAAA,CAKzBA,KALyB;IAMzBC,SANyB,GAAA,IAAA,CAMzBA,QANyB;IAOzBC,QAPyB,GAAA,IAAA,CAOzBA,QAPyB;IAQzBC,IARyB,GAAA,IAAA,CAQzBA,IARyB;EAAA,OAUzB,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA;IACI,OAAO,EAAEP,OADb;IAEI,SAAS,EAAEC,SAFf;IAGI,WAAW,EAAEE,WAHjB;IAII,WAAW,EAAED,WAJjB;IAKI,KAAK,EAAEE,KALX;IAMI,QAAQ,EAAE,SAAA,QAAA,CAACI,GAAD,EAAcC,KAAd,EAA4C;MAClD,IAAIX,YAAY,CAACS,IAAD,EAAOE,KAAP,CAAhB,EAA+B;QAC3BJ,SAAQ,CAACG,GAAD,EAAMC,KAAN,CAARJ;MACH;IACJ,CAVL;IAWI,QAAQ,EAAEC;EAXd,CAAA,CAVyB;AAAA,CAA7B;AAyBA,eAAeP,oBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport TextMetadataField from './TextMetadataField';\nimport { isValidValue } from './validateMetadataField';\nimport type { MetadataFieldValue } from '../../common/types/metadata';\n\ntype Props = {\n    dataKey: string,\n    dataValue?: MetadataFieldValue,\n    description?: string,\n    displayName: string,\n    error?: React.Node,\n    onChange: (key: string, value: MetadataFieldValue) => void,\n    onRemove: (key: string) => void,\n    type: string,\n};\n\nconst IntegerMetadataField = ({\n    dataKey,\n    dataValue,\n    displayName,\n    description,\n    error,\n    onChange,\n    onRemove,\n    type,\n}: Props) => (\n    <TextMetadataField\n        dataKey={dataKey}\n        dataValue={dataValue}\n        description={description}\n        displayName={displayName}\n        error={error}\n        onChange={(key: string, value: MetadataFieldValue) => {\n            if (isValidValue(type, value)) {\n                onChange(key, value);\n            }\n        }}\n        onRemove={onRemove}\n    />\n);\n\nexport default IntegerMetadataField;\n"]},"metadata":{},"sourceType":"module"}