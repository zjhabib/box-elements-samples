{"ast":null,"code":"\"use strict\";\n\n/**\r\n * filesize\r\n *\r\n * @copyright 2019 Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @license BSD-3-Clause\r\n * @version 4.2.1\r\n */\n(function (global) {\n  var b = /^(b|B)$/,\n    symbol = {\n      iec: {\n        bits: [\"b\", \"Kib\", \"Mib\", \"Gib\", \"Tib\", \"Pib\", \"Eib\", \"Zib\", \"Yib\"],\n        bytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n      },\n      jedec: {\n        bits: [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"],\n        bytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n      }\n    },\n    fullform = {\n      iec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\n      jedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\n    };\n  /**\r\n   * filesize\r\n   *\r\n   * @method filesize\r\n   * @param  {Mixed}   arg        String, Int or Float to transform\r\n   * @param  {Object}  descriptor [Optional] Flags\r\n   * @return {String}             Readable file size String\r\n   */\n\n  function filesize(arg) {\n    var descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var result = [],\n      val = 0,\n      e = void 0,\n      base = void 0,\n      bits = void 0,\n      ceil = void 0,\n      full = void 0,\n      fullforms = void 0,\n      locale = void 0,\n      localeOptions = void 0,\n      neg = void 0,\n      num = void 0,\n      output = void 0,\n      round = void 0,\n      unix = void 0,\n      separator = void 0,\n      spacer = void 0,\n      standard = void 0,\n      symbols = void 0;\n    if (isNaN(arg)) {\n      throw new TypeError(\"Invalid number\");\n    }\n    bits = descriptor.bits === true;\n    unix = descriptor.unix === true;\n    base = descriptor.base || 2;\n    round = descriptor.round !== void 0 ? descriptor.round : unix ? 1 : 2;\n    locale = descriptor.locale !== void 0 ? descriptor.locale : \"\";\n    localeOptions = descriptor.localeOptions || {};\n    separator = descriptor.separator !== void 0 ? descriptor.separator : \"\";\n    spacer = descriptor.spacer !== void 0 ? descriptor.spacer : unix ? \"\" : \" \";\n    symbols = descriptor.symbols || {};\n    standard = base === 2 ? descriptor.standard || \"jedec\" : \"jedec\";\n    output = descriptor.output || \"string\";\n    full = descriptor.fullform === true;\n    fullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\n    e = descriptor.exponent !== void 0 ? descriptor.exponent : -1;\n    num = Number(arg);\n    neg = num < 0;\n    ceil = base > 2 ? 1000 : 1024; // Flipping a negative number to determine the size\n\n    if (neg) {\n      num = -num;\n    } // Determining the exponent\n\n    if (e === -1 || isNaN(e)) {\n      e = Math.floor(Math.log(num) / Math.log(ceil));\n      if (e < 0) {\n        e = 0;\n      }\n    } // Exceeding supported length, time to reduce & multiply\n\n    if (e > 8) {\n      e = 8;\n    }\n    if (output === \"exponent\") {\n      return e;\n    } // Zero is now a special case because bytes divide by 1\n\n    if (num === 0) {\n      result[0] = 0;\n      result[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n    } else {\n      val = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\n      if (bits) {\n        val = val * 8;\n        if (val >= ceil && e < 8) {\n          val = val / ceil;\n          e++;\n        }\n      }\n      result[0] = Number(val.toFixed(e > 0 ? round : 0));\n      if (result[0] === ceil && e < 8 && descriptor.exponent === void 0) {\n        result[0] = 1;\n        e++;\n      }\n      result[1] = base === 10 && e === 1 ? bits ? \"kb\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n      if (unix) {\n        result[1] = standard === \"jedec\" ? result[1].charAt(0) : e > 0 ? result[1].replace(/B$/, \"\") : result[1];\n        if (b.test(result[1])) {\n          result[0] = Math.floor(result[0]);\n          result[1] = \"\";\n        }\n      }\n    } // Decorating a 'diff'\n\n    if (neg) {\n      result[0] = -result[0];\n    } // Applying custom symbol\n\n    result[1] = symbols[result[1]] || result[1];\n    if (locale === true) {\n      result[0] = result[0].toLocaleString();\n    } else if (locale.length > 0) {\n      result[0] = result[0].toLocaleString(locale, localeOptions);\n    } else if (separator.length > 0) {\n      result[0] = result[0].toString().replace(\".\", separator);\n    } // Returning Array, Object, or String (default)\n\n    if (output === \"array\") {\n      return result;\n    }\n    if (full) {\n      result[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\n    }\n    if (output === \"object\") {\n      return {\n        value: result[0],\n        symbol: result[1]\n      };\n    }\n    return result.join(spacer);\n  } // Partial application for functional programming\n\n  filesize.partial = function (opt) {\n    return function (arg) {\n      return filesize(arg, opt);\n    };\n  }; // CommonJS, AMD, script tag\n\n  if (typeof exports !== \"undefined\") {\n    module.exports = filesize;\n  } else if (typeof define === \"function\" && define.amd !== void 0) {\n    define(function () {\n      return filesize;\n    });\n  } else {\n    global.filesize = filesize;\n  }\n})(typeof window !== \"undefined\" ? window : global);","map":{"version":3,"names":["global","b","symbol","iec","bits","bytes","jedec","fullform","filesize","arg","descriptor","arguments","length","undefined","result","val","e","base","ceil","full","fullforms","locale","localeOptions","neg","num","output","round","unix","separator","spacer","standard","symbols","isNaN","TypeError","Array","exponent","Number","Math","floor","log","pow","toFixed","charAt","replace","test","toLocaleString","toString","value","join","partial","opt","exports","module","define","amd","window"],"sources":["/Users/zhabib/Documents/GitHub/box-elements-samples/demo-box-metadata-views/node_modules/filesize/lib/filesize.js"],"sourcesContent":["\"use strict\";\n\n/**\r\n * filesize\r\n *\r\n * @copyright 2019 Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @license BSD-3-Clause\r\n * @version 4.2.1\r\n */\n(function (global) {\n  var b = /^(b|B)$/,\n      symbol = {\n    iec: {\n      bits: [\"b\", \"Kib\", \"Mib\", \"Gib\", \"Tib\", \"Pib\", \"Eib\", \"Zib\", \"Yib\"],\n      bytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n    },\n    jedec: {\n      bits: [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"],\n      bytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n    }\n  },\n      fullform = {\n    iec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\n    jedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\n  };\n  /**\r\n   * filesize\r\n   *\r\n   * @method filesize\r\n   * @param  {Mixed}   arg        String, Int or Float to transform\r\n   * @param  {Object}  descriptor [Optional] Flags\r\n   * @return {String}             Readable file size String\r\n   */\n\n  function filesize(arg) {\n    var descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var result = [],\n        val = 0,\n        e = void 0,\n        base = void 0,\n        bits = void 0,\n        ceil = void 0,\n        full = void 0,\n        fullforms = void 0,\n        locale = void 0,\n        localeOptions = void 0,\n        neg = void 0,\n        num = void 0,\n        output = void 0,\n        round = void 0,\n        unix = void 0,\n        separator = void 0,\n        spacer = void 0,\n        standard = void 0,\n        symbols = void 0;\n\n    if (isNaN(arg)) {\n      throw new TypeError(\"Invalid number\");\n    }\n\n    bits = descriptor.bits === true;\n    unix = descriptor.unix === true;\n    base = descriptor.base || 2;\n    round = descriptor.round !== void 0 ? descriptor.round : unix ? 1 : 2;\n    locale = descriptor.locale !== void 0 ? descriptor.locale : \"\";\n    localeOptions = descriptor.localeOptions || {};\n    separator = descriptor.separator !== void 0 ? descriptor.separator : \"\";\n    spacer = descriptor.spacer !== void 0 ? descriptor.spacer : unix ? \"\" : \" \";\n    symbols = descriptor.symbols || {};\n    standard = base === 2 ? descriptor.standard || \"jedec\" : \"jedec\";\n    output = descriptor.output || \"string\";\n    full = descriptor.fullform === true;\n    fullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\n    e = descriptor.exponent !== void 0 ? descriptor.exponent : -1;\n    num = Number(arg);\n    neg = num < 0;\n    ceil = base > 2 ? 1000 : 1024; // Flipping a negative number to determine the size\n\n    if (neg) {\n      num = -num;\n    } // Determining the exponent\n\n\n    if (e === -1 || isNaN(e)) {\n      e = Math.floor(Math.log(num) / Math.log(ceil));\n\n      if (e < 0) {\n        e = 0;\n      }\n    } // Exceeding supported length, time to reduce & multiply\n\n\n    if (e > 8) {\n      e = 8;\n    }\n\n    if (output === \"exponent\") {\n      return e;\n    } // Zero is now a special case because bytes divide by 1\n\n\n    if (num === 0) {\n      result[0] = 0;\n      result[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n    } else {\n      val = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\n\n      if (bits) {\n        val = val * 8;\n\n        if (val >= ceil && e < 8) {\n          val = val / ceil;\n          e++;\n        }\n      }\n\n      result[0] = Number(val.toFixed(e > 0 ? round : 0));\n\n      if (result[0] === ceil && e < 8 && descriptor.exponent === void 0) {\n        result[0] = 1;\n        e++;\n      }\n\n      result[1] = base === 10 && e === 1 ? bits ? \"kb\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n\n      if (unix) {\n        result[1] = standard === \"jedec\" ? result[1].charAt(0) : e > 0 ? result[1].replace(/B$/, \"\") : result[1];\n\n        if (b.test(result[1])) {\n          result[0] = Math.floor(result[0]);\n          result[1] = \"\";\n        }\n      }\n    } // Decorating a 'diff'\n\n\n    if (neg) {\n      result[0] = -result[0];\n    } // Applying custom symbol\n\n\n    result[1] = symbols[result[1]] || result[1];\n\n    if (locale === true) {\n      result[0] = result[0].toLocaleString();\n    } else if (locale.length > 0) {\n      result[0] = result[0].toLocaleString(locale, localeOptions);\n    } else if (separator.length > 0) {\n      result[0] = result[0].toString().replace(\".\", separator);\n    } // Returning Array, Object, or String (default)\n\n\n    if (output === \"array\") {\n      return result;\n    }\n\n    if (full) {\n      result[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\n    }\n\n    if (output === \"object\") {\n      return {\n        value: result[0],\n        symbol: result[1]\n      };\n    }\n\n    return result.join(spacer);\n  } // Partial application for functional programming\n\n\n  filesize.partial = function (opt) {\n    return function (arg) {\n      return filesize(arg, opt);\n    };\n  }; // CommonJS, AMD, script tag\n\n\n  if (typeof exports !== \"undefined\") {\n    module.exports = filesize;\n  } else if (typeof define === \"function\" && define.amd !== void 0) {\n    define(function () {\n      return filesize;\n    });\n  } else {\n    global.filesize = filesize;\n  }\n})(typeof window !== \"undefined\" ? window : global);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}