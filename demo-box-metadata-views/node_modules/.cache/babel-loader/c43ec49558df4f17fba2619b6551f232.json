{"ast":null,"code":"/**\n * \n * @file Offset Based Pagination component\n * @author Box\n */\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport PaginationControls from './PaginationControls';\nimport { DEFAULT_PAGE_SIZE } from '../../constants';\nvar OffsetBasedPagination = function OffsetBasedPagination(_ref) {\n  var _ref$offset = _ref.offset,\n    offset = _ref$offset === void 0 ? 0 : _ref$offset,\n    _ref$onOffsetChange = _ref.onOffsetChange,\n    onOffsetChange = _ref$onOffsetChange === void 0 ? noop : _ref$onOffsetChange,\n    _ref$pageSize = _ref.pageSize,\n    pageSize = _ref$pageSize === void 0 ? DEFAULT_PAGE_SIZE : _ref$pageSize,\n    _ref$totalCount = _ref.totalCount,\n    totalCount = _ref$totalCount === void 0 ? 0 : _ref$totalCount;\n  var pageCount = Math.ceil(totalCount / pageSize);\n  if (pageCount <= 1) return null;\n  var pageByOffset = Math.floor(offset / pageSize) + 1;\n  var pageNumber = pageByOffset > 0 ? Math.min(pageCount, pageByOffset) : 1;\n  var hasNextPage = pageNumber < pageCount;\n  var hasPreviousPage = pageNumber > 1;\n  var updateOffset = function updateOffset(newPageNumber) {\n    var newOffset = (newPageNumber - 1) * pageSize;\n    if (newOffset <= 0) {\n      newOffset = 0;\n    }\n    if (newOffset >= totalCount) {\n      newOffset = totalCount - pageSize;\n    }\n    onOffsetChange(newOffset);\n  };\n  var handleNextClick = function handleNextClick() {\n    updateOffset(pageNumber + 1);\n  };\n  var handlePreviousClick = function handlePreviousClick() {\n    updateOffset(pageNumber - 1);\n  };\n  return React.createElement(PaginationControls, {\n    handleNextClick: handleNextClick,\n    handlePreviousClick: handlePreviousClick,\n    hasNextPage: hasNextPage,\n    hasPreviousPage: hasPreviousPage,\n    isOffsetBasedPagination: true,\n    onPageClick: updateOffset,\n    pageCount: pageCount,\n    pageNumber: pageNumber\n  });\n};\nexport default OffsetBasedPagination;","map":{"version":3,"sources":["../../../src/features/pagination/OffsetBasedPagination.js"],"names":["React","noop","PaginationControls","DEFAULT_PAGE_SIZE","OffsetBasedPagination","offset","onOffsetChange","pageSize","totalCount","pageCount","Math","ceil","pageByOffset","floor","pageNumber","min","hasNextPage","hasPreviousPage","updateOffset","newPageNumber","newOffset","handleNextClick","handlePreviousClick"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AASA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,IAAA,EAKjB;EAAA,IAAA,WAAA,GAAA,IAAA,CAJTC,MAIS;IAJTA,MAIS,GAAA,WAAA,KAAA,KAAA,CAAA,GAJA,CAIA,GAAA,WAAA;IAAA,mBAAA,GAAA,IAAA,CAHTC,cAGS;IAHTA,cAGS,GAAA,mBAAA,KAAA,KAAA,CAAA,GAHQL,IAGR,GAAA,mBAAA;IAAA,aAAA,GAAA,IAAA,CAFTM,QAES;IAFTA,QAES,GAAA,aAAA,KAAA,KAAA,CAAA,GAFEJ,iBAEF,GAAA,aAAA;IAAA,eAAA,GAAA,IAAA,CADTK,UACS;IADTA,UACS,GAAA,eAAA,KAAA,KAAA,CAAA,GADI,CACJ,GAAA,eAAA;EACT,IAAMC,SAAS,GAAGC,IAAI,CAACC,IAALD,CAAUF,UAAU,GAAGD,QAAvBG,CAAlB;EACA,IAAID,SAAS,IAAI,CAAjB,EAAoB,OAAO,IAAP;EAEpB,IAAMG,YAAY,GAAGF,IAAI,CAACG,KAALH,CAAWL,MAAM,GAAGE,QAApBG,CAAAA,GAAgC,CAArD;EACA,IAAMI,UAAU,GAAGF,YAAY,GAAG,CAAfA,GAAmBF,IAAI,CAACK,GAALL,CAASD,SAATC,EAAoBE,YAApBF,CAAnBE,GAAuD,CAA1E;EACA,IAAMI,WAAW,GAAGF,UAAU,GAAGL,SAAjC;EACA,IAAMQ,eAAe,GAAGH,UAAU,GAAG,CAArC;EAEA,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD,EAA2B;IAC5C,IAAIC,SAAS,GAAG,CAACD,aAAa,GAAG,CAAjB,IAAsBZ,QAAtC;IAEA,IAAIa,SAAS,IAAI,CAAjB,EAAoB;MAChBA,SAAS,GAAG,CAAZA;IACH;IAED,IAAIA,SAAS,IAAIZ,UAAjB,EAA6B;MACzBY,SAAS,GAAGZ,UAAU,GAAGD,QAAzBa;IACH;IAEDd,cAAc,CAACc,SAAD,CAAdd;EACH,CAZD;EAcA,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAAA,EAAM;IAC1BH,YAAY,CAACJ,UAAU,GAAG,CAAd,CAAZI;EACH,CAFD;EAIA,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,EAAM;IAC9BJ,YAAY,CAACJ,UAAU,GAAG,CAAd,CAAZI;EACH,CAFD;EAIA,OACI,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAA;IACI,eAAe,EAAEG,eADrB;IAEI,mBAAmB,EAAEC,mBAFzB;IAGI,WAAW,EAAEN,WAHjB;IAII,eAAe,EAAEC,eAJrB;IAKI,uBAAuB,EAAA,IAL3B;IAMI,WAAW,EAAEC,YANjB;IAOI,SAAS,EAAET,SAPf;IAQI,UAAU,EAAEK;EARhB,CAAA,CADJ;AAYH,CAhDD;AAkDA,eAAeV,qBAAf","sourcesContent":["/**\n * @flow\n * @file Offset Based Pagination component\n * @author Box\n */\n\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport PaginationControls from './PaginationControls';\nimport { DEFAULT_PAGE_SIZE } from '../../constants';\n\ntype Props = {\n    offset?: number,\n    onOffsetChange?: Function,\n    pageSize?: number,\n    totalCount?: number,\n};\n\nconst OffsetBasedPagination = ({\n    offset = 0,\n    onOffsetChange = noop,\n    pageSize = DEFAULT_PAGE_SIZE,\n    totalCount = 0,\n}: Props) => {\n    const pageCount = Math.ceil(totalCount / pageSize);\n    if (pageCount <= 1) return null;\n\n    const pageByOffset = Math.floor(offset / pageSize) + 1;\n    const pageNumber = pageByOffset > 0 ? Math.min(pageCount, pageByOffset) : 1;\n    const hasNextPage = pageNumber < pageCount;\n    const hasPreviousPage = pageNumber > 1;\n\n    const updateOffset = (newPageNumber: number) => {\n        let newOffset = (newPageNumber - 1) * pageSize;\n\n        if (newOffset <= 0) {\n            newOffset = 0;\n        }\n\n        if (newOffset >= totalCount) {\n            newOffset = totalCount - pageSize;\n        }\n\n        onOffsetChange(newOffset);\n    };\n\n    const handleNextClick = () => {\n        updateOffset(pageNumber + 1);\n    };\n\n    const handlePreviousClick = () => {\n        updateOffset(pageNumber - 1);\n    };\n\n    return (\n        <PaginationControls\n            handleNextClick={handleNextClick}\n            handlePreviousClick={handlePreviousClick}\n            hasNextPage={hasNextPage}\n            hasPreviousPage={hasPreviousPage}\n            isOffsetBasedPagination\n            onPageClick={updateOffset}\n            pageCount={pageCount}\n            pageNumber={pageNumber}\n        />\n    );\n};\n\nexport default OffsetBasedPagination;\n"]},"metadata":{},"sourceType":"module"}