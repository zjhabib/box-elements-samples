{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Details sidebar component\n * @author Box\n */\nimport React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarAccessStats from './SidebarAccessStats';\nimport SidebarClassification from './SidebarClassification';\nimport SidebarContent from './SidebarContent';\nimport SidebarFileProperties from './SidebarFileProperties';\nimport SidebarNotices from './SidebarNotices';\nimport SidebarSection from './SidebarSection';\nimport SidebarVersions from './SidebarVersions';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { SECTION_TARGETS } from '../common/interactionTargets';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport { HTTP_STATUS_CODE_FORBIDDEN, ORIGIN_DETAILS_SIDEBAR, IS_ERROR_DISPLAYED, SIDEBAR_VIEW_DETAILS } from '../../constants';\nimport './DetailsSidebar.scss';\nvar MARK_NAME_JS_READY = \"\".concat(ORIGIN_DETAILS_SIDEBAR, \"_\").concat(EVENT_JS_READY);\nmark(MARK_NAME_JS_READY);\nvar DetailsSidebar = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(DetailsSidebar, _React$PureComponent);\n  function DetailsSidebar(props) {\n    var _this;\n    _classCallCheck(this, DetailsSidebar);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailsSidebar).call(this, props));\n    _defineProperty(_assertThisInitialized(_this), \"descriptionChangeSuccessCallback\", function (file) {\n      _this.setState({\n        file: file,\n        fileError: undefined\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"fetchFileSuccessCallback\", function (file) {\n      _this.setState({\n        file: file,\n        fileError: undefined\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"fetchFileErrorCallback\", function (e, code) {\n      // TODO: handle the error properly (probably with maskError) once files call split out\n      _this.setState({\n        file: undefined\n      });\n      _this.props.onError(e, code, {\n        e: e\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"descriptionChangeErrorCallback\", function (file) {\n      // Reset the state back to the original description since the API call failed\n      _this.setState({\n        file: file,\n        fileError: {\n          inlineError: {\n            title: messages.fileDescriptionInlineErrorTitleMessage,\n            content: messages.defaultInlineErrorContentMessage\n          }\n        }\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onDescriptionChange\", function (newDescription) {\n      var api = _this.props.api;\n      var file = _this.state.file;\n      if (!file) {\n        throw getBadItemError();\n      }\n      var description = file.description;\n      if (newDescription === description) {\n        return;\n      }\n      api.getFileAPI().setFileDescription(file, newDescription, _this.descriptionChangeSuccessCallback, _this.descriptionChangeErrorCallback);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"fetchAccessStatsErrorCallback\", function (e, code) {\n      if (!_this.props.hasAccessStats) {\n        return;\n      }\n      var isForbidden = getProp(e, 'status') === HTTP_STATUS_CODE_FORBIDDEN;\n      var accessStatsError;\n      if (isForbidden) {\n        accessStatsError = {\n          error: messages.fileAccessStatsPermissionsError\n        };\n      } else {\n        accessStatsError = {\n          maskError: {\n            errorHeader: messages.fileAccessStatsErrorHeaderMessage,\n            errorSubHeader: messages.defaultErrorMaskSubHeaderMessage\n          }\n        };\n      }\n      _this.setState({\n        isLoadingAccessStats: false,\n        accessStats: undefined,\n        accessStatsError: accessStatsError\n      });\n      _this.props.onError(e, code, _defineProperty({\n        e: e\n      }, IS_ERROR_DISPLAYED, !isForbidden));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"fetchAccessStatsSuccessCallback\", function (accessStats) {\n      if (!_this.props.hasAccessStats) {\n        return;\n      }\n      _this.setState({\n        accessStats: accessStats,\n        accessStatsError: undefined,\n        isLoadingAccessStats: false\n      });\n    });\n    _this.state = {\n      isLoadingAccessStats: false\n    };\n    var logger = _this.props.logger;\n    logger.onReadyMetric({\n      endMarkName: MARK_NAME_JS_READY\n    });\n    return _this;\n  }\n  _createClass(DetailsSidebar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchFile();\n      if (this.props.hasAccessStats) {\n        this.fetchAccessStats();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref) {\n      var prevHasAccessStats = _ref.hasAccessStats;\n      var hasAccessStats = this.props.hasAccessStats; // Component visibility props such as hasAccessStats can sometimes be flipped after an async call\n\n      var hasAccessStatsChanged = prevHasAccessStats !== hasAccessStats;\n      if (hasAccessStatsChanged) {\n        if (hasAccessStats) {\n          this.fetchAccessStats();\n        } else {\n          this.setState({\n            isLoadingAccessStats: false,\n            accessStats: undefined,\n            accessStatsError: undefined\n          });\n        }\n      }\n    }\n    /**\n     * File description update callback\n     *\n     * @private\n     * @param {BoxItem} file - Updated file object\n     * @return {void}\n     */\n  }, {\n    key: \"fetchFile\",\n    /**\n     * Fetches a file with the fields needed for details sidebar\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @return {void}\n     */\n    value: function fetchFile() {\n      var successCallback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.fetchFileSuccessCallback;\n      var errorCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.fetchFileErrorCallback;\n      var _this$props = this.props,\n        api = _this$props.api,\n        fileId = _this$props.fileId;\n      api.getFileAPI().getFile(fileId, successCallback, errorCallback, {\n        fields: SIDEBAR_FIELDS_TO_FETCH // TODO: replace this with DETAILS_SIDEBAR_FIELDS_TO_FETCH as we do not need all the sidebar fields\n      });\n    }\n    /**\n     * Handles a successful file fetch\n     *\n     * @param {Object} file - the box file\n     * @return {void}\n     */\n  }, {\n    key: \"fetchAccessStats\",\n    /**\n     * Fetches the access stats for a file\n     *\n     * @private\n     * @return {void}\n     */\n    value: function fetchAccessStats() {\n      var _this$props2 = this.props,\n        api = _this$props2.api,\n        fileId = _this$props2.fileId;\n      var isLoadingAccessStats = this.state.isLoadingAccessStats;\n      if (isLoadingAccessStats) {\n        return;\n      }\n      this.setState({\n        isLoadingAccessStats: true\n      });\n      api.getFileAccessStatsAPI(false).getFileAccessStats(fileId, this.fetchAccessStatsSuccessCallback, this.fetchAccessStatsErrorCallback);\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.fetchAccessStats();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        classification = _this$props3.classification,\n        elementId = _this$props3.elementId,\n        hasProperties = _this$props3.hasProperties,\n        hasNotices = _this$props3.hasNotices,\n        hasAccessStats = _this$props3.hasAccessStats,\n        hasClassification = _this$props3.hasClassification,\n        hasRetentionPolicy = _this$props3.hasRetentionPolicy,\n        hasVersions = _this$props3.hasVersions,\n        onAccessStatsClick = _this$props3.onAccessStatsClick,\n        onVersionHistoryClick = _this$props3.onVersionHistoryClick,\n        onClassificationClick = _this$props3.onClassificationClick,\n        onRetentionPolicyExtendClick = _this$props3.onRetentionPolicyExtendClick,\n        retentionPolicy = _this$props3.retentionPolicy;\n      var _this$state = this.state,\n        accessStats = _this$state.accessStats,\n        accessStatsError = _this$state.accessStatsError,\n        file = _this$state.file,\n        fileError = _this$state.fileError,\n        isLoadingAccessStats = _this$state.isLoadingAccessStats; // TODO: Add loading indicator and handle errors once file call is split out\n\n      return React.createElement(SidebarContent, {\n        className: \"bcs-details\",\n        elementId: elementId,\n        sidebarView: SIDEBAR_VIEW_DETAILS,\n        title: React.createElement(FormattedMessage, messages.sidebarDetailsTitle)\n      }, file && hasNotices && React.createElement(\"div\", {\n        className: \"bcs-DetailsSidebar-notices\"\n      }, React.createElement(SidebarNotices, {\n        file: file\n      })), file && hasClassification && React.createElement(SidebarClassification, {\n        classification: classification,\n        file: file,\n        onEdit: onClassificationClick\n      }), file && hasAccessStats && React.createElement(SidebarAccessStats, _extends({\n        accessStats: accessStats,\n        file: file,\n        onAccessStatsClick: onAccessStatsClick\n      }, accessStatsError)), file && hasProperties && React.createElement(SidebarSection, {\n        interactionTarget: SECTION_TARGETS.FILE_PROPERTIES,\n        title: React.createElement(FormattedMessage, messages.sidebarProperties)\n      }, hasVersions && React.createElement(SidebarVersions, {\n        file: file,\n        onVersionHistoryClick: onVersionHistoryClick\n      }), React.createElement(SidebarFileProperties, _extends({\n        file: file,\n        onDescriptionChange: this.onDescriptionChange\n      }, fileError, {\n        hasRetentionPolicy: hasRetentionPolicy,\n        isLoading: isLoadingAccessStats,\n        onRetentionPolicyExtendClick: onRetentionPolicyExtendClick,\n        retentionPolicy: retentionPolicy\n      }))));\n    }\n  }]);\n  return DetailsSidebar;\n}(React.PureComponent);\n_defineProperty(DetailsSidebar, \"defaultProps\", {\n  hasNotices: false,\n  hasProperties: false,\n  hasAccessStats: false,\n  hasClassification: false,\n  hasRetentionPolicy: false,\n  hasVersions: false,\n  onError: noop\n});\nexport { DetailsSidebar as DetailsSidebarComponent };\nexport default flow([withLogger(ORIGIN_DETAILS_SIDEBAR), withErrorBoundary(ORIGIN_DETAILS_SIDEBAR), withAPIContext])(DetailsSidebar);","map":{"version":3,"sources":["../../../src/elements/content-sidebar/DetailsSidebar.js"],"names":["React","flow","getProp","noop","FormattedMessage","API","messages","SidebarAccessStats","SidebarClassification","SidebarContent","SidebarFileProperties","SidebarNotices","SidebarSection","SidebarVersions","EVENT_JS_READY","getBadItemError","mark","SECTION_TARGETS","SIDEBAR_FIELDS_TO_FETCH","withAPIContext","withErrorBoundary","withLogger","HTTP_STATUS_CODE_FORBIDDEN","ORIGIN_DETAILS_SIDEBAR","IS_ERROR_DISPLAYED","SIDEBAR_VIEW_DETAILS","MARK_NAME_JS_READY","DetailsSidebar","PureComponent","hasNotices","hasProperties","hasAccessStats","hasClassification","hasRetentionPolicy","hasVersions","onError","props","state","isLoadingAccessStats","logger","onReadyMetric","endMarkName","fetchFile","fetchAccessStats","prevHasAccessStats","hasAccessStatsChanged","setState","accessStats","undefined","accessStatsError","file","fileError","successCallback","fetchFileSuccessCallback","errorCallback","fetchFileErrorCallback","api","fileId","getFileAPI","getFile","fields","e","code","inlineError","title","fileDescriptionInlineErrorTitleMessage","content","defaultInlineErrorContentMessage","newDescription","description","setFileDescription","descriptionChangeSuccessCallback","descriptionChangeErrorCallback","isForbidden","error","fileAccessStatsPermissionsError","maskError","errorHeader","fileAccessStatsErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","getFileAccessStatsAPI","getFileAccessStats","fetchAccessStatsSuccessCallback","fetchAccessStatsErrorCallback","classification","elementId","onAccessStatsClick","onVersionHistoryClick","onClassificationClick","onRetentionPolicyExtendClick","retentionPolicy","sidebarDetailsTitle","FILE_PROPERTIES","sidebarProperties","onDescriptionChange","DetailsSidebarComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Details sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarAccessStats from './SidebarAccessStats';\nimport SidebarClassification from './SidebarClassification';\nimport SidebarContent from './SidebarContent';\nimport SidebarFileProperties from './SidebarFileProperties';\nimport SidebarNotices from './SidebarNotices';\nimport SidebarSection from './SidebarSection';\nimport SidebarVersions from './SidebarVersions';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { SECTION_TARGETS } from '../common/interactionTargets';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport {\n    HTTP_STATUS_CODE_FORBIDDEN,\n    ORIGIN_DETAILS_SIDEBAR,\n    IS_ERROR_DISPLAYED,\n    SIDEBAR_VIEW_DETAILS,\n} from '../../constants';\nimport type { ClassificationInfo, FileAccessStats, Errors } from './flowTypes';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { ElementsErrorCallback, ErrorContextProps, ElementsXhrError } from '../../common/types/api';\nimport type { BoxItem } from '../../common/types/core';\nimport './DetailsSidebar.scss';\n\ntype ExternalProps = {\n    classification?: ClassificationInfo,\n    elementId: string,\n    fileId: string,\n    hasAccessStats?: boolean,\n    hasClassification?: boolean,\n    hasNotices?: boolean,\n    hasProperties?: boolean,\n    hasRetentionPolicy?: boolean,\n    hasSidebarInitialized?: boolean,\n    hasVersions?: boolean,\n    onAccessStatsClick?: Function,\n    onClassificationClick?: (e: SyntheticEvent<HTMLButtonElement>) => void,\n    onRetentionPolicyExtendClick?: Function,\n    onVersionHistoryClick?: Function,\n    retentionPolicy?: Object,\n} & ErrorContextProps &\n    WithLoggerProps;\ntype Props = {\n    api: API,\n} & ExternalProps &\n    ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    accessStats?: FileAccessStats,\n    accessStatsError?: Errors,\n    file?: BoxItem,\n    fileError?: Errors,\n    isLoadingAccessStats: boolean,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_DETAILS_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass DetailsSidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        hasNotices: false,\n        hasProperties: false,\n        hasAccessStats: false,\n        hasClassification: false,\n        hasRetentionPolicy: false,\n        hasVersions: false,\n        onError: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isLoadingAccessStats: false,\n        };\n        const { logger } = this.props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n    }\n\n    componentDidMount() {\n        this.fetchFile();\n        if (this.props.hasAccessStats) {\n            this.fetchAccessStats();\n        }\n    }\n\n    componentDidUpdate({ hasAccessStats: prevHasAccessStats }: Props) {\n        const { hasAccessStats } = this.props;\n        // Component visibility props such as hasAccessStats can sometimes be flipped after an async call\n        const hasAccessStatsChanged = prevHasAccessStats !== hasAccessStats;\n        if (hasAccessStatsChanged) {\n            if (hasAccessStats) {\n                this.fetchAccessStats();\n            } else {\n                this.setState({\n                    isLoadingAccessStats: false,\n                    accessStats: undefined,\n                    accessStatsError: undefined,\n                });\n            }\n        }\n    }\n\n    /**\n     * File description update callback\n     *\n     * @private\n     * @param {BoxItem} file - Updated file object\n     * @return {void}\n     */\n    descriptionChangeSuccessCallback = (file: BoxItem): void => {\n        this.setState({ file, fileError: undefined });\n    };\n\n    /**\n     * Fetches a file with the fields needed for details sidebar\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @return {void}\n     */\n    fetchFile(\n        successCallback: (file: BoxItem) => void = this.fetchFileSuccessCallback,\n        errorCallback: ElementsErrorCallback = this.fetchFileErrorCallback,\n    ): void {\n        const { api, fileId }: Props = this.props;\n        api.getFileAPI().getFile(fileId, successCallback, errorCallback, {\n            fields: SIDEBAR_FIELDS_TO_FETCH, // TODO: replace this with DETAILS_SIDEBAR_FIELDS_TO_FETCH as we do not need all the sidebar fields\n        });\n    }\n\n    /**\n     * Handles a successful file fetch\n     *\n     * @param {Object} file - the box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem) => {\n        this.setState({\n            file,\n            fileError: undefined,\n        });\n    };\n\n    /**\n     * Handles a failed file fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchFileErrorCallback = (e: ElementsXhrError, code: string) => {\n        // TODO: handle the error properly (probably with maskError) once files call split out\n        this.setState({\n            file: undefined,\n        });\n\n        this.props.onError(e, code, {\n            e,\n        });\n    };\n\n    /**\n     * Handles a failed file description update\n     *\n     * @private\n     * @param {BoxItem} file - Original file object\n     * @return {void}\n     */\n    descriptionChangeErrorCallback = (file: BoxItem): void => {\n        // Reset the state back to the original description since the API call failed\n        this.setState({\n            file,\n            fileError: {\n                inlineError: {\n                    title: messages.fileDescriptionInlineErrorTitleMessage,\n                    content: messages.defaultInlineErrorContentMessage,\n                },\n            },\n        });\n    };\n\n    /**\n     * Function to update file description\n     *\n     * @private\n     * @param {string} newDescription - New file description\n     * @return {void}\n     */\n    onDescriptionChange = (newDescription: string): void => {\n        const { api }: Props = this.props;\n        const { file }: State = this.state;\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        const { description }: BoxItem = file;\n        if (newDescription === description) {\n            return;\n        }\n\n        api.getFileAPI().setFileDescription(\n            file,\n            newDescription,\n            this.descriptionChangeSuccessCallback,\n            this.descriptionChangeErrorCallback,\n        );\n    };\n\n    /**\n     * Handles a failed file access stats fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchAccessStatsErrorCallback = (e: ElementsXhrError, code: string) => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        const isForbidden = getProp(e, 'status') === HTTP_STATUS_CODE_FORBIDDEN;\n        let accessStatsError;\n\n        if (isForbidden) {\n            accessStatsError = {\n                error: messages.fileAccessStatsPermissionsError,\n            };\n        } else {\n            accessStatsError = {\n                maskError: {\n                    errorHeader: messages.fileAccessStatsErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            };\n        }\n\n        this.setState({\n            isLoadingAccessStats: false,\n            accessStats: undefined,\n            accessStatsError,\n        });\n\n        this.props.onError(e, code, {\n            e,\n            [IS_ERROR_DISPLAYED]: !isForbidden,\n        });\n    };\n\n    /**\n     * File access stats fetch success callback\n     *\n     * @private\n     * @param {Object} accessStats - access stats for a file\n     * @return {void}\n     */\n    fetchAccessStatsSuccessCallback = (accessStats: FileAccessStats): void => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        this.setState({\n            accessStats,\n            accessStatsError: undefined,\n            isLoadingAccessStats: false,\n        });\n    };\n\n    /**\n     * Fetches the access stats for a file\n     *\n     * @private\n     * @return {void}\n     */\n    fetchAccessStats(): void {\n        const { api, fileId }: Props = this.props;\n        const { isLoadingAccessStats } = this.state;\n\n        if (isLoadingAccessStats) {\n            return;\n        }\n\n        this.setState({ isLoadingAccessStats: true });\n        api.getFileAccessStatsAPI(false).getFileAccessStats(\n            fileId,\n            this.fetchAccessStatsSuccessCallback,\n            this.fetchAccessStatsErrorCallback,\n        );\n    }\n\n    refresh(): void {\n        this.fetchAccessStats();\n    }\n\n    render() {\n        const {\n            classification,\n            elementId,\n            hasProperties,\n            hasNotices,\n            hasAccessStats,\n            hasClassification,\n            hasRetentionPolicy,\n            hasVersions,\n            onAccessStatsClick,\n            onVersionHistoryClick,\n            onClassificationClick,\n            onRetentionPolicyExtendClick,\n            retentionPolicy,\n        }: Props = this.props;\n\n        const { accessStats, accessStatsError, file, fileError, isLoadingAccessStats }: State = this.state;\n\n        // TODO: Add loading indicator and handle errors once file call is split out\n        return (\n            <SidebarContent\n                className=\"bcs-details\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_DETAILS}\n                title={<FormattedMessage {...messages.sidebarDetailsTitle} />}\n            >\n                {file && hasNotices && (\n                    <div className=\"bcs-DetailsSidebar-notices\">\n                        <SidebarNotices file={file} />\n                    </div>\n                )}\n                {file && hasClassification && (\n                    <SidebarClassification classification={classification} file={file} onEdit={onClassificationClick} />\n                )}\n                {file && hasAccessStats && (\n                    <SidebarAccessStats\n                        accessStats={accessStats}\n                        file={file}\n                        onAccessStatsClick={onAccessStatsClick}\n                        {...accessStatsError}\n                    />\n                )}\n                {file && hasProperties && (\n                    <SidebarSection\n                        interactionTarget={SECTION_TARGETS.FILE_PROPERTIES}\n                        title={<FormattedMessage {...messages.sidebarProperties} />}\n                    >\n                        {hasVersions && <SidebarVersions file={file} onVersionHistoryClick={onVersionHistoryClick} />}\n                        <SidebarFileProperties\n                            file={file}\n                            onDescriptionChange={this.onDescriptionChange}\n                            {...fileError}\n                            hasRetentionPolicy={hasRetentionPolicy}\n                            isLoading={isLoadingAccessStats}\n                            onRetentionPolicyExtendClick={onRetentionPolicyExtendClick}\n                            retentionPolicy={retentionPolicy}\n                        />\n                    </SidebarSection>\n                )}\n            </SidebarContent>\n        );\n    }\n}\n\nexport type DetailsSidebarProps = ExternalProps;\nexport { DetailsSidebar as DetailsSidebarComponent };\nexport default flow([withLogger(ORIGIN_DETAILS_SIDEBAR), withErrorBoundary(ORIGIN_DETAILS_SIDEBAR), withAPIContext])(\n    DetailsSidebar,\n);\n"]},"metadata":{},"sourceType":"module"}