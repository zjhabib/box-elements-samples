{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file HOC to make responsive Box UI Elements\n * @author Box\n */\nimport * as React from 'react';\nimport debounce from 'lodash/debounce';\nimport Measure from 'react-measure';\nimport classNames from 'classnames';\nimport { CLASS_IS_MEDIUM, CLASS_IS_SMALL, CLASS_IS_TOUCH, SIZE_LARGE, SIZE_MEDIUM, SIZE_SMALL, SIZE_VERY_LARGE } from '../../constants';\nvar CROSS_OVER_WIDTH_SMALL = 700;\nvar CROSS_OVER_WIDTH_MEDIUM = 1000;\nvar CROSS_OVER_WIDTH_LARGE = 1500;\nvar HAS_TOUCH = !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch);\nfunction makeResponsive(Wrapped) {\n  var _class, _temp;\n  return _temp = _class = /*#__PURE__*/\n  function (_React$PureComponent) {\n    _inherits(_class, _React$PureComponent);\n\n    /**\n     * [constructor]\n     *\n     * @param {*} data\n     * @return {void}\n     */\n    function _class(props) {\n      var _this;\n      _classCallCheck(this, _class);\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));\n      _defineProperty(_assertThisInitialized(_this), \"onResize\", debounce(function (_ref) {\n        var width = _ref.bounds.width;\n        _this.setState({\n          size: _this.getSize(width)\n        });\n      }, 500));\n      _defineProperty(_assertThisInitialized(_this), \"innerRef\", function (el) {\n        _this.innerElement = el;\n      });\n      _defineProperty(_assertThisInitialized(_this), \"getInnerElement\", function () {\n        return _this.innerElement;\n      });\n      _this.state = {\n        size: props.size || _this.getSize(window.innerWidth)\n      };\n      return _this;\n    }\n    /**\n     * Calculates the new size\n     *\n     * @private\n     * @param {Component} react component\n     * @return {void}\n     */\n\n    _createClass(_class, [{\n      key: \"getSize\",\n      value: function getSize(width) {\n        var size = SIZE_VERY_LARGE;\n        if (width <= CROSS_OVER_WIDTH_SMALL) {\n          size = SIZE_SMALL;\n        } else if (width <= CROSS_OVER_WIDTH_MEDIUM) {\n          size = SIZE_MEDIUM;\n        } else if (width <= CROSS_OVER_WIDTH_LARGE) {\n          size = SIZE_LARGE;\n        }\n        return size;\n      }\n      /**\n       * Resizing function\n       *\n       * @private\n       * @param {Component} react component\n       * @return {void}\n       */\n    }, {\n      key: \"render\",\n      /**\n       * Renders the Box UI Element\n       *\n       * @private\n       * @inheritdoc\n       * @return {Element}\n       */\n      value: function render() {\n        var _classNames,\n          _this2 = this;\n        var _this$props = this.props,\n          isTouch = _this$props.isTouch,\n          size = _this$props.size,\n          className = _this$props.className,\n          componentRef = _this$props.componentRef,\n          rest = _objectWithoutProperties(_this$props, [\"isTouch\", \"size\", \"className\", \"componentRef\"]);\n        var isLarge = size === SIZE_LARGE;\n        var isMedium = size === SIZE_MEDIUM;\n        var isSmall = size === SIZE_SMALL;\n        var isVeryLarge = size === SIZE_VERY_LARGE;\n        var isResponsive = !isSmall && !isLarge && !isMedium && !isVeryLarge;\n        if ([isSmall, isMedium, isLarge, isVeryLarge].filter(function (item) {\n          return item;\n        }).length > 1) {\n          throw new Error('Box UI Element cannot be small or medium or large or very large at the same time');\n        }\n        if (!isResponsive) {\n          return React.createElement(Wrapped, _extends({\n            ref: componentRef,\n            className: className,\n            isLarge: isLarge,\n            isMedium: isMedium,\n            isSmall: isSmall,\n            isTouch: isTouch,\n            isVeryLarge: isVeryLarge\n          }, rest));\n        }\n        var sizeFromState = this.state.size;\n        isSmall = sizeFromState === SIZE_SMALL;\n        isMedium = sizeFromState === SIZE_MEDIUM;\n        isLarge = sizeFromState === SIZE_LARGE;\n        isVeryLarge = sizeFromState === SIZE_VERY_LARGE;\n        var styleClassName = classNames((_classNames = {}, _defineProperty(_classNames, CLASS_IS_SMALL, isSmall), _defineProperty(_classNames, CLASS_IS_MEDIUM, isMedium), _defineProperty(_classNames, CLASS_IS_TOUCH, isTouch), _classNames), className);\n        return React.createElement(Measure, {\n          bounds: true,\n          innerRef: this.innerRef,\n          onResize: this.onResize\n        }, function (_ref2) {\n          var measureRef = _ref2.measureRef;\n          return React.createElement(Wrapped, _extends({\n            ref: componentRef,\n            className: styleClassName,\n            getInnerRef: _this2.getInnerElement,\n            isLarge: isLarge,\n            isMedium: isMedium,\n            isSmall: isSmall,\n            isTouch: isTouch,\n            isVeryLarge: isVeryLarge,\n            measureRef: measureRef\n          }, rest));\n        });\n      }\n    }]);\n    return _class;\n  }(React.PureComponent), _defineProperty(_class, \"defaultProps\", {\n    className: '',\n    isTouch: HAS_TOUCH\n  }), _temp;\n}\nexport default makeResponsive;","map":{"version":3,"sources":["../../../src/elements/common/makeResponsive.js"],"names":["React","debounce","Measure","classNames","CLASS_IS_MEDIUM","CLASS_IS_SMALL","CLASS_IS_TOUCH","SIZE_LARGE","SIZE_MEDIUM","SIZE_SMALL","SIZE_VERY_LARGE","CROSS_OVER_WIDTH_SMALL","CROSS_OVER_WIDTH_MEDIUM","CROSS_OVER_WIDTH_LARGE","HAS_TOUCH","window","DocumentTouch","document","makeResponsive","Wrapped","PureComponent","className","isTouch","props","state","size","getSize","innerWidth","width","bounds","setState","innerElement","el","componentRef","rest","isLarge","isMedium","isSmall","isVeryLarge","isResponsive","filter","item","length","Error","sizeFromState","styleClassName","innerRef","onResize","measureRef","getInnerElement"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file HOC to make responsive Box UI Elements\n * @author Box\n */\n\nimport * as React from 'react';\nimport debounce from 'lodash/debounce';\nimport Measure from 'react-measure';\nimport classNames from 'classnames';\nimport {\n    CLASS_IS_MEDIUM,\n    CLASS_IS_SMALL,\n    CLASS_IS_TOUCH,\n    SIZE_LARGE,\n    SIZE_MEDIUM,\n    SIZE_SMALL,\n    SIZE_VERY_LARGE,\n} from '../../constants';\nimport type { Size } from '../../common/types/core';\n\ntype PropsShape = {\n    className: string,\n    componentRef?: Function,\n    isTouch: boolean,\n    size?: Size,\n};\n\ntype State = {\n    size: Size,\n};\n\nconst CROSS_OVER_WIDTH_SMALL = 700;\nconst CROSS_OVER_WIDTH_MEDIUM = 1000;\nconst CROSS_OVER_WIDTH_LARGE = 1500;\nconst HAS_TOUCH = !!('ontouchstart' in window || (window.DocumentTouch && document instanceof window.DocumentTouch));\n\nfunction makeResponsive<Props: PropsShape>(Wrapped: React.ComponentType<any>): React.ComponentType<any> {\n    return class extends React.PureComponent<Props, State> {\n        props: Props;\n\n        state: State;\n\n        innerElement: ?HTMLElement;\n\n        static defaultProps = {\n            className: '',\n            isTouch: HAS_TOUCH,\n        };\n\n        /**\n         * [constructor]\n         *\n         * @param {*} data\n         * @return {void}\n         */\n        constructor(props: Props) {\n            super(props);\n            this.state = {\n                size: props.size || this.getSize(window.innerWidth),\n            };\n        }\n\n        /**\n         * Calculates the new size\n         *\n         * @private\n         * @param {Component} react component\n         * @return {void}\n         */\n        getSize(width: number) {\n            let size = SIZE_VERY_LARGE;\n            if (width <= CROSS_OVER_WIDTH_SMALL) {\n                size = SIZE_SMALL;\n            } else if (width <= CROSS_OVER_WIDTH_MEDIUM) {\n                size = SIZE_MEDIUM;\n            } else if (width <= CROSS_OVER_WIDTH_LARGE) {\n                size = SIZE_LARGE;\n            }\n\n            return size;\n        }\n\n        /**\n         * Resizing function\n         *\n         * @private\n         * @param {Component} react component\n         * @return {void}\n         */\n        onResize = debounce(({ bounds: { width } }: { bounds: ClientRect }) => {\n            this.setState({ size: this.getSize(width) });\n        }, 500);\n\n        /**\n         * Callback function for setting the ref which measureRef is attached to\n         *\n         * @return {void}\n         */\n        innerRef = el => {\n            this.innerElement = el;\n        };\n\n        /**\n         * Gets the ref element which measureRef is attached to\n         *\n         * @return {?HTMLElement} - the HTML element\n         */\n        getInnerElement = () => this.innerElement;\n\n        /**\n         * Renders the Box UI Element\n         *\n         * @private\n         * @inheritdoc\n         * @return {Element}\n         */\n        render() {\n            const { isTouch, size, className, componentRef, ...rest }: Props = this.props;\n\n            let isLarge: boolean = size === SIZE_LARGE;\n            let isMedium: boolean = size === SIZE_MEDIUM;\n            let isSmall: boolean = size === SIZE_SMALL;\n            let isVeryLarge: boolean = size === SIZE_VERY_LARGE;\n            const isResponsive: boolean = !isSmall && !isLarge && !isMedium && !isVeryLarge;\n\n            if ([isSmall, isMedium, isLarge, isVeryLarge].filter(item => item).length > 1) {\n                throw new Error('Box UI Element cannot be small or medium or large or very large at the same time');\n            }\n\n            if (!isResponsive) {\n                return (\n                    <Wrapped\n                        ref={componentRef}\n                        className={className}\n                        isLarge={isLarge}\n                        isMedium={isMedium}\n                        isSmall={isSmall}\n                        isTouch={isTouch}\n                        isVeryLarge={isVeryLarge}\n                        {...rest}\n                    />\n                );\n            }\n\n            const { size: sizeFromState }: State = this.state;\n            isSmall = sizeFromState === SIZE_SMALL;\n            isMedium = sizeFromState === SIZE_MEDIUM;\n            isLarge = sizeFromState === SIZE_LARGE;\n            isVeryLarge = sizeFromState === SIZE_VERY_LARGE;\n            const styleClassName = classNames(\n                {\n                    [CLASS_IS_SMALL]: isSmall,\n                    [CLASS_IS_MEDIUM]: isMedium,\n                    [CLASS_IS_TOUCH]: isTouch,\n                },\n                className,\n            );\n\n            return (\n                <Measure bounds innerRef={this.innerRef} onResize={this.onResize}>\n                    {({ measureRef }) => (\n                        <Wrapped\n                            ref={componentRef}\n                            className={styleClassName}\n                            getInnerRef={this.getInnerElement}\n                            isLarge={isLarge}\n                            isMedium={isMedium}\n                            isSmall={isSmall}\n                            isTouch={isTouch}\n                            isVeryLarge={isVeryLarge}\n                            measureRef={measureRef}\n                            {...rest}\n                        />\n                    )}\n                </Measure>\n            );\n        }\n    };\n}\n\nexport default makeResponsive;\n"]},"metadata":{},"sourceType":"module"}