{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nvar FormInput = /*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormInput, _Component);\n  function FormInput() {\n    _classCallCheck(this, FormInput);\n    return _possibleConstructorReturn(this, _getPrototypeOf(FormInput).apply(this, arguments));\n  }\n  _createClass(FormInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        name = _this$props.name,\n        onValidityStateUpdate = _this$props.onValidityStateUpdate;\n      if (this.context.form) {\n        this.context.form.registerInput(name, onValidityStateUpdate);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.context.form) {\n        this.context.form.unregisterInput(this.props.name);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, this.props.children);\n    }\n  }]);\n  return FormInput;\n}(Component);\n_defineProperty(FormInput, \"propTypes\", {\n  children: PropTypes.node.isRequired,\n  /** callback called when Form pushed down a new validityState, useful for displaying server validation errors */\n  onValidityStateUpdate: PropTypes.func.isRequired,\n  /** Input name */\n  name: PropTypes.string.isRequired\n});\n_defineProperty(FormInput, \"contextTypes\", {\n  form: PropTypes.shape({\n    registerInput: PropTypes.func.isRequired,\n    unregisterInput: PropTypes.func.isRequired\n  })\n});\nexport default FormInput;","map":{"version":3,"sources":["../../../../src/components/form-elements/form/FormInput.js"],"names":["PropTypes","React","Component","FormInput","children","node","isRequired","onValidityStateUpdate","func","name","string","form","shape","registerInput","unregisterInput","props","context"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;IAEMC,S;;;;;;;;;wCAgBkB;MAAA,IAAA,WAAA,GACwB,IAAA,CAAKY,KAD7B;QACRN,IADQ,GAAA,WAAA,CACRA,IADQ;QACFF,qBADE,GAAA,WAAA,CACFA,qBADE;MAGhB,IAAI,IAAA,CAAKS,OAAL,CAAaL,IAAjB,EAAuB;QACnB,IAAA,CAAKK,OAAL,CAAaL,IAAb,CAAkBE,aAAlB,CAAgCJ,IAAhC,EAAsCF,qBAAtC,CAAA;MACH;IACJ;;;2CAEsB;MACnB,IAAI,IAAA,CAAKS,OAAL,CAAaL,IAAjB,EAAuB;QACnB,IAAA,CAAKK,OAAL,CAAaL,IAAb,CAAkBG,eAAlB,CAAkC,IAAA,CAAKC,KAAL,CAAWN,IAA7C,CAAA;MACH;IACJ;;;6BAEQ;MACL,OAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAM,IAAA,CAAKM,KAAL,CAAWX,QAAjB,CAAP;IACH;;;EAhCmBF,S;gBAAlBC,S,eACiB;EACfC,QAAQ,EAAEJ,SAAS,CAACK,IAAVL,CAAeM,UADV;EAEf;EACAC,qBAAqB,EAAEP,SAAS,CAACQ,IAAVR,CAAeM,UAHvB;EAIf;EACAG,IAAI,EAAET,SAAS,CAACU,MAAVV,CAAiBM;AALR,C;gBADjBH,S,kBASoB;EAClBQ,IAAI,EAAE,SAAS,CAACC,KAAV,CAAgB;IAClBC,aAAa,EAAEb,SAAS,CAACQ,IAAVR,CAAeM,UADZ;IAElBQ,eAAe,EAAEd,SAAS,CAACQ,IAAVR,CAAeM;EAFd,CAAhB;AADY,C;AA0B1B,eAAeH,SAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass FormInput extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        /** callback called when Form pushed down a new validityState, useful for displaying server validation errors */\n        onValidityStateUpdate: PropTypes.func.isRequired,\n        /** Input name */\n        name: PropTypes.string.isRequired,\n    };\n\n    static contextTypes = {\n        form: PropTypes.shape({\n            registerInput: PropTypes.func.isRequired,\n            unregisterInput: PropTypes.func.isRequired,\n        }),\n    };\n\n    componentDidMount() {\n        const { name, onValidityStateUpdate } = this.props;\n\n        if (this.context.form) {\n            this.context.form.registerInput(name, onValidityStateUpdate);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.context.form) {\n            this.context.form.unregisterInput(this.props.name);\n        }\n    }\n\n    render() {\n        return <div>{this.props.children}</div>;\n    }\n}\n\nexport default FormInput;\n"]},"metadata":{},"sourceType":"module"}