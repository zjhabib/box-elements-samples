{"ast":null,"code":"import * as React from 'react';\nimport Info16 from '../../icon/fill/Info16';\nimport Tooltip, { TooltipPosition } from '../tooltip';\nvar InfoIconWithTooltip = function InfoIconWithTooltip(_ref) {\n  var _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    iconProps = _ref.iconProps,\n    tooltipText = _ref.tooltipText;\n  return React.createElement(\"span\", {\n    key: \"infoIcon\",\n    className: \"\".concat(className, \" tooltip-icon-container\")\n  }, React.createElement(Tooltip, {\n    position: TooltipPosition.TOP_CENTER,\n    text: tooltipText\n  }, React.createElement(\"span\", {\n    className: \"info-icon-container\"\n  }, React.createElement(Info16, iconProps))));\n};\nexport default InfoIconWithTooltip;","map":{"version":3,"sources":["../../../src/components/label/InfoIconWithTooltip.tsx"],"names":["React","Info16","Tooltip","TooltipPosition","InfoIconWithTooltip","className","iconProps","tooltipText","TOP_CENTER"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,IAAkBC,eAAlB,QAAyC,YAAzC;AAWA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,IAAA,EAAA;EAAA,IAAA,cAAA,GAAA,IAAA,CAAGC,SAAH;IAAGA,SAAH,GAAA,cAAA,KAAA,KAAA,CAAA,GAAe,EAAf,GAAA,cAAA;IAAmBC,SAAnB,GAAA,IAAA,CAAmBA,SAAnB;IAA8BC,WAA9B,GAAA,IAAA,CAA8BA,WAA9B;EAAA,OACxB,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,GAAG,EAAC,UAAV;IAAqB,SAAS,EAAA,EAAA,CAAA,MAAA,CAAKF,SAAL,EAAA,yBAAA;EAA9B,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA;IAAS,QAAQ,EAAEF,eAAe,CAACK,UAAnC;IAA+C,IAAI,EAAED;EAArD,CAAA,EACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAC;EAAhB,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAYD,SAAZ,CADJ,CADJ,CADJ,CADwB;AAAA,CAA5B;AAUA,eAAeF,mBAAf","sourcesContent":["import * as React from 'react';\n\nimport Info16 from '../../icon/fill/Info16';\nimport Tooltip, { TooltipPosition } from '../tooltip';\n\nexport interface InfoIconWithTooltipProps {\n    /** Custom class for the icon */\n    className?: string;\n    /** Optional props for the icon */\n    iconProps?: Record<string, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n    /** Optional tooltip text for the label */\n    tooltipText: React.ReactNode;\n}\n\nconst InfoIconWithTooltip = ({ className = '', iconProps, tooltipText }: InfoIconWithTooltipProps) => (\n    <span key=\"infoIcon\" className={`${className} tooltip-icon-container`}>\n        <Tooltip position={TooltipPosition.TOP_CENTER} text={tooltipText}>\n            <span className=\"info-icon-container\">\n                <Info16 {...iconProps} />\n            </span>\n        </Tooltip>\n    </span>\n);\n\nexport default InfoIconWithTooltip;\n"]},"metadata":{},"sourceType":"module"}