{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\n/**\n * \n * @file Base class for Tasks APIs\n * @author Box\n */\nimport Base from '../Base';\nimport { HTTP_STATUS_CODE_RATE_LIMIT, HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR, HTTP_STATUS_CODE_NOT_IMPLEMENTED, HTTP_STATUS_CODE_BAD_GATEWAY, HTTP_STATUS_CODE_SERVICE_UNAVAILABLE, HTTP_STATUS_CODE_GATEWAY_TIMEOUT } from '../../constants';\nvar RETRYABLE = [HTTP_STATUS_CODE_RATE_LIMIT, HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR, HTTP_STATUS_CODE_NOT_IMPLEMENTED, HTTP_STATUS_CODE_BAD_GATEWAY, HTTP_STATUS_CODE_SERVICE_UNAVAILABLE, HTTP_STATUS_CODE_GATEWAY_TIMEOUT];\nvar TasksBase = /*#__PURE__*/\nfunction (_Base) {\n  _inherits(TasksBase, _Base);\n  function TasksBase(_ref) {\n    var _ref$retryableStatusC = _ref.retryableStatusCodes,\n      retryableStatusCodes = _ref$retryableStatusC === void 0 ? RETRYABLE : _ref$retryableStatusC,\n      options = _objectWithoutProperties(_ref, [\"retryableStatusCodes\"]);\n    _classCallCheck(this, TasksBase);\n    return _possibleConstructorReturn(this, _getPrototypeOf(TasksBase).call(this, _objectSpread({}, options, {\n      retryableStatusCodes: retryableStatusCodes\n    })));\n  }\n  return TasksBase;\n}(Base);\nexport default TasksBase;","map":{"version":3,"sources":["../../../src/api/tasks/TasksBase.js"],"names":["Base","HTTP_STATUS_CODE_RATE_LIMIT","HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR","HTTP_STATUS_CODE_NOT_IMPLEMENTED","HTTP_STATUS_CODE_BAD_GATEWAY","HTTP_STATUS_CODE_SERVICE_UNAVAILABLE","HTTP_STATUS_CODE_GATEWAY_TIMEOUT","RETRYABLE","TasksBase","retryableStatusCodes","options"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SACIC,2BADJ,EAEIC,sCAFJ,EAGIC,gCAHJ,EAIIC,4BAJJ,EAKIC,oCALJ,EAMIC,gCANJ,QAOO,iBAPP;AAUA,IAAMC,SAAS,GAAG,CACdN,2BADc,EAEdC,sCAFc,EAGdC,gCAHc,EAIdC,4BAJc,EAKdC,oCALc,EAMdC,gCANc,CAAlB;IASME,S;;;EACF,SAAA,SAAA,CAAA,IAAA,EAA0E;IAAA,IAAA,qBAAA,GAAA,IAAA,CAA5DC,oBAA4D;MAA5DA,oBAA4D,GAAA,qBAAA,KAAA,KAAA,CAAA,GAArCF,SAAqC,GAAA,qBAAA;MAAvBG,OAAuB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA;IAAA,OAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,aAAA,CAAA,CAAA,CAAA,EAC3DA,OAD2D,EAAA;MAClDD,oBAAoB,EAApBA;IADkD,CAAA,CAAA,CAAA,CAAA;EAEzE;;EAHmBT,I;AAMxB,eAAeQ,SAAf","sourcesContent":["/**\n * @flow\n * @file Base class for Tasks APIs\n * @author Box\n */\n\nimport Base from '../Base';\nimport {\n    HTTP_STATUS_CODE_RATE_LIMIT,\n    HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR,\n    HTTP_STATUS_CODE_NOT_IMPLEMENTED,\n    HTTP_STATUS_CODE_BAD_GATEWAY,\n    HTTP_STATUS_CODE_SERVICE_UNAVAILABLE,\n    HTTP_STATUS_CODE_GATEWAY_TIMEOUT,\n} from '../../constants';\nimport type { APIOptions } from '../../common/types/api';\n\nconst RETRYABLE = [\n    HTTP_STATUS_CODE_RATE_LIMIT,\n    HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR,\n    HTTP_STATUS_CODE_NOT_IMPLEMENTED,\n    HTTP_STATUS_CODE_BAD_GATEWAY,\n    HTTP_STATUS_CODE_SERVICE_UNAVAILABLE,\n    HTTP_STATUS_CODE_GATEWAY_TIMEOUT,\n];\n\nclass TasksBase extends Base {\n    constructor({ retryableStatusCodes = RETRYABLE, ...options }: APIOptions) {\n        super({ ...options, retryableStatusCodes });\n    }\n}\n\nexport default TasksBase;\n"]},"metadata":{},"sourceType":"module"}