{"ast":null,"code":"/**\n * \n * @file Content sub header component\n * @author Box\n */\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport SubHeaderLeft from './SubHeaderLeft';\nimport SubHeaderRight from './SubHeaderRight';\nimport { VIEW_MODE_LIST } from '../../../constants';\nimport './SubHeader.scss';\nvar SubHeader = function SubHeader(_ref) {\n  var canCreateNewFolder = _ref.canCreateNewFolder,\n    canUpload = _ref.canUpload,\n    currentCollection = _ref.currentCollection,\n    _ref$gridColumnCount = _ref.gridColumnCount,\n    gridColumnCount = _ref$gridColumnCount === void 0 ? 0 : _ref$gridColumnCount,\n    _ref$gridMaxColumns = _ref.gridMaxColumns,\n    gridMaxColumns = _ref$gridMaxColumns === void 0 ? 0 : _ref$gridMaxColumns,\n    _ref$gridMinColumns = _ref.gridMinColumns,\n    gridMinColumns = _ref$gridMinColumns === void 0 ? 0 : _ref$gridMinColumns,\n    _ref$maxGridColumnCou = _ref.maxGridColumnCountForWidth,\n    maxGridColumnCountForWidth = _ref$maxGridColumnCou === void 0 ? 0 : _ref$maxGridColumnCou,\n    _ref$onGridViewSlider = _ref.onGridViewSliderChange,\n    onGridViewSliderChange = _ref$onGridViewSlider === void 0 ? noop : _ref$onGridViewSlider,\n    isSmall = _ref.isSmall,\n    onCreate = _ref.onCreate,\n    onItemClick = _ref.onItemClick,\n    onSortChange = _ref.onSortChange,\n    onUpload = _ref.onUpload,\n    onViewModeChange = _ref.onViewModeChange,\n    rootId = _ref.rootId,\n    rootName = _ref.rootName,\n    view = _ref.view,\n    _ref$viewMode = _ref.viewMode,\n    viewMode = _ref$viewMode === void 0 ? VIEW_MODE_LIST : _ref$viewMode;\n  return React.createElement(\"div\", {\n    className: \"be-sub-header\",\n    \"data-testid\": \"be-sub-header\"\n  }, React.createElement(SubHeaderLeft, {\n    currentCollection: currentCollection,\n    isSmall: isSmall,\n    onItemClick: onItemClick,\n    rootId: rootId,\n    rootName: rootName,\n    view: view\n  }), React.createElement(SubHeaderRight, {\n    canCreateNewFolder: canCreateNewFolder,\n    canUpload: canUpload,\n    currentCollection: currentCollection,\n    gridColumnCount: gridColumnCount,\n    gridMaxColumns: gridMaxColumns,\n    gridMinColumns: gridMinColumns,\n    maxGridColumnCountForWidth: maxGridColumnCountForWidth,\n    onCreate: onCreate,\n    onGridViewSliderChange: onGridViewSliderChange,\n    onSortChange: onSortChange,\n    onUpload: onUpload,\n    onViewModeChange: onViewModeChange,\n    view: view,\n    viewMode: viewMode\n  }));\n};\nexport default SubHeader;","map":{"version":3,"sources":["../../../../src/elements/common/sub-header/SubHeader.js"],"names":["React","noop","SubHeaderLeft","SubHeaderRight","VIEW_MODE_LIST","SubHeader","canCreateNewFolder","canUpload","currentCollection","gridColumnCount","gridMaxColumns","gridMinColumns","maxGridColumnCountForWidth","onGridViewSliderChange","isSmall","onCreate","onItemClick","onSortChange","onUpload","onViewModeChange","rootId","rootName","view","viewMode"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AAGA,OAAO,kBAAP;AAuBA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAA,IAAA,EAAA;EAAA,IACdC,kBADc,GAAA,IAAA,CACdA,kBADc;IAEdC,SAFc,GAAA,IAAA,CAEdA,SAFc;IAGdC,iBAHc,GAAA,IAAA,CAGdA,iBAHc;IAAA,oBAAA,GAAA,IAAA,CAIdC,eAJc;IAIdA,eAJc,GAAA,oBAAA,KAAA,KAAA,CAAA,GAII,CAJJ,GAAA,oBAAA;IAAA,mBAAA,GAAA,IAAA,CAKdC,cALc;IAKdA,cALc,GAAA,mBAAA,KAAA,KAAA,CAAA,GAKG,CALH,GAAA,mBAAA;IAAA,mBAAA,GAAA,IAAA,CAMdC,cANc;IAMdA,cANc,GAAA,mBAAA,KAAA,KAAA,CAAA,GAMG,CANH,GAAA,mBAAA;IAAA,qBAAA,GAAA,IAAA,CAOdC,0BAPc;IAOdA,0BAPc,GAAA,qBAAA,KAAA,KAAA,CAAA,GAOe,CAPf,GAAA,qBAAA;IAAA,qBAAA,GAAA,IAAA,CAQdC,sBARc;IAQdA,sBARc,GAAA,qBAAA,KAAA,KAAA,CAAA,GAQWZ,IARX,GAAA,qBAAA;IASda,OATc,GAAA,IAAA,CASdA,OATc;IAUdC,QAVc,GAAA,IAAA,CAUdA,QAVc;IAWdC,WAXc,GAAA,IAAA,CAWdA,WAXc;IAYdC,YAZc,GAAA,IAAA,CAYdA,YAZc;IAadC,QAbc,GAAA,IAAA,CAadA,QAbc;IAcdC,gBAdc,GAAA,IAAA,CAcdA,gBAdc;IAedC,MAfc,GAAA,IAAA,CAedA,MAfc;IAgBdC,QAhBc,GAAA,IAAA,CAgBdA,QAhBc;IAiBdC,IAjBc,GAAA,IAAA,CAiBdA,IAjBc;IAAA,aAAA,GAAA,IAAA,CAkBdC,QAlBc;IAkBdA,QAlBc,GAAA,aAAA,KAAA,KAAA,CAAA,GAkBHnB,cAlBG,GAAA,aAAA;EAAA,OAoBd,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC,eAAf;IAA+B,aAAA,EAAY;EAA3C,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA;IACI,iBAAiB,EAAEI,iBADvB;IAEI,OAAO,EAAEM,OAFb;IAGI,WAAW,EAAEE,WAHjB;IAII,MAAM,EAAEI,MAJZ;IAKI,QAAQ,EAAEC,QALd;IAMI,IAAI,EAAEC;EANV,CAAA,CADJ,EASI,KAAA,CAAA,aAAA,CAAC,cAAD,EAAA;IACI,kBAAkB,EAAEhB,kBADxB;IAEI,SAAS,EAAEC,SAFf;IAGI,iBAAiB,EAAEC,iBAHvB;IAII,eAAe,EAAEC,eAJrB;IAKI,cAAc,EAAEC,cALpB;IAMI,cAAc,EAAEC,cANpB;IAOI,0BAA0B,EAAEC,0BAPhC;IAQI,QAAQ,EAAEG,QARd;IASI,sBAAsB,EAAEF,sBAT5B;IAUI,YAAY,EAAEI,YAVlB;IAWI,QAAQ,EAAEC,QAXd;IAYI,gBAAgB,EAAEC,gBAZtB;IAaI,IAAI,EAAEG,IAbV;IAcI,QAAQ,EAAEC;EAdd,CAAA,CATJ,CApBc;AAAA,CAAlB;AAgDA,eAAelB,SAAf","sourcesContent":["/**\n * @flow\n * @file Content sub header component\n * @author Box\n */\n\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport SubHeaderLeft from './SubHeaderLeft';\nimport SubHeaderRight from './SubHeaderRight';\nimport type { ViewMode } from '../flowTypes';\nimport { VIEW_MODE_LIST } from '../../../constants';\nimport type { View, Collection } from '../../../common/types/core';\n\nimport './SubHeader.scss';\n\ntype Props = {\n    canCreateNewFolder: boolean,\n    canUpload: boolean,\n    currentCollection: Collection,\n    gridColumnCount?: number,\n    gridMaxColumns?: number,\n    gridMinColumns?: number,\n    isSmall: boolean,\n    maxGridColumnCountForWidth?: number,\n    onCreate: Function,\n    onGridViewSliderChange?: (newSliderValue: number) => void,\n    onItemClick: Function,\n    onSortChange: Function,\n    onUpload: Function,\n    onViewModeChange?: (viewMode: ViewMode) => void,\n    rootId: string,\n    rootName?: string,\n    view: View,\n    viewMode?: ViewMode,\n};\n\nconst SubHeader = ({\n    canCreateNewFolder,\n    canUpload,\n    currentCollection,\n    gridColumnCount = 0,\n    gridMaxColumns = 0,\n    gridMinColumns = 0,\n    maxGridColumnCountForWidth = 0,\n    onGridViewSliderChange = noop,\n    isSmall,\n    onCreate,\n    onItemClick,\n    onSortChange,\n    onUpload,\n    onViewModeChange,\n    rootId,\n    rootName,\n    view,\n    viewMode = VIEW_MODE_LIST,\n}: Props) => (\n    <div className=\"be-sub-header\" data-testid=\"be-sub-header\">\n        <SubHeaderLeft\n            currentCollection={currentCollection}\n            isSmall={isSmall}\n            onItemClick={onItemClick}\n            rootId={rootId}\n            rootName={rootName}\n            view={view}\n        />\n        <SubHeaderRight\n            canCreateNewFolder={canCreateNewFolder}\n            canUpload={canUpload}\n            currentCollection={currentCollection}\n            gridColumnCount={gridColumnCount}\n            gridMaxColumns={gridMaxColumns}\n            gridMinColumns={gridMinColumns}\n            maxGridColumnCountForWidth={maxGridColumnCountForWidth}\n            onCreate={onCreate}\n            onGridViewSliderChange={onGridViewSliderChange}\n            onSortChange={onSortChange}\n            onUpload={onUpload}\n            onViewModeChange={onViewModeChange}\n            view={view}\n            viewMode={viewMode}\n        />\n    </div>\n);\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}