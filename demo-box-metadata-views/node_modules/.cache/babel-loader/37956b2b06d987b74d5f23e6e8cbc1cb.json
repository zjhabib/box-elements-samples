{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\n/**\n * \n * @file Classification add/edit button\n * @author Box\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\nimport PlainButton from '../../components/plain-button/PlainButton';\nvar EditClassificationButton = function EditClassificationButton(_ref) {\n  var _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    isEditing = _ref.isEditing,\n    onEdit = _ref.onEdit,\n    rest = _objectWithoutProperties(_ref, [\"className\", \"isEditing\", \"onEdit\"]);\n  var message = isEditing ? messages.edit : messages.add;\n  var interaction = isEditing ? 'editclassification' : 'addclassification';\n  return React.createElement(PlainButton, _extends({\n    className: \"bdl-EditClassificationButton \".concat(className),\n    \"data-resin-target\": interaction,\n    onClick: onEdit,\n    type: \"button\"\n  }, rest), React.createElement(FormattedMessage, message));\n};\nexport default EditClassificationButton;","map":{"version":3,"sources":["../../../src/features/classification/EditClassificationButton.js"],"names":["React","FormattedMessage","messages","PlainButton","EditClassificationButton","className","isEditing","onEdit","rest","message","edit","add","interaction"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAQA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAA,IAAA,EAA2D;EAAA,IAAA,cAAA,GAAA,IAAA,CAAxDC,SAAwD;IAAxDA,SAAwD,GAAA,cAAA,KAAA,KAAA,CAAA,GAA5C,EAA4C,GAAA,cAAA;IAAxCC,SAAwC,GAAA,IAAA,CAAxCA,SAAwC;IAA7BC,MAA6B,GAAA,IAAA,CAA7BA,MAA6B;IAAlBC,IAAkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAAA,QAAA,CAAA,CAAA;EACxF,IAAMC,OAAO,GAAGH,SAAS,GAAGJ,QAAQ,CAACQ,IAAZ,GAAmBR,QAAQ,CAACS,GAArD;EACA,IAAMC,WAAW,GAAGN,SAAS,GAAG,oBAAH,GAA0B,mBAAvD;EACA,OACI,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA,QAAA,CAAA;IACI,SAAS,EAAA,+BAAA,CAAA,MAAA,CAAkCD,SAAlC,CADb;IAEI,mBAAA,EAAmBO,WAFvB;IAGI,OAAO,EAAEL,MAHb;IAII,IAAI,EAAC;EAJT,CAAA,EAKQC,IALR,CAAA,EAOI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBC,OAAtB,CAPJ,CADJ;AAWH,CAdD;AAgBA,eAAeL,wBAAf","sourcesContent":["/**\n * @flow\n * @file Classification add/edit button\n * @author Box\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport PlainButton from '../../components/plain-button/PlainButton';\n\ntype Props = {\n    className?: string,\n    isEditing: boolean,\n    onEdit: (e: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst EditClassificationButton = ({ className = '', isEditing, onEdit, ...rest }: Props) => {\n    const message = isEditing ? messages.edit : messages.add;\n    const interaction = isEditing ? 'editclassification' : 'addclassification';\n    return (\n        <PlainButton\n            className={`bdl-EditClassificationButton ${className}`}\n            data-resin-target={interaction}\n            onClick={onEdit}\n            type=\"button\"\n            {...rest}\n        >\n            <FormattedMessage {...message} />\n        </PlainButton>\n    );\n};\n\nexport default EditClassificationButton;\n"]},"metadata":{},"sourceType":"module"}