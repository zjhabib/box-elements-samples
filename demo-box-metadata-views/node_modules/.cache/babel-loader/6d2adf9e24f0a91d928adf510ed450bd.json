{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Content Sidebar Panels component\n * @author Box\n */\nimport * as React from 'react';\nimport flow from 'lodash/flow';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport SidebarUtils from './SidebarUtils';\nimport withSidebarAnnotations from './withSidebarAnnotations';\nimport { withAnnotatorContext } from '../common/annotator-context';\nimport { withAPIContext } from '../common/api-context';\nimport { withRouterAndRef } from '../common/routing';\nimport { ORIGIN_ACTIVITY_SIDEBAR, ORIGIN_DETAILS_SIDEBAR, ORIGIN_METADATA_SIDEBAR, ORIGIN_SKILLS_SIDEBAR, ORIGIN_VERSIONS_SIDEBAR, SIDEBAR_VIEW_ACTIVITY, SIDEBAR_VIEW_DETAILS, SIDEBAR_VIEW_METADATA, SIDEBAR_VIEW_SKILLS, SIDEBAR_VIEW_VERSIONS } from '../../constants';\n// TODO: place into code splitting logic\nvar BASE_EVENT_NAME = '_JS_LOADING';\nvar MARK_NAME_JS_LOADING_DETAILS = \"\".concat(ORIGIN_DETAILS_SIDEBAR).concat(BASE_EVENT_NAME);\nvar MARK_NAME_JS_LOADING_ACTIVITY = \"\".concat(ORIGIN_ACTIVITY_SIDEBAR).concat(BASE_EVENT_NAME);\nvar MARK_NAME_JS_LOADING_SKILLS = \"\".concat(ORIGIN_SKILLS_SIDEBAR).concat(BASE_EVENT_NAME);\nvar MARK_NAME_JS_LOADING_METADATA = \"\".concat(ORIGIN_METADATA_SIDEBAR).concat(BASE_EVENT_NAME);\nvar MARK_NAME_JS_LOADING_VERSIONS = \"\".concat(ORIGIN_VERSIONS_SIDEBAR).concat(BASE_EVENT_NAME);\nvar URL_TO_FEED_ITEM_TYPE = {\n  annotations: 'annotation',\n  comments: 'comment',\n  tasks: 'task'\n};\nvar LoadableDetailsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_DETAILS, MARK_NAME_JS_LOADING_DETAILS);\nvar LoadableActivitySidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_ACTIVITY, MARK_NAME_JS_LOADING_ACTIVITY);\nvar LoadableSkillsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_SKILLS, MARK_NAME_JS_LOADING_SKILLS);\nvar LoadableMetadataSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_METADATA, MARK_NAME_JS_LOADING_METADATA);\nvar LoadableVersionsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_VERSIONS, MARK_NAME_JS_LOADING_VERSIONS);\nvar SidebarPanels = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SidebarPanels, _React$Component);\n  function SidebarPanels() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, SidebarPanels);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SidebarPanels)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"activitySidebar\", React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"detailsSidebar\", React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"metadataSidebar\", React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isInitialized: false\n    });\n    _defineProperty(_assertThisInitialized(_this), \"versionsSidebar\", React.createRef());\n    return _this;\n  }\n  _createClass(SidebarPanels, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        isInitialized: true\n      });\n    }\n    /**\n     * Refreshes the contents of the active sidebar\n     * @returns {void}\n     */\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var shouldRefreshCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var activitySidebar = this.activitySidebar.current;\n      var detailsSidebar = this.detailsSidebar.current;\n      var metadataSidebar = this.metadataSidebar.current;\n      var versionsSidebar = this.versionsSidebar.current;\n      if (activitySidebar) {\n        activitySidebar.refresh(shouldRefreshCache);\n      }\n      if (detailsSidebar) {\n        detailsSidebar.refresh();\n      }\n      if (metadataSidebar) {\n        metadataSidebar.refresh();\n      }\n      if (versionsSidebar) {\n        versionsSidebar.refresh();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        activitySidebarProps = _this$props.activitySidebarProps,\n        currentUser = _this$props.currentUser,\n        detailsSidebarProps = _this$props.detailsSidebarProps,\n        elementId = _this$props.elementId,\n        file = _this$props.file,\n        fileId = _this$props.fileId,\n        getPreview = _this$props.getPreview,\n        getViewer = _this$props.getViewer,\n        hasActivity = _this$props.hasActivity,\n        hasDetails = _this$props.hasDetails,\n        hasMetadata = _this$props.hasMetadata,\n        hasSkills = _this$props.hasSkills,\n        hasVersions = _this$props.hasVersions,\n        isOpen = _this$props.isOpen,\n        metadataSidebarProps = _this$props.metadataSidebarProps,\n        onAnnotationSelect = _this$props.onAnnotationSelect,\n        onVersionChange = _this$props.onVersionChange,\n        onVersionHistoryClick = _this$props.onVersionHistoryClick,\n        versionsSidebarProps = _this$props.versionsSidebarProps;\n      var isInitialized = this.state.isInitialized;\n      if (!isOpen || !hasActivity && !hasDetails && !hasMetadata && !hasSkills && !hasVersions) {\n        return null;\n      }\n      return React.createElement(Switch, null, hasSkills && React.createElement(Route, {\n        exact: true,\n        path: \"/\".concat(SIDEBAR_VIEW_SKILLS),\n        render: function render() {\n          return React.createElement(LoadableSkillsSidebar, {\n            elementId: elementId,\n            key: file.id,\n            file: file,\n            getPreview: getPreview,\n            getViewer: getViewer,\n            hasSidebarInitialized: isInitialized,\n            startMarkName: MARK_NAME_JS_LOADING_SKILLS\n          });\n        }\n      }), hasActivity && React.createElement(Route, {\n        exact: true,\n        path: [\"/\".concat(SIDEBAR_VIEW_ACTIVITY), \"/\".concat(SIDEBAR_VIEW_ACTIVITY, \"/:activeFeedEntryType(annotations)/:fileVersionId/:activeFeedEntryId?\"), \"/\".concat(SIDEBAR_VIEW_ACTIVITY, \"/:activeFeedEntryType(comments|tasks)/:activeFeedEntryId?\")],\n        render: function render(_ref) {\n          var match = _ref.match;\n          var matchEntryType = match.params.activeFeedEntryType;\n          var activeFeedEntryType = matchEntryType ? URL_TO_FEED_ITEM_TYPE[matchEntryType] : undefined;\n          return React.createElement(LoadableActivitySidebar, _extends({\n            elementId: elementId,\n            currentUser: currentUser,\n            file: file,\n            hasSidebarInitialized: isInitialized,\n            onAnnotationSelect: onAnnotationSelect,\n            onVersionChange: onVersionChange,\n            onVersionHistoryClick: onVersionHistoryClick,\n            ref: _this2.activitySidebar,\n            startMarkName: MARK_NAME_JS_LOADING_ACTIVITY,\n            activeFeedEntryId: match.params.activeFeedEntryId,\n            activeFeedEntryType: match.params.activeFeedEntryId && activeFeedEntryType\n          }, activitySidebarProps));\n        }\n      }), hasDetails && React.createElement(Route, {\n        exact: true,\n        path: \"/\".concat(SIDEBAR_VIEW_DETAILS),\n        render: function render() {\n          return React.createElement(LoadableDetailsSidebar, _extends({\n            elementId: elementId,\n            fileId: fileId,\n            hasSidebarInitialized: isInitialized,\n            key: fileId,\n            hasVersions: hasVersions,\n            onVersionHistoryClick: onVersionHistoryClick,\n            ref: _this2.detailsSidebar,\n            startMarkName: MARK_NAME_JS_LOADING_DETAILS\n          }, detailsSidebarProps));\n        }\n      }), hasMetadata && React.createElement(Route, {\n        exact: true,\n        path: \"/\".concat(SIDEBAR_VIEW_METADATA),\n        render: function render() {\n          return React.createElement(LoadableMetadataSidebar, _extends({\n            elementId: elementId,\n            fileId: fileId,\n            hasSidebarInitialized: isInitialized,\n            ref: _this2.metadataSidebar,\n            startMarkName: MARK_NAME_JS_LOADING_METADATA\n          }, metadataSidebarProps));\n        }\n      }), hasVersions && React.createElement(Route, {\n        path: \"/:sidebar(activity|details)/versions/:versionId?\",\n        render: function render(_ref2) {\n          var match = _ref2.match;\n          return React.createElement(LoadableVersionsSidebar, _extends({\n            fileId: fileId,\n            hasSidebarInitialized: isInitialized,\n            key: fileId,\n            onVersionChange: onVersionChange,\n            parentName: match.params.sidebar,\n            ref: _this2.versionsSidebar,\n            versionId: match.params.versionId\n          }, versionsSidebarProps));\n        }\n      }), React.createElement(Route, {\n        render: function render() {\n          var redirect = '';\n          if (hasSkills) {\n            redirect = SIDEBAR_VIEW_SKILLS;\n          } else if (hasActivity) {\n            redirect = SIDEBAR_VIEW_ACTIVITY;\n          } else if (hasDetails) {\n            redirect = SIDEBAR_VIEW_DETAILS;\n          } else if (hasMetadata) {\n            redirect = SIDEBAR_VIEW_METADATA;\n          }\n          return React.createElement(Redirect, {\n            to: {\n              pathname: \"/\".concat(redirect),\n              state: {\n                silent: true\n              }\n            }\n          });\n        }\n      }));\n    }\n  }]);\n  return SidebarPanels;\n}(React.Component);\nexport { SidebarPanels as SidebarPanelsComponent };\nexport default flow([withSidebarAnnotations, withAPIContext, withAnnotatorContext, withRouterAndRef])(SidebarPanels);","map":{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarPanels.js"],"names":["React","flow","Redirect","Route","Switch","SidebarUtils","withSidebarAnnotations","withAnnotatorContext","withAPIContext","withRouterAndRef","ORIGIN_ACTIVITY_SIDEBAR","ORIGIN_DETAILS_SIDEBAR","ORIGIN_METADATA_SIDEBAR","ORIGIN_SKILLS_SIDEBAR","ORIGIN_VERSIONS_SIDEBAR","SIDEBAR_VIEW_ACTIVITY","SIDEBAR_VIEW_DETAILS","SIDEBAR_VIEW_METADATA","SIDEBAR_VIEW_SKILLS","SIDEBAR_VIEW_VERSIONS","BASE_EVENT_NAME","MARK_NAME_JS_LOADING_DETAILS","MARK_NAME_JS_LOADING_ACTIVITY","MARK_NAME_JS_LOADING_SKILLS","MARK_NAME_JS_LOADING_METADATA","MARK_NAME_JS_LOADING_VERSIONS","URL_TO_FEED_ITEM_TYPE","annotations","comments","tasks","LoadableDetailsSidebar","getAsyncSidebarContent","LoadableActivitySidebar","LoadableSkillsSidebar","LoadableMetadataSidebar","LoadableVersionsSidebar","SidebarPanels","Component","createRef","isInitialized","setState","shouldRefreshCache","current","activitySidebar","detailsSidebar","metadataSidebar","versionsSidebar","refresh","activitySidebarProps","currentUser","detailsSidebarProps","elementId","file","fileId","getPreview","getViewer","hasActivity","hasDetails","hasMetadata","hasSkills","hasVersions","isOpen","metadataSidebarProps","onAnnotationSelect","onVersionChange","onVersionHistoryClick","versionsSidebarProps","props","state","id","match","matchEntryType","params","activeFeedEntryType","undefined","activeFeedEntryId","sidebar","versionId","redirect","pathname","silent","SidebarPanelsComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Sidebar Panels component\n * @author Box\n */\n\nimport * as React from 'react';\nimport flow from 'lodash/flow';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport SidebarUtils from './SidebarUtils';\nimport withSidebarAnnotations from './withSidebarAnnotations';\nimport { withAnnotatorContext } from '../common/annotator-context';\nimport { withAPIContext } from '../common/api-context';\nimport { withRouterAndRef } from '../common/routing';\nimport {\n    ORIGIN_ACTIVITY_SIDEBAR,\n    ORIGIN_DETAILS_SIDEBAR,\n    ORIGIN_METADATA_SIDEBAR,\n    ORIGIN_SKILLS_SIDEBAR,\n    ORIGIN_VERSIONS_SIDEBAR,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_METADATA,\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_VERSIONS,\n} from '../../constants';\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\nimport type { User, BoxItem } from '../../common/types/core';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    currentUser?: User,\n    detailsSidebarProps: DetailsSidebarProps,\n    elementId: string,\n    file: BoxItem,\n    fileId: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivity: boolean,\n    hasDetails: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    isOpen: boolean,\n    metadataSidebarProps: MetadataSidebarProps,\n    onAnnotationSelect?: Function,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    versionsSidebarProps: VersionsSidebarProps,\n};\n\ntype State = {\n    isInitialized: boolean,\n};\n\ntype ElementRefType = {\n    current: null | Object,\n};\n\n// TODO: place into code splitting logic\nconst BASE_EVENT_NAME = '_JS_LOADING';\nconst MARK_NAME_JS_LOADING_DETAILS = `${ORIGIN_DETAILS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_ACTIVITY = `${ORIGIN_ACTIVITY_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_SKILLS = `${ORIGIN_SKILLS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_METADATA = `${ORIGIN_METADATA_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_VERSIONS = `${ORIGIN_VERSIONS_SIDEBAR}${BASE_EVENT_NAME}`;\n\nconst URL_TO_FEED_ITEM_TYPE = { annotations: 'annotation', comments: 'comment', tasks: 'task' };\n\nconst LoadableDetailsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_DETAILS, MARK_NAME_JS_LOADING_DETAILS);\nconst LoadableActivitySidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_ACTIVITY,\n    MARK_NAME_JS_LOADING_ACTIVITY,\n);\nconst LoadableSkillsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_SKILLS, MARK_NAME_JS_LOADING_SKILLS);\nconst LoadableMetadataSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_METADATA,\n    MARK_NAME_JS_LOADING_METADATA,\n);\nconst LoadableVersionsSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_VERSIONS,\n    MARK_NAME_JS_LOADING_VERSIONS,\n);\n\nclass SidebarPanels extends React.Component<Props, State> {\n    activitySidebar: ElementRefType = React.createRef();\n\n    detailsSidebar: ElementRefType = React.createRef();\n\n    metadataSidebar: ElementRefType = React.createRef();\n\n    state: State = { isInitialized: false };\n\n    versionsSidebar: ElementRefType = React.createRef();\n\n    componentDidMount() {\n        this.setState({ isInitialized: true });\n    }\n\n    /**\n     * Refreshes the contents of the active sidebar\n     * @returns {void}\n     */\n    refresh(shouldRefreshCache: boolean = true): void {\n        const { current: activitySidebar } = this.activitySidebar;\n        const { current: detailsSidebar } = this.detailsSidebar;\n        const { current: metadataSidebar } = this.metadataSidebar;\n        const { current: versionsSidebar } = this.versionsSidebar;\n\n        if (activitySidebar) {\n            activitySidebar.refresh(shouldRefreshCache);\n        }\n\n        if (detailsSidebar) {\n            detailsSidebar.refresh();\n        }\n\n        if (metadataSidebar) {\n            metadataSidebar.refresh();\n        }\n\n        if (versionsSidebar) {\n            versionsSidebar.refresh();\n        }\n    }\n\n    render() {\n        const {\n            activitySidebarProps,\n            currentUser,\n            detailsSidebarProps,\n            elementId,\n            file,\n            fileId,\n            getPreview,\n            getViewer,\n            hasActivity,\n            hasDetails,\n            hasMetadata,\n            hasSkills,\n            hasVersions,\n            isOpen,\n            metadataSidebarProps,\n            onAnnotationSelect,\n            onVersionChange,\n            onVersionHistoryClick,\n            versionsSidebarProps,\n        }: Props = this.props;\n\n        const { isInitialized } = this.state;\n\n        if (!isOpen || (!hasActivity && !hasDetails && !hasMetadata && !hasSkills && !hasVersions)) {\n            return null;\n        }\n\n        return (\n            <Switch>\n                {hasSkills && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_SKILLS}`}\n                        render={() => (\n                            <LoadableSkillsSidebar\n                                elementId={elementId}\n                                key={file.id}\n                                file={file}\n                                getPreview={getPreview}\n                                getViewer={getViewer}\n                                hasSidebarInitialized={isInitialized}\n                                startMarkName={MARK_NAME_JS_LOADING_SKILLS}\n                            />\n                        )}\n                    />\n                )}\n                {/* This handles both the default activity sidebar and the activity sidebar with a\n                comment or task deeplink.  */}\n                {hasActivity && (\n                    <Route\n                        exact\n                        path={[\n                            `/${SIDEBAR_VIEW_ACTIVITY}`,\n                            `/${SIDEBAR_VIEW_ACTIVITY}/:activeFeedEntryType(annotations)/:fileVersionId/:activeFeedEntryId?`,\n                            `/${SIDEBAR_VIEW_ACTIVITY}/:activeFeedEntryType(comments|tasks)/:activeFeedEntryId?`,\n                        ]}\n                        render={({ match }) => {\n                            const matchEntryType = match.params.activeFeedEntryType;\n                            const activeFeedEntryType = matchEntryType\n                                ? URL_TO_FEED_ITEM_TYPE[matchEntryType]\n                                : undefined;\n                            return (\n                                <LoadableActivitySidebar\n                                    elementId={elementId}\n                                    currentUser={currentUser}\n                                    file={file}\n                                    hasSidebarInitialized={isInitialized}\n                                    onAnnotationSelect={onAnnotationSelect}\n                                    onVersionChange={onVersionChange}\n                                    onVersionHistoryClick={onVersionHistoryClick}\n                                    ref={this.activitySidebar}\n                                    startMarkName={MARK_NAME_JS_LOADING_ACTIVITY}\n                                    activeFeedEntryId={match.params.activeFeedEntryId}\n                                    activeFeedEntryType={match.params.activeFeedEntryId && activeFeedEntryType}\n                                    {...activitySidebarProps}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                {hasDetails && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_DETAILS}`}\n                        render={() => (\n                            <LoadableDetailsSidebar\n                                elementId={elementId}\n                                fileId={fileId}\n                                hasSidebarInitialized={isInitialized}\n                                key={fileId}\n                                hasVersions={hasVersions}\n                                onVersionHistoryClick={onVersionHistoryClick}\n                                ref={this.detailsSidebar}\n                                startMarkName={MARK_NAME_JS_LOADING_DETAILS}\n                                {...detailsSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                {hasMetadata && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_METADATA}`}\n                        render={() => (\n                            <LoadableMetadataSidebar\n                                elementId={elementId}\n                                fileId={fileId}\n                                hasSidebarInitialized={isInitialized}\n                                ref={this.metadataSidebar}\n                                startMarkName={MARK_NAME_JS_LOADING_METADATA}\n                                {...metadataSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                {hasVersions && (\n                    <Route\n                        path=\"/:sidebar(activity|details)/versions/:versionId?\"\n                        render={({ match }) => (\n                            <LoadableVersionsSidebar\n                                fileId={fileId}\n                                hasSidebarInitialized={isInitialized}\n                                key={fileId}\n                                onVersionChange={onVersionChange}\n                                parentName={match.params.sidebar}\n                                ref={this.versionsSidebar}\n                                versionId={match.params.versionId}\n                                {...versionsSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                <Route\n                    render={() => {\n                        let redirect = '';\n\n                        if (hasSkills) {\n                            redirect = SIDEBAR_VIEW_SKILLS;\n                        } else if (hasActivity) {\n                            redirect = SIDEBAR_VIEW_ACTIVITY;\n                        } else if (hasDetails) {\n                            redirect = SIDEBAR_VIEW_DETAILS;\n                        } else if (hasMetadata) {\n                            redirect = SIDEBAR_VIEW_METADATA;\n                        }\n\n                        return <Redirect to={{ pathname: `/${redirect}`, state: { silent: true } }} />;\n                    }}\n                />\n            </Switch>\n        );\n    }\n}\n\nexport { SidebarPanels as SidebarPanelsComponent };\nexport default flow([withSidebarAnnotations, withAPIContext, withAnnotatorContext, withRouterAndRef])(SidebarPanels);\n"]},"metadata":{},"sourceType":"module"}