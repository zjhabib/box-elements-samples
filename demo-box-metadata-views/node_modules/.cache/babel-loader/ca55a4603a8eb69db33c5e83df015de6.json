{"ast":null,"code":"/**\n * \n * @file Item list component\n */\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport { Table, Column } from 'react-virtualized/dist/es/Table';\nimport AutoSizer from 'react-virtualized/dist/es/AutoSizer';\nimport nameCellRenderer from './nameCellRenderer';\nimport progressCellRenderer from './progressCellRenderer';\nimport actionCellRenderer from './actionCellRenderer';\nimport removeCellRenderer from './removeCellRenderer';\nimport 'react-virtualized/styles.css';\nimport './ItemList.scss';\nvar ItemList = function ItemList(_ref) {\n  var _ref$isResumableUploa = _ref.isResumableUploadsEnabled,\n    isResumableUploadsEnabled = _ref$isResumableUploa === void 0 ? false : _ref$isResumableUploa,\n    items = _ref.items,\n    onClick = _ref.onClick,\n    _ref$onRemoveClick = _ref.onRemoveClick,\n    onRemoveClick = _ref$onRemoveClick === void 0 ? noop : _ref$onRemoveClick;\n  return React.createElement(AutoSizer, null, function (_ref2) {\n    var width = _ref2.width,\n      height = _ref2.height;\n    var nameCell = nameCellRenderer(isResumableUploadsEnabled);\n    var progressCell = progressCellRenderer();\n    var actionCell = actionCellRenderer(isResumableUploadsEnabled, onClick);\n    var removeCell = removeCellRenderer(onRemoveClick);\n    return React.createElement(Table, {\n      className: \"bcu-item-list\",\n      disableHeader: true,\n      headerHeight: 0,\n      height: height,\n      rowClassName: \"bcu-item-row\",\n      rowCount: items.length,\n      rowGetter: function rowGetter(_ref3) {\n        var index = _ref3.index;\n        return items[index];\n      },\n      rowHeight: 50,\n      width: width\n    }, React.createElement(Column, {\n      cellRenderer: nameCell,\n      dataKey: \"name\",\n      flexGrow: 1,\n      flexShrink: 1,\n      width: 300\n    }), React.createElement(Column, {\n      cellRenderer: progressCell,\n      dataKey: \"progress\",\n      flexGrow: 1,\n      flexShrink: 1,\n      style: {\n        textAlign: 'right'\n      },\n      width: 300\n    }), React.createElement(Column, {\n      className: isResumableUploadsEnabled ? '' : 'bcu-item-list-action-column',\n      cellRenderer: actionCell,\n      dataKey: \"status\",\n      flexShrink: 0,\n      width: 25\n    }), isResumableUploadsEnabled && React.createElement(Column, {\n      className: \"bcu-item-list-action-column\",\n      cellRenderer: removeCell,\n      dataKey: \"remove\",\n      flexShrink: 0,\n      width: 25\n    }));\n  });\n};\nexport default ItemList;","map":{"version":3,"sources":["../../../src/elements/content-uploader/ItemList.js"],"names":["React","noop","Table","Column","AutoSizer","nameCellRenderer","progressCellRenderer","actionCellRenderer","removeCellRenderer","ItemList","isResumableUploadsEnabled","items","onClick","onRemoveClick","width","height","nameCell","progressCell","actionCell","removeCell","length","index","textAlign"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Item list component\n */\n\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport { Table, Column } from 'react-virtualized/dist/es/Table';\nimport AutoSizer from 'react-virtualized/dist/es/AutoSizer';\nimport nameCellRenderer from './nameCellRenderer';\nimport progressCellRenderer from './progressCellRenderer';\nimport actionCellRenderer from './actionCellRenderer';\nimport removeCellRenderer from './removeCellRenderer';\nimport type { UploadItem } from '../../common/types/upload';\nimport 'react-virtualized/styles.css';\nimport './ItemList.scss';\n\ntype Props = {\n    isResumableUploadsEnabled?: boolean,\n    items: UploadItem[],\n    onClick: Function,\n    onRemoveClick?: (item: UploadItem) => void,\n};\n\nconst ItemList = ({ isResumableUploadsEnabled = false, items, onClick, onRemoveClick = noop }: Props) => (\n    <AutoSizer>\n        {({ width, height }) => {\n            const nameCell = nameCellRenderer(isResumableUploadsEnabled);\n            const progressCell = progressCellRenderer();\n            const actionCell = actionCellRenderer(isResumableUploadsEnabled, onClick);\n            const removeCell = removeCellRenderer(onRemoveClick);\n\n            return (\n                <Table\n                    className=\"bcu-item-list\"\n                    disableHeader\n                    headerHeight={0}\n                    height={height}\n                    rowClassName=\"bcu-item-row\"\n                    rowCount={items.length}\n                    rowGetter={({ index }) => items[index]}\n                    rowHeight={50}\n                    width={width}\n                >\n                    <Column cellRenderer={nameCell} dataKey=\"name\" flexGrow={1} flexShrink={1} width={300} />\n                    <Column\n                        cellRenderer={progressCell}\n                        dataKey=\"progress\"\n                        flexGrow={1}\n                        flexShrink={1}\n                        style={{ textAlign: 'right' }}\n                        width={300}\n                    />\n                    <Column\n                        className={isResumableUploadsEnabled ? '' : 'bcu-item-list-action-column'}\n                        cellRenderer={actionCell}\n                        dataKey=\"status\"\n                        flexShrink={0}\n                        width={25}\n                    />\n                    {isResumableUploadsEnabled && (\n                        <Column\n                            className=\"bcu-item-list-action-column\"\n                            cellRenderer={removeCell}\n                            dataKey=\"remove\"\n                            flexShrink={0}\n                            width={25}\n                        />\n                    )}\n                </Table>\n            );\n        }}\n    </AutoSizer>\n);\n\nexport default ItemList;\n"]},"metadata":{},"sourceType":"module"}