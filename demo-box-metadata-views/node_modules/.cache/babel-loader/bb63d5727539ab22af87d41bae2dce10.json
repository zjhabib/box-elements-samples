{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport omit from 'lodash/omit';\nimport uniqueId from 'lodash/uniqueId';\nvar AccessibleSVG = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AccessibleSVG, _React$Component);\n  function AccessibleSVG() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, AccessibleSVG);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AccessibleSVG)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"id\", uniqueId('icon'));\n    return _this;\n  }\n  _createClass(AccessibleSVG, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        children = _this$props.children,\n        title = _this$props.title,\n        rest = _objectWithoutProperties(_this$props, [\"children\", \"title\"]);\n      var titleID = \"\".concat(this.id, \"-title\"); // Make sure parent doesn't accidentally override these values\n\n      var svgProps = omit(rest, ['role', 'aria-labelledby']); // Accessibility fix for IE11, which treats all SVGs as focusable by default\n\n      svgProps.focusable = 'false';\n      if (title) {\n        svgProps['aria-labelledby'] = titleID;\n        svgProps.role = 'img';\n      } else {\n        svgProps.role = 'presentation';\n      }\n      return React.createElement(\"svg\", svgProps, title ? React.createElement(\"title\", {\n        id: titleID\n      }, title) : null, children);\n    }\n  }]);\n  return AccessibleSVG;\n}(React.Component);\nexport default AccessibleSVG;","map":{"version":3,"sources":["../../../src/components/accessible-svg/AccessibleSVG.tsx"],"names":["React","omit","uniqueId","AccessibleSVG","Component","children","title","rest","props","titleID","id","svgProps","focusable","role"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,iBAArB;IAwBMC,a;;;;;;;;;;;yDACWD,QAAQ,CAAC,MAAD,C;;;;;6BAEZ;MAAA,IAAA,WAAA,GACgC,IAAA,CAAKM,KADrC;QACGH,QADH,GAAA,WAAA,CACGA,QADH;QACaC,KADb,GAAA,WAAA,CACaA,KADb;QACuBC,IADvB,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,UAAA,EAAA,OAAA,CAAA,CAAA;MAEL,IAAME,OAAO,GAAA,EAAA,CAAA,MAAA,CAAM,IAAA,CAAKC,EAAX,EAAA,QAAA,CAAb,CAFK,CAIL;;MACA,IAAMC,QAA2D,GAAGV,IAAI,CAACM,IAAD,EAAO,CAAC,MAAD,EAAS,iBAAT,CAAP,CAAxE,CALK,CAOL;;MACAI,QAAQ,CAACC,SAATD,GAAqB,OAArBA;MAEA,IAAIL,KAAJ,EAAW;QACPK,QAAQ,CAAC,iBAAD,CAARA,GAA8BF,OAA9BE;QACAA,QAAQ,CAACE,IAATF,GAAgB,KAAhBA;MACH,CAHD,MAGO;QACHA,QAAQ,CAACE,IAATF,GAAgB,cAAhBA;MACH;MAED,OACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAASA,QAAT,EACKL,KAAK,GAAG,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;QAAO,EAAE,EAAEG;MAAX,CAAA,EAAqBH,KAArB,CAAH,GAAyC,IADnD,EAEKD,QAFL,CADJ;IAMH;;;EA1BuBL,KAAK,CAACI,S;AA6BlC,eAAeD,aAAf","sourcesContent":["import * as React from 'react';\nimport omit from 'lodash/omit';\nimport uniqueId from 'lodash/uniqueId';\n\nexport interface SVGProps {\n    /** Class for the svg */\n    className?: string;\n    /** Height for the svg */\n    height?: number;\n    /** Accessibility role for the svg */\n    role?: string;\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: React.ReactNode;\n    /** View box for the svg */\n    viewBox?: string;\n    /** Width for the svg */\n    width?: number;\n}\n\nexport interface AccessibleSVGProps {\n    /** SVG dom elements for the component */\n    children: React.ReactElement | Array<React.ReactElement>;\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: React.ReactNode;\n}\n\nclass AccessibleSVG extends React.Component<AccessibleSVGProps & SVGProps> {\n    id: string = uniqueId('icon');\n\n    render() {\n        const { children, title, ...rest } = this.props;\n        const titleID = `${this.id}-title`;\n\n        // Make sure parent doesn't accidentally override these values\n        const svgProps: Record<string, string | number | React.ReactNode> = omit(rest, ['role', 'aria-labelledby']);\n\n        // Accessibility fix for IE11, which treats all SVGs as focusable by default\n        svgProps.focusable = 'false';\n\n        if (title) {\n            svgProps['aria-labelledby'] = titleID;\n            svgProps.role = 'img';\n        } else {\n            svgProps.role = 'presentation';\n        }\n\n        return (\n            <svg {...svgProps}>\n                {title ? <title id={titleID}>{title}</title> : null}\n                {children}\n            </svg>\n        );\n    }\n}\n\nexport default AccessibleSVG;\n"]},"metadata":{},"sourceType":"module"}