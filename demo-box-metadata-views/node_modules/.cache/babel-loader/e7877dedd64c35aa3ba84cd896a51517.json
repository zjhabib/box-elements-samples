{"ast":null,"code":"var _positions;\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport TetherComponent from 'react-tether';\nimport uniqueId from 'lodash/uniqueId';\nimport './Flyout.scss';\nvar BOTTOM_CENTER = 'bottom-center';\nvar BOTTOM_LEFT = 'bottom-left';\nvar BOTTOM_RIGHT = 'bottom-right';\nvar MIDDLE_LEFT = 'middle-left';\nvar MIDDLE_RIGHT = 'middle-right';\nvar TOP_CENTER = 'top-center';\nvar TOP_LEFT = 'top-left';\nvar TOP_RIGHT = 'top-right';\nvar positions = (_positions = {}, _defineProperty(_positions, BOTTOM_CENTER, {\n  attachment: 'top center',\n  targetAttachment: 'bottom center'\n}), _defineProperty(_positions, BOTTOM_LEFT, {\n  attachment: 'top right',\n  targetAttachment: 'bottom right'\n}), _defineProperty(_positions, BOTTOM_RIGHT, {\n  attachment: 'top left',\n  targetAttachment: 'bottom left'\n}), _defineProperty(_positions, MIDDLE_LEFT, {\n  attachment: 'middle right',\n  targetAttachment: 'middle left'\n}), _defineProperty(_positions, MIDDLE_RIGHT, {\n  attachment: 'middle left',\n  targetAttachment: 'middle right'\n}), _defineProperty(_positions, TOP_CENTER, {\n  attachment: 'bottom center',\n  targetAttachment: 'top center'\n}), _defineProperty(_positions, TOP_LEFT, {\n  attachment: 'bottom right',\n  targetAttachment: 'top right'\n}), _defineProperty(_positions, TOP_RIGHT, {\n  attachment: 'bottom left',\n  targetAttachment: 'top left'\n}), _positions);\n/**\n * Checks if there is a clickable ancestor or self\n * @param {Node} rootNode The base node we should stop at\n * @param {Node} targetNode The target node of the event\n * @returns {boolean}\n */\n\nvar hasClickableAncestor = function hasClickableAncestor(rootNode, targetNode) {\n  // Check if the element or any of the ancestors are click-able (stopping at the component boundary)\n  var currentNode = targetNode;\n  while (currentNode && currentNode instanceof Node && currentNode.parentNode && currentNode !== rootNode) {\n    var nodeName = currentNode.nodeName.toUpperCase();\n    if (nodeName === 'A' || nodeName === 'BUTTON') {\n      return true;\n    }\n    currentNode = currentNode.parentNode;\n  }\n  return false;\n};\n/**\n * Checks if the target element is inside an element with the given CSS class.\n * @param {HTMLElement} targetEl The target element\n * @param {string} className A CSS class on the element to check for\n */\n\nvar hasClassAncestor = function hasClassAncestor(targetEl, className) {\n  var el = targetEl;\n  while (el && el instanceof HTMLElement) {\n    if (el.classList.contains(className)) {\n      return true;\n    }\n    el = el.parentNode;\n  }\n  return false;\n};\nvar Flyout = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Flyout, _React$Component);\n  function Flyout(props) {\n    var _this;\n    _classCallCheck(this, Flyout);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Flyout).call(this, props));\n    _defineProperty(_assertThisInitialized(_this), \"handleOverlayClick\", function (event) {\n      var overlayNode = document.getElementById(_this.overlayID);\n      var _this$props = _this.props,\n        closeOnClick = _this$props.closeOnClick,\n        closeOnClickPredicate = _this$props.closeOnClickPredicate;\n      if (!closeOnClick || !hasClickableAncestor(overlayNode, event.target)) {\n        return;\n      }\n      if (closeOnClickPredicate && !closeOnClickPredicate(event)) {\n        return;\n      }\n      _this.handleOverlayClose();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleButtonClick\", function (event) {\n      var isVisible = _this.state.isVisible;\n      if (isVisible) {\n        _this.closeOverlay();\n      } else {\n        _this.openOverlay();\n      } // If button was clicked, the detail field should hold number of clicks.\n      // If number is zero, the event was synthesized.\n      // https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n\n      var isButtonClicked = event.detail > 0;\n      _this.setState({\n        isButtonClicked: isButtonClicked\n      });\n      event.preventDefault();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleButtonHover\", function () {\n      var _this$props2 = _this.props,\n        openOnHover = _this$props2.openOnHover,\n        openOnHoverDelayTimeout = _this$props2.openOnHoverDelayTimeout;\n      if (openOnHover) {\n        clearTimeout(_this.hoverDelay);\n        _this.hoverDelay = setTimeout(function () {\n          _this.openOverlay();\n        }, openOnHoverDelayTimeout);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleButtonHoverLeave\", function () {\n      var _this$props3 = _this.props,\n        openOnHover = _this$props3.openOnHover,\n        openOnHoverDelayTimeout = _this$props3.openOnHoverDelayTimeout;\n      if (openOnHover) {\n        clearTimeout(_this.hoverDelay);\n        _this.hoverDelay = setTimeout(function () {\n          _this.closeOverlay();\n        }, openOnHoverDelayTimeout);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"openOverlay\", function () {\n      _this.setState({\n        isVisible: true\n      });\n      var onOpen = _this.props.onOpen;\n      if (onOpen) {\n        onOpen();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"closeOverlay\", function () {\n      _this.setState({\n        isVisible: false\n      });\n      var onClose = _this.props.onClose;\n      if (onClose) {\n        onClose();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"focusButton\", function () {\n      var buttonEl = document.getElementById(_this.overlayButtonID);\n      if (buttonEl) {\n        buttonEl.focus();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleOverlayClose\", function () {\n      _this.focusButton();\n      _this.closeOverlay();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleDocumentClickOrWindowBlur\", function (event) {\n      var _this$props4 = _this.props,\n        portaledClasses = _this$props4.portaledClasses,\n        closeOnClickOutside = _this$props4.closeOnClickOutside,\n        closeOnWindowBlur = _this$props4.closeOnWindowBlur;\n      var isVisible = _this.state.isVisible;\n      if (!isVisible || !(closeOnClickOutside || closeOnWindowBlur)) {\n        return;\n      }\n      var overlayNode = document.getElementById(_this.overlayID);\n      var buttonNode = document.getElementById(_this.overlayButtonID);\n      var isInsideToggleButton = buttonNode && event.target instanceof Node && buttonNode.contains(event.target) || buttonNode === event.target;\n      var isInsideOverlay = overlayNode && event.target instanceof Node && overlayNode.contains(event.target) || overlayNode === event.target;\n      var isInside = isInsideToggleButton || isInsideOverlay;\n      if (isInside || portaledClasses.some(function (className) {\n        return hasClassAncestor(event.target, className);\n      })) {\n        return;\n      } // Only close overlay when the click is outside of the flyout or window loses focus\n\n      _this.closeOverlay();\n    });\n    _this.overlayID = uniqueId('overlay');\n    _this.overlayButtonID = uniqueId('flyoutbutton');\n    _this.state = {\n      isVisible: props.isVisibleByDefault,\n      isButtonClicked: false\n    };\n    return _this;\n  }\n  _createClass(Flyout, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!prevState.isVisible && this.state.isVisible) {\n        var _this$props5 = this.props,\n          closeOnClickOutside = _this$props5.closeOnClickOutside,\n          closeOnWindowBlur = _this$props5.closeOnWindowBlur; // When overlay is being opened\n\n        if (closeOnClickOutside) {\n          document.addEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n          document.addEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n        }\n        if (closeOnWindowBlur) {\n          window.addEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n        }\n      } else if (prevState.isVisible && !this.state.isVisible) {\n        // When overlay is being closed\n        document.removeEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n        document.removeEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n        window.removeEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.isVisible) {\n        // Clean-up global click handlers\n        document.removeEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n        document.removeEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n        window.removeEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n      }\n      if (this.props.openOnHover && this.hoverDelay) {\n        clearTimeout(this.hoverDelay);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n        children = _this$props6.children,\n        _this$props6$classNam = _this$props6.className,\n        className = _this$props6$classNam === void 0 ? '' : _this$props6$classNam,\n        constrainToScrollParent = _this$props6.constrainToScrollParent,\n        constrainToWindow = _this$props6.constrainToWindow,\n        offset = _this$props6.offset,\n        openOnHover = _this$props6.openOnHover,\n        position = _this$props6.position,\n        shouldDefaultFocus = _this$props6.shouldDefaultFocus;\n      var _this$state = this.state,\n        isButtonClicked = _this$state.isButtonClicked,\n        isVisible = _this$state.isVisible;\n      var elements = React.Children.toArray(children);\n      var tetherPosition = positions[position];\n      if (elements.length !== 2) {\n        throw new Error('Flyout must have exactly two children: A button component and a <Overlay>');\n      }\n      var overlayButton = elements[0];\n      var overlayContent = elements[1];\n      var overlayButtonProps = {\n        id: this.overlayButtonID,\n        key: this.overlayButtonID,\n        role: 'button',\n        onClick: this.handleButtonClick,\n        onMouseEnter: this.handleButtonHover,\n        onMouseLeave: this.handleButtonHoverLeave,\n        'aria-haspopup': 'true',\n        'aria-expanded': isVisible ? 'true' : 'false'\n      };\n      if (isVisible) {\n        overlayButtonProps['aria-controls'] = this.overlayID;\n      }\n      var overlayProps = {\n        id: this.overlayID,\n        key: this.overlayID,\n        role: 'dialog',\n        onClick: this.handleOverlayClick,\n        onClose: this.handleOverlayClose,\n        onMouseEnter: this.handleButtonHover,\n        onMouseLeave: this.handleButtonHoverLeave,\n        shouldDefaultFocus: shouldDefaultFocus || !isButtonClicked && !openOnHover,\n        'aria-labelledby': this.overlayButtonID\n      };\n      var constraints = [];\n      if (constrainToScrollParent) {\n        constraints.push({\n          to: 'scrollParent',\n          attachment: 'together'\n        });\n      }\n      if (constrainToWindow) {\n        constraints.push({\n          to: 'window',\n          attachment: 'together'\n        });\n      }\n      var tetherProps = {\n        classPrefix: 'flyout-overlay',\n        attachment: tetherPosition.attachment,\n        targetAttachment: tetherPosition.targetAttachment,\n        enabled: isVisible,\n        classes: {\n          element: \"flyout-overlay \".concat(className)\n        },\n        constraints: constraints\n      };\n      if (offset) {\n        tetherProps.offset = offset;\n      } else {\n        switch (position) {\n          case BOTTOM_CENTER:\n          case BOTTOM_LEFT:\n          case BOTTOM_RIGHT:\n            tetherProps.offset = '-10px 0';\n            break;\n          case TOP_CENTER:\n          case TOP_LEFT:\n          case TOP_RIGHT:\n            tetherProps.offset = '10px 0';\n            break;\n          case MIDDLE_LEFT:\n            tetherProps.offset = '0 10px';\n            break;\n          case MIDDLE_RIGHT:\n            tetherProps.offset = '0 -10px';\n            break;\n          default: // no default\n        }\n      }\n\n      return React.createElement(TetherComponent, tetherProps, React.cloneElement(overlayButton, overlayButtonProps), isVisible ? React.cloneElement(overlayContent, overlayProps) : null);\n    }\n  }]);\n  return Flyout;\n}(React.Component);\n_defineProperty(Flyout, \"defaultProps\", {\n  className: '',\n  closeOnClick: true,\n  closeOnClickOutside: true,\n  closeOnWindowBlur: false,\n  constrainToScrollParent: true,\n  constrainToWindow: false,\n  isVisibleByDefault: false,\n  openOnHover: false,\n  openOnHoverDelayTimeout: 300,\n  portaledClasses: [],\n  position: BOTTOM_RIGHT\n});\nexport default Flyout;","map":{"version":3,"sources":["../../../src/components/flyout/Flyout.js"],"names":["React","TetherComponent","uniqueId","BOTTOM_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","MIDDLE_LEFT","MIDDLE_RIGHT","TOP_CENTER","TOP_LEFT","TOP_RIGHT","positions","attachment","targetAttachment","hasClickableAncestor","rootNode","targetNode","currentNode","Node","parentNode","nodeName","toUpperCase","hasClassAncestor","targetEl","className","el","HTMLElement","classList","contains","Flyout","Component","closeOnClick","closeOnClickOutside","closeOnWindowBlur","constrainToScrollParent","constrainToWindow","isVisibleByDefault","openOnHover","openOnHoverDelayTimeout","portaledClasses","position","props","overlayID","overlayButtonID","state","isVisible","isButtonClicked","prevProps","prevState","document","addEventListener","handleDocumentClickOrWindowBlur","window","removeEventListener","hoverDelay","clearTimeout","event","overlayNode","getElementById","closeOnClickPredicate","target","handleOverlayClose","closeOverlay","openOverlay","detail","setState","preventDefault","setTimeout","onOpen","onClose","buttonEl","focus","focusButton","buttonNode","isInsideToggleButton","isInsideOverlay","isInside","some","children","offset","shouldDefaultFocus","elements","Children","toArray","tetherPosition","length","Error","overlayButton","overlayContent","overlayButtonProps","id","key","role","onClick","handleButtonClick","onMouseEnter","handleButtonHover","onMouseLeave","handleButtonHoverLeave","overlayProps","handleOverlayClick","constraints","push","to","tetherProps","classPrefix","enabled","classes","element","cloneElement"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport TetherComponent from 'react-tether';\nimport uniqueId from 'lodash/uniqueId';\n\nimport './Flyout.scss';\n\nconst BOTTOM_CENTER = 'bottom-center';\nconst BOTTOM_LEFT = 'bottom-left';\nconst BOTTOM_RIGHT = 'bottom-right';\nconst MIDDLE_LEFT = 'middle-left';\nconst MIDDLE_RIGHT = 'middle-right';\nconst TOP_CENTER = 'top-center';\nconst TOP_LEFT = 'top-left';\nconst TOP_RIGHT = 'top-right';\n\nconst positions = {\n    [BOTTOM_CENTER]: {\n        attachment: 'top center',\n        targetAttachment: 'bottom center',\n    },\n    [BOTTOM_LEFT]: {\n        attachment: 'top right',\n        targetAttachment: 'bottom right',\n    },\n    [BOTTOM_RIGHT]: {\n        attachment: 'top left',\n        targetAttachment: 'bottom left',\n    },\n    [MIDDLE_LEFT]: {\n        attachment: 'middle right',\n        targetAttachment: 'middle left',\n    },\n    [MIDDLE_RIGHT]: {\n        attachment: 'middle left',\n        targetAttachment: 'middle right',\n    },\n    [TOP_CENTER]: {\n        attachment: 'bottom center',\n        targetAttachment: 'top center',\n    },\n    [TOP_LEFT]: {\n        attachment: 'bottom right',\n        targetAttachment: 'top right',\n    },\n    [TOP_RIGHT]: {\n        attachment: 'bottom left',\n        targetAttachment: 'top left',\n    },\n};\n\n/**\n * Checks if there is a clickable ancestor or self\n * @param {Node} rootNode The base node we should stop at\n * @param {Node} targetNode The target node of the event\n * @returns {boolean}\n */\nconst hasClickableAncestor = (rootNode, targetNode) => {\n    // Check if the element or any of the ancestors are click-able (stopping at the component boundary)\n    let currentNode = targetNode;\n    while (currentNode && currentNode instanceof Node && currentNode.parentNode && currentNode !== rootNode) {\n        const nodeName = currentNode.nodeName.toUpperCase();\n        if (nodeName === 'A' || nodeName === 'BUTTON') {\n            return true;\n        }\n        currentNode = currentNode.parentNode;\n    }\n    return false;\n};\n\n/**\n * Checks if the target element is inside an element with the given CSS class.\n * @param {HTMLElement} targetEl The target element\n * @param {string} className A CSS class on the element to check for\n */\nconst hasClassAncestor = (targetEl, className) => {\n    let el = targetEl;\n    while (el && el instanceof HTMLElement) {\n        if (el.classList.contains(className)) {\n            return true;\n        }\n        el = el.parentNode;\n    }\n    return false;\n};\n\nexport type FlyoutProps = {\n    children: React.Node,\n    /**\n     * Set className to the overlay wrapper\n     */\n    className?: string,\n    /**\n     * If set to true, closes the overlay on clicking buttons/links inside\n     * of it\n     */\n    closeOnClick?: boolean,\n    /**\n     * If set to true, closes the overlay on clicking outside of it\n     */\n    closeOnClickOutside?: boolean,\n    /**\n     * Function that will interrogate the click event to determine whether or not to close the overlay if closeOnClick is enabled\n     */\n    closeOnClickPredicate?: Function,\n    /**\n     * If set to true, closes the overlay when window loses focus\n     */\n    closeOnWindowBlur?: boolean,\n    /**\n     * Sets tether constrain to scrollParent\n     */\n    constrainToScrollParent?: boolean,\n    /**\n     * Sets tether constrain to window\n     */\n    constrainToWindow?: boolean,\n    /**\n     * Whether overlay should be visible by default\n     */\n    isVisibleByDefault: boolean,\n    /**\n     * Will fire this callback when the flyout should open\n     */\n    offset?: string,\n    /**\n     * Will fire this callback when the flyout should close\n     */\n    onClose?: Function,\n    /**\n     * Adjusts placement of the overlay (SEE http://tether.io/#options)\n     */\n    onOpen?: Function,\n    /**\n     * Whether overlay should open on hover\n     */\n    openOnHover?: boolean,\n    /**\n     * Time in milliseconds that the button should wait before opening and closing the flyout\n     */\n    openOnHoverDelayTimeout?: number,\n    /** An array of CSS classes for portaled elements in the overlay, used to check whether a click is inside the overlay */\n    portaledClasses: Array<string>,\n    /**\n     * Position of the overlay\n     */\n    position:\n        | 'bottom-center'\n        | 'bottom-left'\n        | 'bottom-right'\n        | 'middle-left'\n        | 'middle-right'\n        | 'top-center'\n        | 'top-left'\n        | 'top-right',\n    /**\n     * Prop whether to focus first focusable element or not\n     */\n    shouldDefaultFocus?: boolean,\n};\n\ntype State = {\n    isButtonClicked: boolean,\n    isVisible: boolean,\n};\n\ntype Props = FlyoutProps;\n\nclass Flyout extends React.Component<Props, State> {\n    static defaultProps = {\n        className: '',\n        closeOnClick: true,\n        closeOnClickOutside: true,\n        closeOnWindowBlur: false,\n        constrainToScrollParent: true,\n        constrainToWindow: false,\n        isVisibleByDefault: false,\n        openOnHover: false,\n        openOnHoverDelayTimeout: 300,\n        portaledClasses: [],\n        position: BOTTOM_RIGHT,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.overlayID = uniqueId('overlay');\n        this.overlayButtonID = uniqueId('flyoutbutton');\n        this.state = {\n            isVisible: props.isVisibleByDefault,\n            isButtonClicked: false,\n        };\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        if (!prevState.isVisible && this.state.isVisible) {\n            const { closeOnClickOutside, closeOnWindowBlur } = this.props;\n            // When overlay is being opened\n            if (closeOnClickOutside) {\n                document.addEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n                document.addEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n            }\n            if (closeOnWindowBlur) {\n                window.addEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n            }\n        } else if (prevState.isVisible && !this.state.isVisible) {\n            // When overlay is being closed\n            document.removeEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n            document.removeEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n            window.removeEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.state.isVisible) {\n            // Clean-up global click handlers\n            document.removeEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n            document.removeEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n            window.removeEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n        }\n\n        if (this.props.openOnHover && this.hoverDelay) {\n            clearTimeout(this.hoverDelay);\n        }\n    }\n\n    overlayButtonID: string;\n\n    overlayID: string;\n\n    handleOverlayClick = (event: SyntheticEvent<>) => {\n        const overlayNode = document.getElementById(this.overlayID);\n        const { closeOnClick, closeOnClickPredicate } = this.props;\n        if (!closeOnClick || !hasClickableAncestor(overlayNode, event.target)) {\n            return;\n        }\n        if (closeOnClickPredicate && !closeOnClickPredicate(event)) {\n            return;\n        }\n\n        this.handleOverlayClose();\n    };\n\n    handleButtonClick = (event: SyntheticUIEvent<>) => {\n        const { isVisible } = this.state;\n        if (isVisible) {\n            this.closeOverlay();\n        } else {\n            this.openOverlay();\n        }\n\n        // If button was clicked, the detail field should hold number of clicks.\n        // If number is zero, the event was synthesized.\n        // https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n        const isButtonClicked = event.detail > 0;\n\n        this.setState({ isButtonClicked });\n\n        event.preventDefault();\n    };\n\n    hoverDelay: TimeoutID | void;\n\n    handleButtonHover = () => {\n        const { openOnHover, openOnHoverDelayTimeout } = this.props;\n        if (openOnHover) {\n            clearTimeout(this.hoverDelay);\n\n            this.hoverDelay = setTimeout(() => {\n                this.openOverlay();\n            }, openOnHoverDelayTimeout);\n        }\n    };\n\n    handleButtonHoverLeave = () => {\n        const { openOnHover, openOnHoverDelayTimeout } = this.props;\n        if (openOnHover) {\n            clearTimeout(this.hoverDelay);\n\n            this.hoverDelay = setTimeout(() => {\n                this.closeOverlay();\n            }, openOnHoverDelayTimeout);\n        }\n    };\n\n    openOverlay = () => {\n        this.setState({\n            isVisible: true,\n        });\n\n        const { onOpen } = this.props;\n        if (onOpen) {\n            onOpen();\n        }\n    };\n\n    closeOverlay = () => {\n        this.setState({\n            isVisible: false,\n        });\n\n        const { onClose } = this.props;\n        if (onClose) {\n            onClose();\n        }\n    };\n\n    focusButton = () => {\n        const buttonEl = document.getElementById(this.overlayButtonID);\n        if (buttonEl) {\n            buttonEl.focus();\n        }\n    };\n\n    handleOverlayClose = () => {\n        this.focusButton();\n        this.closeOverlay();\n    };\n\n    handleDocumentClickOrWindowBlur = (event: MouseEvent | FocusEvent) => {\n        const { portaledClasses, closeOnClickOutside, closeOnWindowBlur } = this.props;\n        const { isVisible } = this.state;\n\n        if (!isVisible || !(closeOnClickOutside || closeOnWindowBlur)) {\n            return;\n        }\n\n        const overlayNode = document.getElementById(this.overlayID);\n        const buttonNode = document.getElementById(this.overlayButtonID);\n\n        const isInsideToggleButton =\n            (buttonNode && event.target instanceof Node && buttonNode.contains(event.target)) ||\n            buttonNode === event.target;\n        const isInsideOverlay =\n            (overlayNode && event.target instanceof Node && overlayNode.contains(event.target)) ||\n            overlayNode === event.target;\n        const isInside = isInsideToggleButton || isInsideOverlay;\n\n        if (isInside || portaledClasses.some(className => hasClassAncestor(event.target, className))) {\n            return;\n        }\n\n        // Only close overlay when the click is outside of the flyout or window loses focus\n        this.closeOverlay();\n    };\n\n    render() {\n        const {\n            children,\n            className = '',\n            constrainToScrollParent,\n            constrainToWindow,\n            offset,\n            openOnHover,\n            position,\n            shouldDefaultFocus,\n        } = this.props;\n        const { isButtonClicked, isVisible } = this.state;\n        const elements = React.Children.toArray(children);\n        const tetherPosition = positions[position];\n\n        if (elements.length !== 2) {\n            throw new Error('Flyout must have exactly two children: A button component and a <Overlay>');\n        }\n\n        const overlayButton = elements[0];\n        const overlayContent = elements[1];\n\n        const overlayButtonProps: Object = {\n            id: this.overlayButtonID,\n            key: this.overlayButtonID,\n            role: 'button',\n            onClick: this.handleButtonClick,\n            onMouseEnter: this.handleButtonHover,\n            onMouseLeave: this.handleButtonHoverLeave,\n            'aria-haspopup': 'true',\n            'aria-expanded': isVisible ? 'true' : 'false',\n        };\n\n        if (isVisible) {\n            overlayButtonProps['aria-controls'] = this.overlayID;\n        }\n\n        const overlayProps = {\n            id: this.overlayID,\n            key: this.overlayID,\n            role: 'dialog',\n            onClick: this.handleOverlayClick,\n            onClose: this.handleOverlayClose,\n            onMouseEnter: this.handleButtonHover,\n            onMouseLeave: this.handleButtonHoverLeave,\n            shouldDefaultFocus: shouldDefaultFocus || (!isButtonClicked && !openOnHover),\n            'aria-labelledby': this.overlayButtonID,\n        };\n\n        const constraints = [];\n\n        if (constrainToScrollParent) {\n            constraints.push({\n                to: 'scrollParent',\n                attachment: 'together',\n            });\n        }\n\n        if (constrainToWindow) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n            });\n        }\n\n        const tetherProps: Object = {\n            classPrefix: 'flyout-overlay',\n            attachment: tetherPosition.attachment,\n            targetAttachment: tetherPosition.targetAttachment,\n            enabled: isVisible,\n            classes: {\n                element: `flyout-overlay ${className}`,\n            },\n            constraints,\n        };\n\n        if (offset) {\n            tetherProps.offset = offset;\n        } else {\n            switch (position) {\n                case BOTTOM_CENTER:\n                case BOTTOM_LEFT:\n                case BOTTOM_RIGHT:\n                    tetherProps.offset = '-10px 0';\n                    break;\n                case TOP_CENTER:\n                case TOP_LEFT:\n                case TOP_RIGHT:\n                    tetherProps.offset = '10px 0';\n                    break;\n                case MIDDLE_LEFT:\n                    tetherProps.offset = '0 10px';\n                    break;\n                case MIDDLE_RIGHT:\n                    tetherProps.offset = '0 -10px';\n                    break;\n                default:\n                // no default\n            }\n        }\n\n        return (\n            <TetherComponent {...tetherProps}>\n                {React.cloneElement(overlayButton, overlayButtonProps)}\n                {isVisible ? React.cloneElement(overlayContent, overlayProps) : null}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default Flyout;\n"]},"metadata":{},"sourceType":"module"}