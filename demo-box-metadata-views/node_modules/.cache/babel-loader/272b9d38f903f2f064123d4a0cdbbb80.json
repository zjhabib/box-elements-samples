{"ast":null,"code":"/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n    rowData = _ref.rowData;\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","map":{"version":3,"names":["defaultCellDataGetter","_ref","dataKey","rowData","get","bpfrpt_proptype_CellDataGetterParams"],"sources":["/Users/zhabib/Documents/GitHub/box-elements-samples/demo-box-metadata-views/node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js"],"sourcesContent":["/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,qBAAqBA,CAACC,IAAI,EAAE;EAClD,IAAIC,OAAO,GAAGD,IAAI,CAACC,OAAO;IACtBC,OAAO,GAAGF,IAAI,CAACE,OAAO;EAE1B,IAAI,OAAOA,OAAO,CAACC,GAAG,KAAK,UAAU,EAAE;IACrC,OAAOD,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EAC7B,CAAC,MAAM;IACL,OAAOC,OAAO,CAACD,OAAO,CAAC;EACzB;AACF;AACA,SAASG,oCAAoC,QAAQ,SAAS"},"metadata":{},"sourceType":"module"}