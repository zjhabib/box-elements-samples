{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport IconEye from '../../icons/general/IconEye';\nimport IconComment from '../../icons/general/IconComment';\nimport IconDownloadSolid from '../../icons/general/IconDownloadSolid';\nimport IconPencilSolid from '../../icons/general/IconPencilSolid';\nimport messages from './messages';\nimport './AccessStatsItem.scss';\nvar statsAttributesTable = {\n  preview: {\n    icon: IconEye,\n    message: messages.accessStatsPreviews\n  },\n  view: {\n    icon: IconEye,\n    message: messages.accessStatsViews\n  },\n  download: {\n    icon: IconDownloadSolid,\n    message: messages.accessStatsDownloads\n  },\n  comment: {\n    icon: IconComment,\n    message: messages.accessStatsComments\n  },\n  edit: {\n    icon: IconPencilSolid,\n    message: messages.accessStatsEdits\n  }\n};\nvar ICON_COLOR = '#2a62b9';\nvar ITEM_CONTENT_CLASS_NAME = 'access-stats-item-content';\nvar AccessStatsItem = function AccessStatsItem(_ref) {\n  var type = _ref.type,\n    _ref$count = _ref.count,\n    count = _ref$count === void 0 ? 0 : _ref$count,\n    _ref$hasCountOverflow = _ref.hasCountOverflowed,\n    hasCountOverflowed = _ref$hasCountOverflow === void 0 ? false : _ref$hasCountOverflow,\n    openAccessStatsModal = _ref.openAccessStatsModal,\n    statButtonProps = _ref.statButtonProps;\n  var statAttributes = statsAttributesTable[type];\n  var IconComponent = statAttributes.icon;\n  var labelMessage = statAttributes.message;\n  var itemContent = React.createElement(React.Fragment, null, React.createElement(IconComponent, {\n    color: ICON_COLOR,\n    height: 10,\n    width: 14\n  }), React.createElement(\"span\", {\n    className: \"access-stats-label\"\n  }, React.createElement(FormattedMessage, labelMessage)), React.createElement(FormattedNumber, {\n    value: count\n  }), hasCountOverflowed && '+');\n  return React.createElement(\"li\", {\n    className: \"access-stats-item\"\n  }, openAccessStatsModal ? React.createElement(PlainButton, _extends({\n    className: ITEM_CONTENT_CLASS_NAME,\n    onClick: openAccessStatsModal\n  }, statButtonProps), itemContent) : React.createElement(\"span\", {\n    className: ITEM_CONTENT_CLASS_NAME\n  }, itemContent));\n};\nexport default AccessStatsItem;","map":{"version":3,"sources":["../../../src/features/access-stats/AccessStatsItem.js"],"names":["React","FormattedMessage","FormattedNumber","PlainButton","IconEye","IconComment","IconDownloadSolid","IconPencilSolid","messages","statsAttributesTable","preview","icon","message","accessStatsPreviews","view","accessStatsViews","download","accessStatsDownloads","comment","accessStatsComments","edit","accessStatsEdits","ICON_COLOR","ITEM_CONTENT_CLASS_NAME","AccessStatsItem","type","count","hasCountOverflowed","openAccessStatsModal","statButtonProps","statAttributes","IconComponent","labelMessage","itemContent"],"mappings":";;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,YAAlD;AAEA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,wBAAP;AAEA,IAAMC,oBAAoB,GAAG;EACzBC,OAAO,EAAE;IACLC,IAAI,EAAEP,OADD;IAELQ,OAAO,EAAEJ,QAAQ,CAACK;EAFb,CADgB;EAKzBC,IAAI,EAAE;IACFH,IAAI,EAAEP,OADJ;IAEFQ,OAAO,EAAEJ,QAAQ,CAACO;EAFhB,CALmB;EASzBC,QAAQ,EAAE;IACNL,IAAI,EAAEL,iBADA;IAENM,OAAO,EAAEJ,QAAQ,CAACS;EAFZ,CATe;EAazBC,OAAO,EAAE;IACLP,IAAI,EAAEN,WADD;IAELO,OAAO,EAAEJ,QAAQ,CAACW;EAFb,CAbgB;EAiBzBC,IAAI,EAAE;IACFT,IAAI,EAAEJ,eADJ;IAEFK,OAAO,EAAEJ,QAAQ,CAACa;EAFhB;AAjBmB,CAA7B;AAsBA,IAAMC,UAAU,GAAG,SAAnB;AACA,IAAMC,uBAAuB,GAAG,2BAAhC;AAUA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAA,IAAA,EAMG;EAAA,IALvBC,IAKuB,GAAA,IAAA,CALvBA,IAKuB;IAAA,UAAA,GAAA,IAAA,CAJvBC,KAIuB;IAJvBA,KAIuB,GAAA,UAAA,KAAA,KAAA,CAAA,GAJf,CAIe,GAAA,UAAA;IAAA,qBAAA,GAAA,IAAA,CAHvBC,kBAGuB;IAHvBA,kBAGuB,GAAA,qBAAA,KAAA,KAAA,CAAA,GAHF,KAGE,GAAA,qBAAA;IAFvBC,oBAEuB,GAAA,IAAA,CAFvBA,oBAEuB;IADvBC,eACuB,GAAA,IAAA,CADvBA,eACuB;EACvB,IAAMC,cAAc,GAAGrB,oBAAoB,CAACgB,IAAD,CAA3C;EACA,IAAMM,aAAa,GAAGD,cAAc,CAACnB,IAArC;EACA,IAAMqB,YAAY,GAAGF,cAAc,CAAClB,OAApC;EAEA,IAAMqB,WAAW,GACb,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA;IAAe,KAAK,EAAEX,UAAtB;IAAkC,MAAM,EAAE,EAA1C;IAA8C,KAAK,EAAE;EAArD,CAAA,CADJ,EAEI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAC;EAAhB,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAsBU,YAAtB,CADJ,CAFJ,EAKI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA;IAAiB,KAAK,EAAEN;EAAxB,CAAA,CALJ,EAMKC,kBAAkB,IAAI,GAN3B,CADJ;EAWA,OACI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IAAI,SAAS,EAAC;EAAd,CAAA,EACKC,oBAAoB,GACjB,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA,QAAA,CAAA;IAAa,SAAS,EAAEL,uBAAxB;IAAiD,OAAO,EAAEK;EAA1D,CAAA,EAAoFC,eAApF,CAAA,EACKI,WADL,CADiB,GAKjB,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAEV;EAAjB,CAAA,EAA2CU,WAA3C,CANR,CADJ;AAWH,CAjCD;AAmCA,eAAeT,eAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport IconEye from '../../icons/general/IconEye';\nimport IconComment from '../../icons/general/IconComment';\nimport IconDownloadSolid from '../../icons/general/IconDownloadSolid';\nimport IconPencilSolid from '../../icons/general/IconPencilSolid';\n\nimport messages from './messages';\n\nimport './AccessStatsItem.scss';\n\nconst statsAttributesTable = {\n    preview: {\n        icon: IconEye,\n        message: messages.accessStatsPreviews,\n    },\n    view: {\n        icon: IconEye,\n        message: messages.accessStatsViews,\n    },\n    download: {\n        icon: IconDownloadSolid,\n        message: messages.accessStatsDownloads,\n    },\n    comment: {\n        icon: IconComment,\n        message: messages.accessStatsComments,\n    },\n    edit: {\n        icon: IconPencilSolid,\n        message: messages.accessStatsEdits,\n    },\n};\nconst ICON_COLOR = '#2a62b9';\nconst ITEM_CONTENT_CLASS_NAME = 'access-stats-item-content';\n\ntype AccessStatsItemType = {\n    count: number,\n    hasCountOverflowed?: boolean,\n    openAccessStatsModal?: Function,\n    statButtonProps: Object,\n    type: $Keys<typeof statsAttributesTable>,\n};\n\nconst AccessStatsItem = ({\n    type,\n    count = 0,\n    hasCountOverflowed = false,\n    openAccessStatsModal,\n    statButtonProps,\n}: AccessStatsItemType) => {\n    const statAttributes = statsAttributesTable[type];\n    const IconComponent = statAttributes.icon;\n    const labelMessage = statAttributes.message;\n\n    const itemContent = (\n        <>\n            <IconComponent color={ICON_COLOR} height={10} width={14} />\n            <span className=\"access-stats-label\">\n                <FormattedMessage {...labelMessage} />\n            </span>\n            <FormattedNumber value={count} />\n            {hasCountOverflowed && '+'}\n        </>\n    );\n\n    return (\n        <li className=\"access-stats-item\">\n            {openAccessStatsModal ? (\n                <PlainButton className={ITEM_CONTENT_CLASS_NAME} onClick={openAccessStatsModal} {...statButtonProps}>\n                    {itemContent}\n                </PlainButton>\n            ) : (\n                <span className={ITEM_CONTENT_CLASS_NAME}>{itemContent}</span>\n            )}\n        </li>\n    );\n};\n\nexport default AccessStatsItem;\n"]},"metadata":{},"sourceType":"module"}