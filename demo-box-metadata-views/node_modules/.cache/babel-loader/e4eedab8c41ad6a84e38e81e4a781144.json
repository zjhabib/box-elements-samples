{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport CustomNewField from './CustomInstanceNewField';\nimport CustomMetadataField from '../metadata-instance-fields/CustomMetadataField';\nimport EmptyContent from './EmptyContent';\nimport { FIELD_TYPE_STRING } from '../metadata-instance-fields/constants';\nvar CustomInstance = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CustomInstance, _React$PureComponent);\n  _createClass(CustomInstance, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref, _ref2) {\n      var data = _ref.data;\n      var properties = _ref2.properties;\n      if (!isEqual(data, properties)) {\n        return {\n          properties: _objectSpread({}, data)\n        };\n      }\n      return null;\n    }\n  }]);\n  function CustomInstance(props) {\n    var _this;\n    _classCallCheck(this, CustomInstance);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomInstance).call(this, props));\n    _defineProperty(_assertThisInitialized(_this), \"onFieldChange\", function (key, value) {\n      var _this$props = _this.props,\n        canEdit = _this$props.canEdit,\n        onFieldChange = _this$props.onFieldChange;\n      if (canEdit && onFieldChange) {\n        onFieldChange(key, value, FIELD_TYPE_STRING);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onFieldRemove\", function (key) {\n      var _this$props2 = _this.props,\n        canEdit = _this$props2.canEdit,\n        onFieldRemove = _this$props2.onFieldRemove;\n      if (canEdit && onFieldRemove) {\n        onFieldRemove(key);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onAddFieldToggle\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isAddFieldVisible: !prevState.isAddFieldVisible\n        };\n      });\n    });\n    _this.state = {\n      isAddFieldVisible: false,\n      properties: _objectSpread({}, props.data)\n    };\n    return _this;\n  }\n  /**\n   * Adds/updates a new metadata key value pair\n   *\n   * @param {string} key - metadata key\n   * @param {string} value - metadata value\n   * @return {void}\n   */\n\n  _createClass(CustomInstance, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var canEdit = this.props.canEdit;\n      var _this$state = this.state,\n        isAddFieldVisible = _this$state.isAddFieldVisible,\n        properties = _this$state.properties;\n      var fields = Object.keys(properties);\n      var canAddFields = canEdit && (isAddFieldVisible || fields.length === 0);\n      return React.createElement(React.Fragment, null, fields.map(function (key, index) {\n        return React.createElement(CustomMetadataField, {\n          key: key,\n          canEdit: canEdit,\n          dataKey: key,\n          dataValue: properties[key],\n          isLast: !isAddFieldVisible && index === fields.length - 1,\n          onAdd: _this2.onAddFieldToggle,\n          onChange: _this2.onFieldChange,\n          onRemove: _this2.onFieldRemove\n        });\n      }), !canAddFields && fields.length === 0 && React.createElement(EmptyContent, null), canAddFields && React.createElement(CustomNewField, {\n        isCancellable: fields.length !== 0,\n        onAdd: this.onFieldChange,\n        onCancel: this.onAddFieldToggle,\n        properties: this.props.data\n      }));\n    }\n  }]);\n  return CustomInstance;\n}(React.PureComponent);\n_defineProperty(CustomInstance, \"defaultProps\", {\n  canEdit: true,\n  data: {}\n});\nexport default CustomInstance;","map":{"version":3,"sources":["../../../src/features/metadata-instance-editor/CustomInstance.js"],"names":["React","isEqual","CustomNewField","CustomMetadataField","EmptyContent","FIELD_TYPE_STRING","CustomInstance","PureComponent","canEdit","data","properties","props","state","isAddFieldVisible","key","value","onFieldChange","onFieldRemove","setState","prevState","fields","Object","keys","canAddFields","length","map","index","onAddFieldToggle"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\n\nimport CustomNewField from './CustomInstanceNewField';\nimport CustomMetadataField from '../metadata-instance-fields/CustomMetadataField';\nimport EmptyContent from './EmptyContent';\nimport { FIELD_TYPE_STRING } from '../metadata-instance-fields/constants';\nimport type { MetadataFieldValue, MetadataFields } from '../../common/types/metadata';\n\ntype Props = {\n    canEdit: boolean,\n    data: MetadataFields,\n    onFieldChange?: (key: string, value: MetadataFieldValue, type: string) => void,\n    onFieldRemove?: (key: string) => void,\n};\n\ntype State = {\n    isAddFieldVisible: boolean,\n    properties: MetadataFields,\n};\n\nclass CustomInstance extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        canEdit: true,\n        data: {},\n    };\n\n    static getDerivedStateFromProps({ data }: Props, { properties }: State): any {\n        if (!isEqual(data, properties)) {\n            return {\n                properties: { ...data },\n            };\n        }\n\n        return null;\n    }\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isAddFieldVisible: false,\n            properties: { ...props.data },\n        };\n    }\n\n    /**\n     * Adds/updates a new metadata key value pair\n     *\n     * @param {string} key - metadata key\n     * @param {string} value - metadata value\n     * @return {void}\n     */\n    onFieldChange = (key: string, value: MetadataFieldValue) => {\n        const { canEdit, onFieldChange }: Props = this.props;\n        if (canEdit && onFieldChange) {\n            onFieldChange(key, value, FIELD_TYPE_STRING);\n        }\n    };\n\n    /**\n     * Adds/updates a new metadata key value pair\n     *\n     * @param {string} key - metadata key\n     * @param {string} value - metadata value\n     * @return {void}\n     */\n    onFieldRemove = (key: string) => {\n        const { canEdit, onFieldRemove }: Props = this.props;\n        if (canEdit && onFieldRemove) {\n            onFieldRemove(key);\n        }\n    };\n\n    /**\n     * Shows the add new field field\n     *\n     * @return {void}\n     */\n    onAddFieldToggle = () => {\n        this.setState(prevState => ({\n            isAddFieldVisible: !prevState.isAddFieldVisible,\n        }));\n    };\n\n    render() {\n        const { canEdit }: Props = this.props;\n        const { isAddFieldVisible, properties }: State = this.state;\n        const fields = Object.keys(properties);\n        const canAddFields = canEdit && (isAddFieldVisible || fields.length === 0);\n\n        return (\n            <>\n                {fields.map((key, index) => (\n                    <CustomMetadataField\n                        key={key}\n                        canEdit={canEdit}\n                        dataKey={key}\n                        dataValue={properties[key]}\n                        isLast={!isAddFieldVisible && index === fields.length - 1}\n                        onAdd={this.onAddFieldToggle}\n                        onChange={this.onFieldChange}\n                        onRemove={this.onFieldRemove}\n                    />\n                ))}\n                {!canAddFields && fields.length === 0 && <EmptyContent />}\n                {canAddFields && (\n                    <CustomNewField\n                        isCancellable={fields.length !== 0}\n                        onAdd={this.onFieldChange}\n                        onCancel={this.onAddFieldToggle}\n                        properties={this.props.data}\n                    />\n                )}\n            </>\n        );\n    }\n}\n\nexport default CustomInstance;\n"]},"metadata":{},"sourceType":"module"}