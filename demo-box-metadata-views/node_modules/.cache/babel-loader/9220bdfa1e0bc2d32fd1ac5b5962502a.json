{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport Browser, { BROWSER_CONSTANTS } from './BrowserUtils';\nimport promiseOne from './promise';\nimport ActiveXChannel from './ActiveXChannel';\nimport Channel from './Channel';\nimport HTTPChannel from './HTTPChannel';\nimport SafariChannel from './SafariChannel';\nimport CONSTANTS from './constants';\nvar MIN_FIREFOX_VERSION_FOR_MIXED_CONTENT = 55;\nvar MIN_EDGE_16_VERSION_FOR_MIXED_CONTENT = '16.16299';\nvar MIN_EDGE_VERSION_FOR_MIXED_CONTENT = '17.17134';\nvar REQUEST_TIMEOUT_MS = 5000;\nvar boxToolsLogData;\nfunction createHTTPChannel(appName) {\n  var BOX_UNSECURE_LOCAL_BASE_URL = CONSTANTS.BOX_UNSECURE_LOCAL_BASE_URL,\n    CREATED_STATUS = CONSTANTS.CREATED_STATUS,\n    HTTP_CHANNEL_NAME = CONSTANTS.HTTP_CHANNEL_NAME;\n  boxToolsLogData.http_channel_status = CREATED_STATUS;\n  return new HTTPChannel(appName, BOX_UNSECURE_LOCAL_BASE_URL, HTTP_CHANNEL_NAME);\n}\nfunction createSafariChannel(appName) {\n  var CREATED_STATUS = CONSTANTS.CREATED_STATUS;\n  boxToolsLogData.safari_channel_status = CREATED_STATUS;\n  return new SafariChannel(appName);\n}\nfunction createActiveXChannel(appName) {\n  var CREATED_STATUS = CONSTANTS.CREATED_STATUS;\n  boxToolsLogData.activex_channel_status = CREATED_STATUS;\n  return new ActiveXChannel(appName, false);\n}\n/**\n * Returns an instance of the ActiveX Channel that runs commands in the ActiveX process synchronously.\n * This is required for running in certain embedded IE-based webviews.\n */\n\nfunction createSynchronousActiveXChannel(appName) {\n  var CREATED_STATUS = CONSTANTS.CREATED_STATUS;\n  boxToolsLogData.activex_channel_status = CREATED_STATUS;\n  return new ActiveXChannel(appName, true);\n}\n/**\n * Returns TRUE for MS Edge versions 17.17692+ OR\n * Returns TRUE for MS Edge version 16 greater than 16.16299\n * @returns {boolean}\n */\n\nfunction isSupportedMSEdgeVersion() {\n  var EDGE = BROWSER_CONSTANTS.EDGE;\n  return Browser.isMinBrowser(EDGE, MIN_EDGE_VERSION_FOR_MIXED_CONTENT) || Browser.isMinBrowser(EDGE, MIN_EDGE_16_VERSION_FOR_MIXED_CONTENT) && Browser.getVersion().startsWith('16.');\n}\nfunction isUnsupportedMSEdgeVersion() {\n  return Browser.isEdge() && !isSupportedMSEdgeVersion();\n}\nfunction isMixedContentAllowedOnLocalhost() {\n  var CHROME = BROWSER_CONSTANTS.CHROME,\n    FIREFOX = BROWSER_CONSTANTS.FIREFOX; // TODO can we do this with feature detection rather than sniffing?\n\n  return Browser.isMinBrowser(CHROME, 53) || Browser.isMinBrowser(FIREFOX, MIN_FIREFOX_VERSION_FOR_MIXED_CONTENT) || isSupportedMSEdgeVersion();\n}\nfunction isSupportedSafariVersion() {\n  return Browser.isMinBrowser(BROWSER_CONSTANTS.SAFARI, 10);\n}\nfunction isUnsupportedSafariVersion() {\n  return Browser.isSafari() && !isSupportedSafariVersion();\n}\n/**\n * @TODO: (2018-07-24) Rename this to isFirefoxWithoutMixedContentCapability\n * since we do not have an Extension planned for the Firefox versions below 55.\n */\n\nfunction isFirefoxWithExtensionsCapability() {\n  return Browser.isFirefox() && !Browser.isMinBrowser(BROWSER_CONSTANTS.FIREFOX, MIN_FIREFOX_VERSION_FOR_MIXED_CONTENT);\n}\n/**\n * Checks if the IE version is supported\n * @returns {boolean}\n */\n\nfunction isSupportedIEVersion() {\n  return Browser.isMinBrowser(BROWSER_CONSTANTS.IE, 11);\n}\n/**\n * Checks if the user is on IE 11 and has a specific ActiveXObject plugin loaded on the page\n */\n\nfunction isSupportedIEAndBoxToolsPluginAvailable() {\n  // Browser Plugins Support is the check for ActiveX-like plugins\n  return isSupportedIEVersion() && Browser.isIEAndSpecificBrowserPluginSupported(CONSTANTS.BOX_TOOLS_PLUGIN_NAME);\n}\n/**\n * Analyze the cause of Channel failure and return a rejected Promise with an error message\n */\n\nfunction comServerErrorGenerator(reject) {\n  var BOX_EDIT_NOT_SUPPORTED_ERROR = CONSTANTS.BOX_EDIT_NOT_SUPPORTED_ERROR,\n    BOX_EDIT_SAFARI_ERROR = CONSTANTS.BOX_EDIT_SAFARI_ERROR,\n    BOX_EDIT_UNINSTALLED_ERROR = CONSTANTS.BOX_EDIT_UNINSTALLED_ERROR,\n    BOX_EDIT_UPGRADE_BROWSER_ERROR = CONSTANTS.BOX_EDIT_UPGRADE_BROWSER_ERROR;\n  var errorMessageID = BOX_EDIT_NOT_SUPPORTED_ERROR;\n  if (isMixedContentAllowedOnLocalhost()) {\n    errorMessageID = BOX_EDIT_UNINSTALLED_ERROR;\n  } else if (isSupportedIEVersion()) {\n    errorMessageID = BOX_EDIT_UNINSTALLED_ERROR;\n  } else if (Browser.isFirefox() || Browser.isChrome() || isUnsupportedSafariVersion() || isUnsupportedMSEdgeVersion() // Show UPGRADE message when MS Edge support has been enabled\n  ) {\n    errorMessageID = BOX_EDIT_UPGRADE_BROWSER_ERROR;\n  } else if (isSupportedSafariVersion()) {\n    errorMessageID = BOX_EDIT_SAFARI_ERROR;\n  }\n  boxToolsLogData.error_message = errorMessageID;\n  return reject(new Error(errorMessageID));\n}\n/**\n * Default returns the timeout value of 5000ms, if a timeout is not passed.\n * When passed validates it to be a number and parse it to the lower integer value\n *\n * @param {number} [customTimeoutMS] optional field to override the timeout value passed in miliseconds\n * @returns {number}\n */\n\nfunction validateAndReturnBrowserToComServerTimeout(customTimeoutMS) {\n  var timeoutMS = REQUEST_TIMEOUT_MS; // validate timeout is a positive number\n\n  if (typeof customTimeoutMS === 'number' && customTimeoutMS >= 0) {\n    timeoutMS = Math.floor(customTimeoutMS);\n  }\n  return timeoutMS;\n}\n/**\n * Returns reduced timeout converted to seconds\n * We need to use a shortened timeout for the connection between local com server and application,\n * so that we will receive a message that that connection has timed out,\n * before the connection between the browser and the local com server itself times out.\n */\n\nfunction shortenAndReturnComServerToApplicationTimeout(browserToComServerTimeoutMS) {\n  var timeoutSec = +(browserToComServerTimeoutMS / 1000).toFixed(2);\n  if (browserToComServerTimeoutMS < 2) {\n    timeoutSec /= 2;\n  } else {\n    timeoutSec -= 1;\n  }\n  return timeoutSec;\n}\nfunction initBoxToolsLogData() {\n  var browserName = Browser.getName();\n  var browserVersion = Browser.getVersion();\n  var UNCREATED_STATUS = CONSTANTS.UNCREATED_STATUS;\n  boxToolsLogData = {\n    box_tools_version: null,\n    browser_name: browserName,\n    browser_version: browserVersion,\n    error_message: null,\n    installation_type: null,\n    http_channel_status: UNCREATED_STATUS,\n    https_channel_status: UNCREATED_STATUS,\n    activex_channel_status: UNCREATED_STATUS,\n    safari_channel_status: UNCREATED_STATUS\n  };\n}\nvar ComServerClient = /*#__PURE__*/\nfunction () {\n  function ComServerClient(appName) {\n    _classCallCheck(this, ComServerClient);\n    _defineProperty(this, \"isInitialized\", false);\n    this.channels = [];\n    this.isInitialized = true;\n    initBoxToolsLogData();\n    if (isMixedContentAllowedOnLocalhost()) {\n      this.channels.push(createHTTPChannel(appName));\n    } else if (isSupportedSafariVersion()) {\n      this.channels.push(createSafariChannel(appName));\n    } else if (isSupportedIEAndBoxToolsPluginAvailable()) {\n      this.channels.push(createActiveXChannel(appName));\n    } else if (isFirefoxWithExtensionsCapability() || isUnsupportedMSEdgeVersion()) {// @NOTE (2018-07-24) No Action - Trying all channels is not an option in this case\n      // @TODO (2018-07-24) Remove this empty case from here?\n    } else {\n      // @NOTE: (2018-01-16) Trying all channels in case of custom useragent\n      this.channels = this.channels.concat([createHTTPChannel(appName), createSafariChannel(appName), createSynchronousActiveXChannel(appName)]);\n    }\n  }\n  _createClass(ComServerClient, [{\n    key: \"getComServerStatus\",\n    value: function getComServerStatus(customTimeoutMS) {\n      var _this = this;\n      var ACTIVE_STATUS = CONSTANTS.ACTIVE_STATUS;\n      var browserToComServerTimeoutMS = validateAndReturnBrowserToComServerTimeout(customTimeoutMS);\n      var comServerToApplicationTimeoutSec = shortenAndReturnComServerToApplicationTimeout(browserToComServerTimeoutMS);\n      var shouldRejectPromiseDueToUnSupportedMSEdgeOrVersion = isUnsupportedMSEdgeVersion();\n      return new Promise(function (resolve, reject) {\n        if (shouldRejectPromiseDueToUnSupportedMSEdgeOrVersion) {\n          return comServerErrorGenerator.call(null, reject);\n        }\n        if (!_this.channels.length) {\n          return comServerErrorGenerator.call(null, reject);\n        }\n        return promiseOne(_this.channels.map(function (channel) {\n          return channel.getComServerStatus(browserToComServerTimeoutMS, comServerToApplicationTimeoutSec).then(function (res) {\n            _this.activeChannel = channel;\n            if (res) {\n              boxToolsLogData.installation_type = res.installation_type;\n              boxToolsLogData.box_tools_version = res.version;\n            }\n            boxToolsLogData[\"\".concat(channel.channelName, \"_status\")] = ACTIVE_STATUS;\n            return resolve(res);\n          });\n        })).catch(comServerErrorGenerator.bind(null, reject));\n      });\n    } // TODO isSynchronous? do we need it?\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(requestData, isSynchronous, customTimeoutMS) {\n      var _this2 = this;\n      var browserToComServerTimeoutMS = validateAndReturnBrowserToComServerTimeout(customTimeoutMS);\n      var comServerToApplicationTimeoutSec = shortenAndReturnComServerToApplicationTimeout(browserToComServerTimeoutMS);\n      if (this.activeChannel) {\n        return this.activeChannel.sendRequest(requestData, browserToComServerTimeoutMS, comServerToApplicationTimeoutSec);\n      }\n      return this.getComServerStatus().then(function () {\n        return _this2.activeChannel.sendRequest(requestData, browserToComServerTimeoutMS, comServerToApplicationTimeoutSec);\n      });\n    }\n  }, {\n    key: \"sendCommand\",\n    value: function sendCommand(data, customTimeoutMS) {\n      var _this3 = this;\n      var browserToComServerTimeoutMS = validateAndReturnBrowserToComServerTimeout(customTimeoutMS);\n      var comServerToApplicationTimeoutSec = shortenAndReturnComServerToApplicationTimeout(browserToComServerTimeoutMS);\n      if (this.activeChannel) {\n        return this.activeChannel.sendCommand(data, browserToComServerTimeoutMS, comServerToApplicationTimeoutSec);\n      }\n      return this.getComServerStatus().then(function () {\n        return _this3.activeChannel.sendCommand(data, browserToComServerTimeoutMS, comServerToApplicationTimeoutSec);\n      });\n    }\n  }]);\n  return ComServerClient;\n}();\nexport default ComServerClient;","map":{"version":3,"sources":["../../../src/api/box-edit/ComServerClient.js"],"names":["Browser","BROWSER_CONSTANTS","promiseOne","ActiveXChannel","Channel","HTTPChannel","SafariChannel","CONSTANTS","MIN_FIREFOX_VERSION_FOR_MIXED_CONTENT","MIN_EDGE_16_VERSION_FOR_MIXED_CONTENT","MIN_EDGE_VERSION_FOR_MIXED_CONTENT","REQUEST_TIMEOUT_MS","boxToolsLogData","createHTTPChannel","appName","BOX_UNSECURE_LOCAL_BASE_URL","CREATED_STATUS","HTTP_CHANNEL_NAME","http_channel_status","createSafariChannel","safari_channel_status","createActiveXChannel","activex_channel_status","createSynchronousActiveXChannel","isSupportedMSEdgeVersion","EDGE","isMinBrowser","getVersion","startsWith","isUnsupportedMSEdgeVersion","isEdge","isMixedContentAllowedOnLocalhost","CHROME","FIREFOX","isSupportedSafariVersion","SAFARI","isUnsupportedSafariVersion","isSafari","isFirefoxWithExtensionsCapability","isFirefox","isSupportedIEVersion","IE","isSupportedIEAndBoxToolsPluginAvailable","isIEAndSpecificBrowserPluginSupported","BOX_TOOLS_PLUGIN_NAME","comServerErrorGenerator","reject","BOX_EDIT_NOT_SUPPORTED_ERROR","BOX_EDIT_SAFARI_ERROR","BOX_EDIT_UNINSTALLED_ERROR","BOX_EDIT_UPGRADE_BROWSER_ERROR","errorMessageID","isChrome","error_message","Error","validateAndReturnBrowserToComServerTimeout","customTimeoutMS","timeoutMS","Math","floor","shortenAndReturnComServerToApplicationTimeout","browserToComServerTimeoutMS","timeoutSec","toFixed","initBoxToolsLogData","browserName","getName","browserVersion","UNCREATED_STATUS","box_tools_version","browser_name","browser_version","installation_type","https_channel_status","ComServerClient","channels","isInitialized","push","concat","ACTIVE_STATUS","comServerToApplicationTimeoutSec","shouldRejectPromiseDueToUnSupportedMSEdgeOrVersion","Promise","resolve","call","length","map","getComServerStatus","then","activeChannel","channel","res","version","channelName","catch","bind","requestData","isSynchronous","sendRequest","data","sendCommand"],"mappings":"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","sourcesContent":["// @flow\n\nimport Browser, { BROWSER_CONSTANTS } from './BrowserUtils';\n\nimport promiseOne from './promise';\nimport ActiveXChannel from './ActiveXChannel';\nimport Channel from './Channel';\nimport HTTPChannel from './HTTPChannel';\nimport SafariChannel from './SafariChannel';\nimport CONSTANTS from './constants';\n\nconst MIN_FIREFOX_VERSION_FOR_MIXED_CONTENT = 55;\nconst MIN_EDGE_16_VERSION_FOR_MIXED_CONTENT = '16.16299';\nconst MIN_EDGE_VERSION_FOR_MIXED_CONTENT = '17.17134';\nconst REQUEST_TIMEOUT_MS = 5000;\n\nlet boxToolsLogData: {\n    activex_channel_status: string,\n    box_tools_version: ?string,\n    browser_name: string,\n    browser_version: string,\n    error_message: ?string,\n    http_channel_status: string,\n    https_channel_status: string,\n    installation_type: ?string,\n    safari_channel_status: string,\n};\n\nfunction createHTTPChannel(appName: string): HTTPChannel {\n    const { BOX_UNSECURE_LOCAL_BASE_URL, CREATED_STATUS, HTTP_CHANNEL_NAME } = CONSTANTS;\n\n    boxToolsLogData.http_channel_status = CREATED_STATUS;\n\n    return new HTTPChannel(appName, BOX_UNSECURE_LOCAL_BASE_URL, HTTP_CHANNEL_NAME);\n}\n\nfunction createSafariChannel(appName: string): SafariChannel {\n    const { CREATED_STATUS } = CONSTANTS;\n\n    boxToolsLogData.safari_channel_status = CREATED_STATUS;\n\n    return new SafariChannel(appName);\n}\n\nfunction createActiveXChannel(appName: string): ActiveXChannel {\n    const { CREATED_STATUS } = CONSTANTS;\n\n    boxToolsLogData.activex_channel_status = CREATED_STATUS;\n\n    return new ActiveXChannel(appName, false);\n}\n\n/**\n * Returns an instance of the ActiveX Channel that runs commands in the ActiveX process synchronously.\n * This is required for running in certain embedded IE-based webviews.\n */\nfunction createSynchronousActiveXChannel(appName): ActiveXChannel {\n    const { CREATED_STATUS } = CONSTANTS;\n\n    boxToolsLogData.activex_channel_status = CREATED_STATUS;\n    return new ActiveXChannel(appName, true);\n}\n\n/**\n * Returns TRUE for MS Edge versions 17.17692+ OR\n * Returns TRUE for MS Edge version 16 greater than 16.16299\n * @returns {boolean}\n */\nfunction isSupportedMSEdgeVersion() {\n    const { EDGE } = BROWSER_CONSTANTS;\n    return (\n        Browser.isMinBrowser(EDGE, MIN_EDGE_VERSION_FOR_MIXED_CONTENT) ||\n        (Browser.isMinBrowser(EDGE, MIN_EDGE_16_VERSION_FOR_MIXED_CONTENT) && Browser.getVersion().startsWith('16.'))\n    );\n}\n\nfunction isUnsupportedMSEdgeVersion() {\n    return Browser.isEdge() && !isSupportedMSEdgeVersion();\n}\n\nfunction isMixedContentAllowedOnLocalhost() {\n    const { CHROME, FIREFOX } = BROWSER_CONSTANTS;\n    // TODO can we do this with feature detection rather than sniffing?\n    return (\n        Browser.isMinBrowser(CHROME, 53) ||\n        Browser.isMinBrowser(FIREFOX, MIN_FIREFOX_VERSION_FOR_MIXED_CONTENT) ||\n        isSupportedMSEdgeVersion()\n    );\n}\n\nfunction isSupportedSafariVersion() {\n    return Browser.isMinBrowser(BROWSER_CONSTANTS.SAFARI, 10);\n}\n\nfunction isUnsupportedSafariVersion() {\n    return Browser.isSafari() && !isSupportedSafariVersion();\n}\n\n/**\n * @TODO: (2018-07-24) Rename this to isFirefoxWithoutMixedContentCapability\n * since we do not have an Extension planned for the Firefox versions below 55.\n */\nfunction isFirefoxWithExtensionsCapability() {\n    return (\n        Browser.isFirefox() && !Browser.isMinBrowser(BROWSER_CONSTANTS.FIREFOX, MIN_FIREFOX_VERSION_FOR_MIXED_CONTENT)\n    );\n}\n\n/**\n * Checks if the IE version is supported\n * @returns {boolean}\n */\nfunction isSupportedIEVersion() {\n    return Browser.isMinBrowser(BROWSER_CONSTANTS.IE, 11);\n}\n\n/**\n * Checks if the user is on IE 11 and has a specific ActiveXObject plugin loaded on the page\n */\nfunction isSupportedIEAndBoxToolsPluginAvailable() {\n    // Browser Plugins Support is the check for ActiveX-like plugins\n    return isSupportedIEVersion() && Browser.isIEAndSpecificBrowserPluginSupported(CONSTANTS.BOX_TOOLS_PLUGIN_NAME);\n}\n\n/**\n * Analyze the cause of Channel failure and return a rejected Promise with an error message\n */\nfunction comServerErrorGenerator(reject) {\n    const {\n        BOX_EDIT_NOT_SUPPORTED_ERROR,\n        BOX_EDIT_SAFARI_ERROR,\n        BOX_EDIT_UNINSTALLED_ERROR,\n        BOX_EDIT_UPGRADE_BROWSER_ERROR,\n    } = CONSTANTS;\n    let errorMessageID = BOX_EDIT_NOT_SUPPORTED_ERROR;\n\n    if (isMixedContentAllowedOnLocalhost()) {\n        errorMessageID = BOX_EDIT_UNINSTALLED_ERROR;\n    } else if (isSupportedIEVersion()) {\n        errorMessageID = BOX_EDIT_UNINSTALLED_ERROR;\n    } else if (\n        Browser.isFirefox() ||\n        Browser.isChrome() ||\n        isUnsupportedSafariVersion() ||\n        isUnsupportedMSEdgeVersion()\n        // Show UPGRADE message when MS Edge support has been enabled\n    ) {\n        errorMessageID = BOX_EDIT_UPGRADE_BROWSER_ERROR;\n    } else if (isSupportedSafariVersion()) {\n        errorMessageID = BOX_EDIT_SAFARI_ERROR;\n    }\n\n    boxToolsLogData.error_message = errorMessageID;\n    return reject(new Error(errorMessageID));\n}\n\n/**\n * Default returns the timeout value of 5000ms, if a timeout is not passed.\n * When passed validates it to be a number and parse it to the lower integer value\n *\n * @param {number} [customTimeoutMS] optional field to override the timeout value passed in miliseconds\n * @returns {number}\n */\nfunction validateAndReturnBrowserToComServerTimeout(customTimeoutMS) {\n    let timeoutMS = REQUEST_TIMEOUT_MS;\n\n    // validate timeout is a positive number\n    if (typeof customTimeoutMS === 'number' && customTimeoutMS >= 0) {\n        timeoutMS = Math.floor(customTimeoutMS);\n    }\n\n    return timeoutMS;\n}\n\n/**\n * Returns reduced timeout converted to seconds\n * We need to use a shortened timeout for the connection between local com server and application,\n * so that we will receive a message that that connection has timed out,\n * before the connection between the browser and the local com server itself times out.\n */\nfunction shortenAndReturnComServerToApplicationTimeout(browserToComServerTimeoutMS) {\n    let timeoutSec = +(browserToComServerTimeoutMS / 1000).toFixed(2);\n\n    if (browserToComServerTimeoutMS < 2) {\n        timeoutSec /= 2;\n    } else {\n        timeoutSec -= 1;\n    }\n\n    return timeoutSec;\n}\n\nfunction initBoxToolsLogData() {\n    const browserName = Browser.getName();\n    const browserVersion = Browser.getVersion();\n    const { UNCREATED_STATUS } = CONSTANTS;\n\n    boxToolsLogData = {\n        box_tools_version: null,\n        browser_name: browserName,\n        browser_version: browserVersion,\n        error_message: null,\n        installation_type: null,\n        http_channel_status: UNCREATED_STATUS,\n        https_channel_status: UNCREATED_STATUS,\n        activex_channel_status: UNCREATED_STATUS,\n        safari_channel_status: UNCREATED_STATUS,\n    };\n}\n\nclass ComServerClient {\n    activeChannel: Channel;\n\n    channels: Array<Channel>;\n\n    isInitialized: boolean = false;\n\n    browser: string;\n\n    constructor(appName: string) {\n        this.channels = [];\n\n        this.isInitialized = true;\n        initBoxToolsLogData();\n\n        if (isMixedContentAllowedOnLocalhost()) {\n            this.channels.push(createHTTPChannel(appName));\n        } else if (isSupportedSafariVersion()) {\n            this.channels.push(createSafariChannel(appName));\n        } else if (isSupportedIEAndBoxToolsPluginAvailable()) {\n            this.channels.push(createActiveXChannel(appName));\n        } else if (isFirefoxWithExtensionsCapability() || isUnsupportedMSEdgeVersion()) {\n            // @NOTE (2018-07-24) No Action - Trying all channels is not an option in this case\n            // @TODO (2018-07-24) Remove this empty case from here?\n        } else {\n            // @NOTE: (2018-01-16) Trying all channels in case of custom useragent\n            this.channels = this.channels.concat([\n                createHTTPChannel(appName),\n                createSafariChannel(appName),\n                createSynchronousActiveXChannel(appName),\n            ]);\n        }\n    }\n\n    getComServerStatus(customTimeoutMS: ?number): Promise<any> {\n        const { ACTIVE_STATUS } = CONSTANTS;\n\n        const browserToComServerTimeoutMS = validateAndReturnBrowserToComServerTimeout(customTimeoutMS);\n        const comServerToApplicationTimeoutSec = shortenAndReturnComServerToApplicationTimeout(\n            browserToComServerTimeoutMS,\n        );\n\n        const shouldRejectPromiseDueToUnSupportedMSEdgeOrVersion = isUnsupportedMSEdgeVersion();\n\n        return new Promise((resolve, reject) => {\n            if (shouldRejectPromiseDueToUnSupportedMSEdgeOrVersion) {\n                return comServerErrorGenerator.call(null, reject);\n            }\n\n            if (!this.channels.length) {\n                return comServerErrorGenerator.call(null, reject);\n            }\n\n            return promiseOne(\n                this.channels.map(channel => {\n                    return channel\n                        .getComServerStatus(browserToComServerTimeoutMS, comServerToApplicationTimeoutSec)\n                        .then(res => {\n                            this.activeChannel = channel;\n\n                            if (res) {\n                                boxToolsLogData.installation_type = res.installation_type;\n                                boxToolsLogData.box_tools_version = res.version;\n                            }\n\n                            boxToolsLogData[`${channel.channelName}_status`] = ACTIVE_STATUS;\n                            return resolve(res);\n                        });\n                }),\n            ).catch(comServerErrorGenerator.bind(null, reject));\n        });\n    }\n\n    // TODO isSynchronous? do we need it?\n    sendRequest(requestData: string, isSynchronous: ?boolean, customTimeoutMS: ?number): Object {\n        const browserToComServerTimeoutMS = validateAndReturnBrowserToComServerTimeout(customTimeoutMS);\n        const comServerToApplicationTimeoutSec = shortenAndReturnComServerToApplicationTimeout(\n            browserToComServerTimeoutMS,\n        );\n\n        if (this.activeChannel) {\n            return this.activeChannel.sendRequest(\n                requestData,\n                browserToComServerTimeoutMS,\n                comServerToApplicationTimeoutSec,\n            );\n        }\n\n        return this.getComServerStatus().then(() => {\n            return this.activeChannel.sendRequest(\n                requestData,\n                browserToComServerTimeoutMS,\n                comServerToApplicationTimeoutSec,\n            );\n        });\n    }\n\n    sendCommand(data: string, customTimeoutMS: number): Promise<any> {\n        const browserToComServerTimeoutMS = validateAndReturnBrowserToComServerTimeout(customTimeoutMS);\n        const comServerToApplicationTimeoutSec = shortenAndReturnComServerToApplicationTimeout(\n            browserToComServerTimeoutMS,\n        );\n\n        if (this.activeChannel) {\n            return this.activeChannel.sendCommand(data, browserToComServerTimeoutMS, comServerToApplicationTimeoutSec);\n        }\n\n        return this.getComServerStatus().then(() => {\n            return this.activeChannel.sendCommand(data, browserToComServerTimeoutMS, comServerToApplicationTimeoutSec);\n        });\n    }\n}\n\nexport default ComServerClient;\n"]},"metadata":{},"sourceType":"module"}