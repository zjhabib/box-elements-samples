{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * \n * @file Content Explorer Delete Confirmation Dialog\n * @author Box\n */\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { injectIntl } from 'react-intl';\nimport ContentUploader from '../../content-uploader';\nimport messages from '../messages';\nimport { CLASS_MODAL_CONTENT_FULL_BLEED, CLASS_MODAL_OVERLAY, CLASS_MODAL } from '../../../constants';\nvar UploadDialog = function UploadDialog(_ref) {\n  var isOpen = _ref.isOpen,\n    currentFolderId = _ref.currentFolderId,\n    token = _ref.token,\n    sharedLink = _ref.sharedLink,\n    sharedLinkPassword = _ref.sharedLinkPassword,\n    apiHost = _ref.apiHost,\n    uploadHost = _ref.uploadHost,\n    onClose = _ref.onClose,\n    parentElement = _ref.parentElement,\n    appElement = _ref.appElement,\n    onUpload = _ref.onUpload,\n    contentUploaderProps = _ref.contentUploaderProps,\n    requestInterceptor = _ref.requestInterceptor,\n    responseInterceptor = _ref.responseInterceptor,\n    intl = _ref.intl;\n  return React.createElement(Modal, {\n    appElement: appElement,\n    className: CLASS_MODAL_CONTENT_FULL_BLEED,\n    contentLabel: intl.formatMessage(messages.upload),\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    overlayClassName: CLASS_MODAL_OVERLAY,\n    parentSelector: function parentSelector() {\n      return parentElement;\n    },\n    portalClassName: \"\".concat(CLASS_MODAL, \" be-modal-upload\")\n  }, React.createElement(ContentUploader, _extends({}, contentUploaderProps, {\n    apiHost: apiHost,\n    onClose: onClose,\n    onComplete: onUpload,\n    requestInterceptor: requestInterceptor,\n    responseInterceptor: responseInterceptor,\n    rootFolderId: currentFolderId,\n    sharedLink: sharedLink,\n    sharedLinkPassword: sharedLinkPassword,\n    token: token,\n    uploadHost: uploadHost\n  })));\n};\nexport default injectIntl(UploadDialog);","map":{"version":3,"sources":["../../../../src/elements/common/upload-dialog/UploadDialog.js"],"names":["React","Modal","injectIntl","ContentUploader","messages","CLASS_MODAL_CONTENT_FULL_BLEED","CLASS_MODAL_OVERLAY","CLASS_MODAL","UploadDialog","isOpen","currentFolderId","token","sharedLink","sharedLinkPassword","apiHost","uploadHost","onClose","parentElement","appElement","onUpload","contentUploaderProps","requestInterceptor","responseInterceptor","intl","formatMessage","upload"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,8BAAT,EAAyCC,mBAAzC,EAA8DC,WAA9D,QAAiF,oBAAjF;AAoBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAAA;EAAA,IACjBC,MADiB,GAAA,IAAA,CACjBA,MADiB;IAEjBC,eAFiB,GAAA,IAAA,CAEjBA,eAFiB;IAGjBC,KAHiB,GAAA,IAAA,CAGjBA,KAHiB;IAIjBC,UAJiB,GAAA,IAAA,CAIjBA,UAJiB;IAKjBC,kBALiB,GAAA,IAAA,CAKjBA,kBALiB;IAMjBC,OANiB,GAAA,IAAA,CAMjBA,OANiB;IAOjBC,UAPiB,GAAA,IAAA,CAOjBA,UAPiB;IAQjBC,OARiB,GAAA,IAAA,CAQjBA,OARiB;IASjBC,aATiB,GAAA,IAAA,CASjBA,aATiB;IAUjBC,UAViB,GAAA,IAAA,CAUjBA,UAViB;IAWjBC,QAXiB,GAAA,IAAA,CAWjBA,QAXiB;IAYjBC,oBAZiB,GAAA,IAAA,CAYjBA,oBAZiB;IAajBC,kBAbiB,GAAA,IAAA,CAajBA,kBAbiB;IAcjBC,mBAdiB,GAAA,IAAA,CAcjBA,mBAdiB;IAejBC,IAfiB,GAAA,IAAA,CAejBA,IAfiB;EAAA,OAiBjB,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA;IACI,UAAU,EAAEL,UADhB;IAEI,SAAS,EAAEb,8BAFf;IAGI,YAAY,EAAEkB,IAAI,CAACC,aAALD,CAAmBnB,QAAQ,CAACqB,MAA5BF,CAHlB;IAII,MAAM,EAAEd,MAJZ;IAKI,cAAc,EAAEO,OALpB;IAMI,gBAAgB,EAAEV,mBANtB;IAOI,cAAc,EAAE,SAAA,cAAA,CAAA,EAAA;MAAA,OAAMW,aAAN;IAAA,CAPpB;IAQI,eAAe,EAAA,EAAA,CAAA,MAAA,CAAKV,WAAL,EAAA,kBAAA;EARnB,CAAA,EAUI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACQa,oBADR,EAAA;IAEI,OAAO,EAAEN,OAFb;IAGI,OAAO,EAAEE,OAHb;IAII,UAAU,EAAEG,QAJhB;IAKI,kBAAkB,EAAEE,kBALxB;IAMI,mBAAmB,EAAEC,mBANzB;IAOI,YAAY,EAAEZ,eAPlB;IAQI,UAAU,EAAEE,UARhB;IASI,kBAAkB,EAAEC,kBATxB;IAUI,KAAK,EAAEF,KAVX;IAWI,UAAU,EAAEI;EAXhB,CAAA,CAAA,CAVJ,CAjBiB;AAAA,CAArB;AA2CA,eAAeb,UAAU,CAACM,YAAD,CAAzB","sourcesContent":["/**\n * @flow\n * @file Content Explorer Delete Confirmation Dialog\n * @author Box\n */\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport ContentUploader from '../../content-uploader';\nimport messages from '../messages';\nimport { CLASS_MODAL_CONTENT_FULL_BLEED, CLASS_MODAL_OVERLAY, CLASS_MODAL } from '../../../constants';\nimport type { Token } from '../../../common/types/core';\n\ntype Props = {\n    apiHost: string,\n    appElement: HTMLElement,\n    contentUploaderProps: ContentUploaderProps,\n    currentFolderId: ?string,\n    isOpen: boolean,\n    onClose: Function,\n    onUpload?: Function,\n    parentElement: HTMLElement,\n    requestInterceptor?: Function,\n    responseInterceptor?: Function,\n    sharedLink?: string,\n    sharedLinkPassword?: string,\n    token: Token,\n    uploadHost: string,\n} & InjectIntlProvidedProps;\n\nconst UploadDialog = ({\n    isOpen,\n    currentFolderId,\n    token,\n    sharedLink,\n    sharedLinkPassword,\n    apiHost,\n    uploadHost,\n    onClose,\n    parentElement,\n    appElement,\n    onUpload,\n    contentUploaderProps,\n    requestInterceptor,\n    responseInterceptor,\n    intl,\n}: Props) => (\n    <Modal\n        appElement={appElement}\n        className={CLASS_MODAL_CONTENT_FULL_BLEED}\n        contentLabel={intl.formatMessage(messages.upload)}\n        isOpen={isOpen}\n        onRequestClose={onClose}\n        overlayClassName={CLASS_MODAL_OVERLAY}\n        parentSelector={() => parentElement}\n        portalClassName={`${CLASS_MODAL} be-modal-upload`}\n    >\n        <ContentUploader\n            {...contentUploaderProps}\n            apiHost={apiHost}\n            onClose={onClose}\n            onComplete={onUpload}\n            requestInterceptor={requestInterceptor}\n            responseInterceptor={responseInterceptor}\n            rootFolderId={currentFolderId}\n            sharedLink={sharedLink}\n            sharedLinkPassword={sharedLinkPassword}\n            token={token}\n            uploadHost={uploadHost}\n        />\n    </Modal>\n);\n\nexport default injectIntl(UploadDialog);\n"]},"metadata":{},"sourceType":"module"}