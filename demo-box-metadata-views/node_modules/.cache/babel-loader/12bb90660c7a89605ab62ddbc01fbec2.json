{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * \n * @file Faces Skill Card component\n * @author Box\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\nimport LoadingIndicatorWrapper from '../../../../components/loading-indicator/LoadingIndicatorWrapper';\nimport InlineError from '../../../../components/inline-error/InlineError';\nimport Tooltip from '../../../../components/tooltip/Tooltip';\nimport Button from '../../../../components/button/Button';\nimport IconEdit from '../../../../icons/general/IconEdit';\nimport messages from '../../../common/messages';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport Face from './Face';\nimport Timeline from '../timeline';\nimport './Faces.scss';\nvar Faces = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Faces, _React$PureComponent);\n\n  /**\n   * [constructor]\n   *\n   * @public\n   * @return {Faces}\n   */\n  function Faces(props) {\n    var _this;\n    _classCallCheck(this, Faces);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Faces).call(this, props));\n    _defineProperty(_assertThisInitialized(_this), \"toggleIsEditing\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isEditing: !prevState.isEditing\n        };\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onSelect\", function (face) {\n      var selected = _this.state.selected;\n      _this.setState({\n        selected: selected === face ? undefined : face\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onDelete\", function (face) {\n      var removes = _this.state.removes;\n      removes.push(face);\n      _this.setState({\n        removes: removes.slice(0)\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onSave\", function () {\n      var onSkillChange = _this.props.onSkillChange;\n      var removes = _this.state.removes;\n      _this.toggleIsEditing();\n      if (removes.length > 0) {\n        _this.setState({\n          isLoading: true\n        });\n        onSkillChange(removes);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onCancel\", function () {\n      _this.resetState(_this.props);\n    });\n    _this.state = {\n      faces: props.card.entries,\n      removes: [],\n      isEditing: props.hasError,\n      hasError: props.hasError,\n      isLoading: false\n    };\n    return _this;\n  }\n  /**\n   * Helper to reset the state\n   *\n   * @private\n   * @param {Object} props - component props\n   * @return {void}\n   */\n\n  _createClass(Faces, [{\n    key: \"resetState\",\n    value: function resetState(props) {\n      this.setState({\n        faces: props.card.entries,\n        removes: [],\n        isEditing: false,\n        selected: undefined,\n        hasError: false,\n        isLoading: false\n      });\n    }\n    /**\n     * Toggles the edit mode\n     *\n     * @private\n     * @return {void}\n     */\n  }, {\n    key: \"render\",\n    /**\n     * Renders the faces\n     *\n     * @private\n     * @return {void}\n     */\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        card = _this$props.card,\n        isEditable = _this$props.isEditable,\n        getViewer = _this$props.getViewer;\n      var _this$state = this.state,\n        selected = _this$state.selected,\n        faces = _this$state.faces,\n        removes = _this$state.removes,\n        isEditing = _this$state.isEditing,\n        hasError = _this$state.hasError,\n        isLoading = _this$state.isLoading;\n      var duration = card.duration;\n      var hasFaces = faces.length > 0;\n      var entries = faces.filter(function (face) {\n        return !removes.includes(face);\n      });\n      var editClassName = classNames('be-face-edit', {\n        'be-faces-is-editing': isEditing\n      });\n      return React.createElement(LoadingIndicatorWrapper, {\n        className: \"be-faces\",\n        isLoading: isLoading\n      }, hasFaces && isEditable && !isLoading && React.createElement(Tooltip, {\n        text: React.createElement(FormattedMessage, messages.editLabel)\n      }, React.createElement(PlainButton, {\n        className: editClassName,\n        \"data-resin-target\": SKILLS_TARGETS.FACES.EDIT,\n        onClick: this.toggleIsEditing,\n        type: \"button\"\n      }, React.createElement(IconEdit, null))), hasError && React.createElement(InlineError, {\n        title: React.createElement(FormattedMessage, messages.sidebarSkillsErrorTitle)\n      }, React.createElement(FormattedMessage, messages.sidebarSkillsErrorContent)), hasFaces ? entries.map(function (face, index) {\n        return (/* eslint-disable react/no-array-index-key */\n          React.createElement(Face, {\n            key: index,\n            face: face,\n            isEditing: isEditing,\n            onDelete: _this2.onDelete,\n            onSelect: _this2.onSelect,\n            selected: selected\n          })\n          /* eslint-enable react/no-array-index-key */\n        );\n      }) : React.createElement(FormattedMessage, messages.skillNoInfoFoundError), !!selected && !isEditing && Array.isArray(selected.appears) && selected.appears.length > 0 && React.createElement(Timeline, {\n        duration: duration,\n        getViewer: getViewer,\n        interactionTarget: SKILLS_TARGETS.FACES.TIMELINE,\n        timeslices: selected.appears\n      }), isEditing && React.createElement(\"div\", {\n        className: \"be-faces-buttons\"\n      }, React.createElement(Button, {\n        \"data-resin-target\": SKILLS_TARGETS.FACES.EDIT_CANCEL,\n        onClick: this.onCancel,\n        type: \"button\"\n      }, React.createElement(FormattedMessage, messages.cancel)), React.createElement(PrimaryButton, {\n        \"data-resin-target\": SKILLS_TARGETS.FACES.EDIT_SAVE,\n        onClick: this.onSave,\n        type: \"button\"\n      }, React.createElement(FormattedMessage, messages.save))));\n    }\n  }]);\n  return Faces;\n}(React.PureComponent);\nexport default Faces;","map":{"version":3,"sources":["../../../../../src/elements/content-sidebar/skills/faces/Faces.js"],"names":["React","FormattedMessage","classNames","PlainButton","PrimaryButton","LoadingIndicatorWrapper","InlineError","Tooltip","Button","IconEdit","messages","SKILLS_TARGETS","Face","Timeline","Faces","PureComponent","props","state","faces","card","entries","removes","isEditing","hasError","isLoading","setState","selected","undefined","prevState","face","push","slice","onSkillChange","toggleIsEditing","length","resetState","isEditable","getViewer","duration","hasFaces","filter","includes","editClassName","editLabel","FACES","EDIT","sidebarSkillsErrorTitle","sidebarSkillsErrorContent","map","index","onDelete","onSelect","skillNoInfoFoundError","Array","isArray","appears","TIMELINE","EDIT_CANCEL","onCancel","cancel","EDIT_SAVE","onSave","save"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Faces Skill Card component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\nimport LoadingIndicatorWrapper from '../../../../components/loading-indicator/LoadingIndicatorWrapper';\nimport InlineError from '../../../../components/inline-error/InlineError';\nimport Tooltip from '../../../../components/tooltip/Tooltip';\nimport Button from '../../../../components/button/Button';\nimport IconEdit from '../../../../icons/general/IconEdit';\nimport messages from '../../../common/messages';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport Face from './Face';\nimport Timeline from '../timeline';\nimport type { SkillCardEntry, SkillCard } from '../../../../common/types/skills';\nimport './Faces.scss';\n\ntype Props = {\n    card: SkillCard,\n    getViewer?: Function,\n    hasError: boolean,\n    isEditable: boolean,\n    onSkillChange: Function,\n};\n\ntype State = {\n    faces: Array<SkillCardEntry>,\n    hasError: boolean,\n    isEditing: boolean,\n    isLoading: boolean,\n    removes: Array<SkillCardEntry>,\n    selected?: SkillCardEntry,\n};\n\nclass Faces extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State;\n\n    /**\n     * [constructor]\n     *\n     * @public\n     * @return {Faces}\n     */\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            faces: props.card.entries,\n            removes: [],\n            isEditing: props.hasError,\n            hasError: props.hasError,\n            isLoading: false,\n        };\n    }\n\n    /**\n     * Helper to reset the state\n     *\n     * @private\n     * @param {Object} props - component props\n     * @return {void}\n     */\n    resetState(props: Props): void {\n        this.setState({\n            faces: props.card.entries,\n            removes: [],\n            isEditing: false,\n            selected: undefined,\n            hasError: false,\n            isLoading: false,\n        });\n    }\n\n    /**\n     * Toggles the edit mode\n     *\n     * @private\n     * @return {void}\n     */\n    toggleIsEditing = (): void => {\n        this.setState(prevState => ({\n            isEditing: !prevState.isEditing,\n        }));\n    };\n\n    /**\n     * Toggles face selection\n     *\n     * @private\n     * @return {void}\n     */\n    onSelect = (face: SkillCardEntry): void => {\n        const { selected } = this.state;\n        this.setState({\n            selected: selected === face ? undefined : face,\n        });\n    };\n\n    /**\n     * Deletes a face\n     *\n     * @private\n     * @return {void}\n     */\n    onDelete = (face: SkillCardEntry): void => {\n        const { removes } = this.state;\n        removes.push(face);\n        this.setState({ removes: removes.slice(0) });\n    };\n\n    /**\n     * Saves the new card data\n     *\n     * @private\n     * @return {void}\n     */\n    onSave = (): void => {\n        const { onSkillChange }: Props = this.props;\n        const { removes }: State = this.state;\n        this.toggleIsEditing();\n        if (removes.length > 0) {\n            this.setState({ isLoading: true });\n            onSkillChange(removes);\n        }\n    };\n\n    /**\n     * Cancels editing\n     *\n     * @private\n     * @return {void}\n     */\n    onCancel = (): void => {\n        this.resetState(this.props);\n    };\n\n    /**\n     * Renders the faces\n     *\n     * @private\n     * @return {void}\n     */\n    render() {\n        const { card, isEditable, getViewer }: Props = this.props;\n        const { selected, faces, removes, isEditing, hasError, isLoading }: State = this.state;\n        const { duration }: SkillCard = card;\n        const hasFaces = faces.length > 0;\n        const entries = faces.filter((face: SkillCardEntry) => !removes.includes(face));\n        const editClassName = classNames('be-face-edit', {\n            'be-faces-is-editing': isEditing,\n        });\n\n        return (\n            <LoadingIndicatorWrapper className=\"be-faces\" isLoading={isLoading}>\n                {hasFaces && isEditable && !isLoading && (\n                    <Tooltip text={<FormattedMessage {...messages.editLabel} />}>\n                        <PlainButton\n                            className={editClassName}\n                            data-resin-target={SKILLS_TARGETS.FACES.EDIT}\n                            onClick={this.toggleIsEditing}\n                            type=\"button\"\n                        >\n                            <IconEdit />\n                        </PlainButton>\n                    </Tooltip>\n                )}\n                {hasError && (\n                    <InlineError title={<FormattedMessage {...messages.sidebarSkillsErrorTitle} />}>\n                        <FormattedMessage {...messages.sidebarSkillsErrorContent} />\n                    </InlineError>\n                )}\n                {hasFaces ? (\n                    entries.map((face: SkillCardEntry, index: number) => (\n                        /* eslint-disable react/no-array-index-key */\n                        <Face\n                            key={index}\n                            face={face}\n                            isEditing={isEditing}\n                            onDelete={this.onDelete}\n                            onSelect={this.onSelect}\n                            selected={selected}\n                        />\n                        /* eslint-enable react/no-array-index-key */\n                    ))\n                ) : (\n                    <FormattedMessage {...messages.skillNoInfoFoundError} />\n                )}\n                {!!selected && !isEditing && Array.isArray(selected.appears) && selected.appears.length > 0 && (\n                    <Timeline\n                        duration={duration}\n                        getViewer={getViewer}\n                        interactionTarget={SKILLS_TARGETS.FACES.TIMELINE}\n                        timeslices={selected.appears}\n                    />\n                )}\n                {isEditing && (\n                    <div className=\"be-faces-buttons\">\n                        <Button\n                            data-resin-target={SKILLS_TARGETS.FACES.EDIT_CANCEL}\n                            onClick={this.onCancel}\n                            type=\"button\"\n                        >\n                            <FormattedMessage {...messages.cancel} />\n                        </Button>\n                        <PrimaryButton\n                            data-resin-target={SKILLS_TARGETS.FACES.EDIT_SAVE}\n                            onClick={this.onSave}\n                            type=\"button\"\n                        >\n                            <FormattedMessage {...messages.save} />\n                        </PrimaryButton>\n                    </div>\n                )}\n            </LoadingIndicatorWrapper>\n        );\n    }\n}\n\nexport default Faces;\n"]},"metadata":{},"sourceType":"module"}