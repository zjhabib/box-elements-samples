{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * \n * @file Decorates a component with logging methods\n * @author Box\n */\nimport * as React from 'react';\nimport Logger from './Logger';\nvar withLogger = function withLogger(source) {\n  return function (WrappedComponent) {\n    return React.forwardRef(function (props, ref) {\n      return React.createElement(Logger, _extends({}, props, {\n        source: source\n      }), React.createElement(WrappedComponent, {\n        ref: ref\n      }));\n    });\n  };\n};\nexport default withLogger;","map":{"version":3,"sources":["../../../../src/elements/common/logger/withLogger.js"],"names":["React","Logger","withLogger","source","WrappedComponent","forwardRef","props","ref"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;AAKA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAA;EAAA,OAA2B,UAACC,gBAAD,EAAA;IAAA,OAC1C,KAAK,CAACC,UAAN,CAAyC,UAACC,KAAD,EAAgBC,GAAhB,EAAA;MAAA,OACrC,KAAA,CAAA,aAAA,CAAC,MAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAYD,KAAZ,EAAA;QAAmB,MAAM,EAAEH;MAA3B,CAAA,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA;QAAkB,GAAG,EAAEI;MAAvB,CAAA,CADJ,CADqC;IAAA,CAAzC,CAD0C;EAAA,CAA3B;AAAA,CAAnB;AAOA,eAAeL,UAAf","sourcesContent":["/**\n * @flow\n * @file Decorates a component with logging methods\n * @author Box\n */\nimport * as React from 'react';\nimport Logger from './Logger';\nimport type { ElementOrigin } from '../flowTypes';\n\nconst withLogger = (source: ElementOrigin) => (WrappedComponent: React.ComponentType<any>) =>\n    React.forwardRef<Object, React.Ref<any>>((props: Object, ref: React.Ref<any>) => (\n        <Logger {...props} source={source}>\n            <WrappedComponent ref={ref} />\n        </Logger>\n    ));\n\nexport default withLogger;\n"]},"metadata":{},"sourceType":"module"}