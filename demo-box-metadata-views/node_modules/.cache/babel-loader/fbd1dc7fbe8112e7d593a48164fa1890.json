{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport { useOnClickBody } from '../utils';\nfunction withTargetedClickThrough(WrappedComponent) {\n  var WrapperComponent = function WrapperComponent(_ref) {\n    var children = _ref.children,\n      closeOnClickOutside = _ref.closeOnClickOutside,\n      shouldTarget = _ref.shouldTarget,\n      useTargetingApi = _ref.useTargetingApi,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"closeOnClickOutside\", \"shouldTarget\", \"useTargetingApi\"]);\n    var _useTargetingApi = useTargetingApi(),\n      canShow = _useTargetingApi.canShow,\n      onComplete = _useTargetingApi.onComplete,\n      onClose = _useTargetingApi.onClose,\n      onShow = _useTargetingApi.onShow;\n    var handleOnComplete = function handleOnComplete() {\n      if (shouldTarget && canShow) {\n        onComplete();\n      }\n    };\n    var shouldShow = shouldTarget && canShow;\n    useOnClickBody(onClose, !!(shouldShow && closeOnClickOutside));\n    if (shouldShow) {\n      onShow();\n    }\n    return React.createElement(WrappedComponent, _extends({\n      showCloseButton: true,\n      stopBubble: true\n    }, rest, {\n      isShown: shouldShow,\n      onDismiss: onClose\n    }), React.createElement(\"span\", {\n      className: \"bdl-targeted-click-through\",\n      \"data-targeting\": \"click-through\",\n      \"data-testid\": \"with-targeted-click-span\",\n      onClickCapture: handleOnComplete,\n      onKeyPressCapture: handleOnComplete,\n      role: \"button\",\n      tabIndex: -1\n    }, children));\n  };\n  WrapperComponent.displayName = \"withTargetedClickThrough(\".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component', \")\");\n  return WrapperComponent;\n}\nexport default withTargetedClickThrough;","map":{"version":3,"sources":["../../../../src/features/targeting/hocs/withTargetedClickThrough.js"],"names":["React","useOnClickBody","withTargetedClickThrough","WrappedComponent","WrapperComponent","children","closeOnClickOutside","shouldTarget","useTargetingApi","rest","canShow","onComplete","onClose","onShow","handleOnComplete","shouldShow","displayName","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,cAAT,QAA+B,UAA/B;AAGA,SAASC,wBAAT,CACIC,gBADJ,EAKI;EACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,IAAA,EASlB;IAAA,IARHC,QAQG,GAAA,IAAA,CARHA,QAQG;MAPHC,mBAOG,GAAA,IAAA,CAPHA,mBAOG;MANHC,YAMG,GAAA,IAAA,CANHA,YAMG;MALHC,eAKG,GAAA,IAAA,CALHA,eAKG;MAJAC,IAIA,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,iBAAA,CAAA,CAAA;IAAA,IAAA,gBAAA,GAC8CD,eAAe,CAAA,CAD7D;MACKE,OADL,GAAA,gBAAA,CACKA,OADL;MACcC,UADd,GAAA,gBAAA,CACcA,UADd;MAC0BC,OAD1B,GAAA,gBAAA,CAC0BA,OAD1B;MACmCC,MADnC,GAAA,gBAAA,CACmCA,MADnC;IAGH,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,EAAM;MAC3B,IAAIP,YAAY,IAAIG,OAApB,EAA6B;QACzBC,UAAU,CAAA,CAAA;MACb;IACJ,CAJD;IAMA,IAAMI,UAAU,GAAGR,YAAY,IAAIG,OAAnC;IAEAT,cAAc,CAACW,OAAD,EAAU,CAAC,EAAEG,UAAU,IAAIT,mBAAhB,CAAX,CAAdL;IAEA,IAAIc,UAAJ,EAAgB;MACZF,MAAM,CAAA,CAAA;IACT;IAED,OACI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,QAAA,CAAA;MAAkB,eAAe,EAAA,IAAjC;MAAkC,UAAU,EAAA;IAA5C,CAAA,EAAiDJ,IAAjD,EAAA;MAAuD,OAAO,EAAEM,UAAhE;MAA4E,SAAS,EAAEH;IAAvF,CAAA,CAAA,EACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;MACI,SAAS,EAAC,4BADd;MAEI,gBAAA,EAAe,eAFnB;MAGI,aAAA,EAAY,0BAHhB;MAII,cAAc,EAAEE,gBAJpB;MAKI,iBAAiB,EAAEA,gBALvB;MAMI,IAAI,EAAC,QANT;MAOI,QAAQ,EAAE,CAAC;IAPf,CAAA,EASKT,QATL,CADJ,CADJ;EAeH,CAzCD;EA2CAD,gBAAgB,CAACY,WAAjBZ,GAAAA,2BAAAA,CAAAA,MAAAA,CAA2DD,gBAAgB,CAACa,WAAjBb,IACvDA,gBAAgB,CAACc,IADsCd,IAEvD,WAFJC,EAAAA,GAAAA,CAAAA;EAIA,OAAOA,gBAAP;AACH;AAED,eAAeF,wBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport { useOnClickBody } from '../utils';\nimport { type TargetedComponentProps } from '../types';\n\nfunction withTargetedClickThrough<Config>(\n    WrappedComponent: React.ComponentType<Config>,\n): React.ComponentType<{|\n    ...Config,\n    ...$Exact<TargetedComponentProps>,\n|}> {\n    const WrapperComponent = ({\n        children,\n        closeOnClickOutside,\n        shouldTarget,\n        useTargetingApi,\n        ...rest\n    }: {|\n        ...Config,\n        ...$Exact<TargetedComponentProps>,\n    |}) => {\n        const { canShow, onComplete, onClose, onShow } = useTargetingApi();\n\n        const handleOnComplete = () => {\n            if (shouldTarget && canShow) {\n                onComplete();\n            }\n        };\n\n        const shouldShow = shouldTarget && canShow;\n\n        useOnClickBody(onClose, !!(shouldShow && closeOnClickOutside));\n\n        if (shouldShow) {\n            onShow();\n        }\n\n        return (\n            <WrappedComponent showCloseButton stopBubble {...rest} isShown={shouldShow} onDismiss={onClose}>\n                <span\n                    className=\"bdl-targeted-click-through\"\n                    data-targeting=\"click-through\"\n                    data-testid=\"with-targeted-click-span\"\n                    onClickCapture={handleOnComplete}\n                    onKeyPressCapture={handleOnComplete}\n                    role=\"button\"\n                    tabIndex={-1}\n                >\n                    {children}\n                </span>\n            </WrappedComponent>\n        );\n    };\n\n    WrapperComponent.displayName = `withTargetedClickThrough(${WrappedComponent.displayName ||\n        WrappedComponent.name ||\n        'Component'})`;\n\n    return WrapperComponent;\n}\n\nexport default withTargetedClickThrough;\n"]},"metadata":{},"sourceType":"module"}