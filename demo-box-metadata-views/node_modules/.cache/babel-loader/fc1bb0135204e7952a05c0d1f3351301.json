{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport TextInputPrimitive from './TextInput';\nvar TextInputField = function TextInputField(_ref) {\n  var field = _ref.field,\n    form = _ref.form,\n    innerRef = _ref.innerRef,\n    isRequired = _ref.isRequired,\n    rest = _objectWithoutProperties(_ref, [\"field\", \"form\", \"innerRef\", \"isRequired\"]);\n  var name = field.name;\n  var errors = form.errors,\n    touched = form.touched;\n  var isTouched = getProp(touched, name);\n  var error = isTouched ? getProp(errors, name) : null;\n  return React.createElement(TextInputPrimitive, _extends({}, field, rest, {\n    inputRef: innerRef,\n    error: error,\n    hideOptionalLabel: isRequired\n  }));\n};\nexport default TextInputField;","map":{"version":3,"sources":["../../../src/components/text-input/TextInputField.js"],"names":["React","getProp","TextInputPrimitive","TextInputField","field","form","innerRef","isRequired","rest","name","errors","touched","isTouched","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAGA,OAAOC,kBAAP,MAA+B,aAA/B;AAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAA2D;EAAA,IAAxDC,KAAwD,GAAA,IAAA,CAAxDA,KAAwD;IAAjDC,IAAiD,GAAA,IAAA,CAAjDA,IAAiD;IAA3CC,QAA2C,GAAA,IAAA,CAA3CA,QAA2C;IAAjCC,UAAiC,GAAA,IAAA,CAAjCA,UAAiC;IAAlBC,IAAkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,CAAA,CAAA;EAAA,IACtEC,IADsE,GAC7DL,KAD6D,CACtEK,IADsE;EAAA,IAEtEC,MAFsE,GAElDL,IAFkD,CAEtEK,MAFsE;IAE9DC,OAF8D,GAElDN,IAFkD,CAE9DM,OAF8D;EAG9E,IAAMC,SAAS,GAAGX,OAAO,CAACU,OAAD,EAAUF,IAAV,CAAzB;EACA,IAAMI,KAAK,GAAGD,SAAS,GAAGX,OAAO,CAACS,MAAD,EAASD,IAAT,CAAV,GAA2B,IAAlD;EACA,OAAO,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAwBL,KAAxB,EAAmCI,IAAnC,EAAA;IAAyC,QAAQ,EAAEF,QAAnD;IAA6D,KAAK,EAAEO,KAApE;IAA2E,iBAAiB,EAAEN;EAA9F,CAAA,CAAA,CAAP;AACH,CAND;AAQA,eAAeJ,cAAf","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport type { FieldProps } from 'formik';\n\nimport TextInputPrimitive from './TextInput';\nimport type { TextInputProps } from './TextInput';\n\ntype Props = TextInputProps & FieldProps & { innerRef?: (instance: any) => void };\n\nconst TextInputField = ({ field, form, innerRef, isRequired, ...rest }: Props) => {\n    const { name } = field;\n    const { errors, touched } = form;\n    const isTouched = getProp(touched, name);\n    const error = isTouched ? getProp(errors, name) : null;\n    return <TextInputPrimitive {...field} {...rest} inputRef={innerRef} error={error} hideOptionalLabel={isRequired} />;\n};\n\nexport default TextInputField;\n"]},"metadata":{},"sourceType":"module"}