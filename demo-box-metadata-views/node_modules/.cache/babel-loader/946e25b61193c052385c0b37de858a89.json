{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n  function MultiGrid(props, context) {\n    var _this;\n    _classCallCheck(this, MultiGrid);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n        rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n      var _this$props = _this.props,\n        cellRenderer = _this$props.cellRenderer,\n        fixedRowCount = _this$props.fixedRowCount,\n        rowCount = _this$props.rowCount;\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n        rowIndex = _ref2.rowIndex,\n        rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n      var _this$props2 = _this.props,\n        cellRenderer = _this$props2.cellRenderer,\n        fixedColumnCount = _this$props2.fixedColumnCount,\n        fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n        rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n      var _this$props3 = _this.props,\n        cellRenderer = _this$props3.cellRenderer,\n        columnCount = _this$props3.columnCount,\n        fixedColumnCount = _this$props3.fixedColumnCount;\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n        columnCount = _this$props4.columnCount,\n        fixedColumnCount = _this$props4.fixedColumnCount,\n        columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n        scrollbarSize = _this$state.scrollbarSize,\n        showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n        scrollTop = scrollInfo.scrollTop;\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n      var onScroll = _this.props.onScroll;\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n        size = _ref5.size,\n        vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n        showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n        showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n        fixedRowCount = _this$props5.fixedRowCount,\n        rowCount = _this$props5.rowCount,\n        rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n        scrollbarSize = _this$state3.scrollbarSize,\n        showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n      _fixedColumnCount = props.fixedColumnCount,\n      _fixedRowCount = props.fixedRowCount;\n    _this._maybeCalculateCachedStyles(true);\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n    return _this;\n  }\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref7$columnIndex = _ref7.columnIndex,\n        columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n        _ref7$rowIndex = _ref7.rowIndex,\n        rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref8$columnIndex = _ref8.columnIndex,\n        columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n        _ref8$rowIndex = _ref8.rowIndex,\n        rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n      var _this$props6 = this.props,\n        fixedColumnCount = _this$props6.fixedColumnCount,\n        fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n        scrollLeft = _this$props7.scrollLeft,\n        scrollTop = _this$props7.scrollTop;\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n        this.setState(newState);\n      }\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n        onScroll = _this$props8.onScroll,\n        onSectionRendered = _this$props8.onSectionRendered,\n        onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n        scrollLeftProp = _this$props8.scrollLeft,\n        scrollToColumn = _this$props8.scrollToColumn,\n        scrollTopProp = _this$props8.scrollTop,\n        scrollToRow = _this$props8.scrollToRow,\n        rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n      var _this$state4 = this.state,\n        scrollLeft = _this$state4.scrollLeft,\n        scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n      var topGridHeight = this._getTopGridHeight(props);\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n        columnWidth = props.columnWidth;\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n      var leftGridWidth = this._getLeftGridWidth(props);\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n        rowHeight = props.rowHeight;\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n        columnWidth = _this$props9.columnWidth,\n        enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n        enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n        height = _this$props9.height,\n        fixedColumnCount = _this$props9.fixedColumnCount,\n        fixedRowCount = _this$props9.fixedRowCount,\n        rowHeight = _this$props9.rowHeight,\n        style = _this$props9.style,\n        styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n        styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n        styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n        styleTopRightGrid = _this$props9.styleTopRightGrid,\n        width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n      this._maybeCalculateCachedStyles();\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        rowCount = props.rowCount,\n        hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n      if (!fixedColumnCount) {\n        return null;\n      }\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n        height = this._getBottomGridHeight(props),\n        width = this._getLeftGridWidth(props),\n        scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n        gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        rowCount = props.rowCount,\n        scrollToColumn = props.scrollToColumn,\n        scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount;\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n        enableFixedRowScroll = props.enableFixedRowScroll,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        scrollLeft = props.scrollLeft,\n        hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n        showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n        scrollbarSize = _this$state5.scrollbarSize;\n      if (!fixedRowCount) {\n        return null;\n      }\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n        height = this._getTopGridHeight(props),\n        width = this._getRightGridWidth(props),\n        additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n      var gridHeight = height,\n        style = this._topRightGridStyle;\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n      return null;\n    }\n  }]);\n  return MultiGrid;\n}(React.PureComponent);\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","map":{"version":3,"names":["_extends","_objectWithoutProperties","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","PropTypes","React","polyfill","CellMeasurerCacheDecorator","Grid","SCROLLBAR_SIZE_BUFFER","MultiGrid","_React$PureComponent","props","context","_this","call","scrollLeft","scrollTop","scrollbarSize","showHorizontalScrollbar","showVerticalScrollbar","ref","_bottomLeftGrid","_bottomRightGrid","_ref","rowIndex","rest","_this$props","cellRenderer","fixedRowCount","rowCount","createElement","style","height","parent","_ref2","columnIndex","_this$props2","fixedColumnCount","_ref3","_this$props3","columnCount","width","_ref4","index","_this$props4","columnWidth","_this$state","state","scrollInfo","setState","onScroll","_ref5","horizontal","size","vertical","_this$state2","onScrollbarPresenceChange","_onScroll","_ref6","_this$props5","rowHeight","_this$state3","_topLeftGrid","_topRightGrid","deferredMeasurementCache","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","cellMeasurerCache","columnIndexOffset","rowIndexOffset","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","value","forceUpdateGrids","forceUpdate","invalidateCellSizeAfterRender","_ref7","undefined","_ref7$columnIndex","_ref7$rowIndex","_deferredInvalidateColumnIndex","Math","min","_deferredInvalidateRowIndex","measureAllCells","recomputeGridSize","_ref8","_ref8$columnIndex","_ref8$rowIndex","_this$props6","adjustedColumnIndex","max","adjustedRowIndex","_leftGridWidth","_topGridHeight","componentDidMount","_this$props7","newState","_handleInvalidatedGridSize","componentDidUpdate","render","_this$props8","onSectionRendered","scrollLeftProp","scrollToColumn","scrollTopProp","scrollToRow","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getBottomGridHeight","topGridHeight","_getTopGridHeight","_getLeftGridWidth","leftGridWidth","_getRightGridWidth","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","overflow","position","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","left","overflowX","overflowY","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","top","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","className","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","tabIndex","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","getDerivedStateFromProps","nextProps","prevState","PureComponent","propTypes","process","env","NODE_ENV","string","isRequired","bool","number","func"],"sources":["/Users/zhabib/Documents/GitHub/box-elements-samples/demo-box-metadata-views/node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module"}