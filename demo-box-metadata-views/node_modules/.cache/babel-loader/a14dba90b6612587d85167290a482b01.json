{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n  function Table(props) {\n    var _this;\n    _classCallCheck(this, Table);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n        index = _ref.index;\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n            alignment: alignment,\n            rowIndex: index\n          }),\n          scrollTop = _this$Grid$getOffsetF.scrollTop;\n        return scrollTop;\n      }\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n        rowIndex = _ref2.rowIndex;\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$columnIndex = _ref3.columnIndex,\n        columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n        _ref3$rowIndex = _ref3.rowIndex,\n        rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        disableHeader = _this$props.disableHeader,\n        gridClassName = _this$props.gridClassName,\n        gridStyle = _this$props.gridStyle,\n        headerHeight = _this$props.headerHeight,\n        headerRowRenderer = _this$props.headerRowRenderer,\n        height = _this$props.height,\n        id = _this$props.id,\n        noRowsRenderer = _this$props.noRowsRenderer,\n        rowClassName = _this$props.rowClassName,\n        rowStyle = _this$props.rowStyle,\n        scrollToIndex = _this$props.scrollToIndex,\n        style = _this$props.style,\n        width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n        columnIndex = _ref4.columnIndex,\n        isScrolling = _ref4.isScrolling,\n        parent = _ref4.parent,\n        rowData = _ref4.rowData,\n        rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n        cellDataGetter = _column$props.cellDataGetter,\n        cellRenderer = _column$props.cellRenderer,\n        className = _column$props.className,\n        columnData = _column$props.columnData,\n        dataKey = _column$props.dataKey,\n        id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n        index = _ref5.index;\n      var _this$props2 = this.props,\n        headerClassName = _this$props2.headerClassName,\n        headerStyle = _this$props2.headerStyle,\n        onHeaderClick = _this$props2.onHeaderClick,\n        sort = _this$props2.sort,\n        sortBy = _this$props2.sortBy,\n        sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n        columnData = _column$props2.columnData,\n        dataKey = _column$props2.dataKey,\n        defaultSortDirection = _column$props2.defaultSortDirection,\n        disableSort = _column$props2.disableSort,\n        headerRenderer = _column$props2.headerRenderer,\n        id = _column$props2.id,\n        label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n      var index = _ref6.rowIndex,\n        isScrolling = _ref6.isScrolling,\n        key = _ref6.key,\n        parent = _ref6.parent,\n        style = _ref6.style;\n      var _this$props3 = this.props,\n        children = _this$props3.children,\n        onRowClick = _this$props3.onRowClick,\n        onRowDoubleClick = _this$props3.onRowDoubleClick,\n        onRowRightClick = _this$props3.onRowRightClick,\n        onRowMouseOver = _this$props3.onRowMouseOver,\n        onRowMouseOut = _this$props3.onRowMouseOut,\n        rowClassName = _this$props3.rowClassName,\n        rowGetter = _this$props3.rowGetter,\n        rowRenderer = _this$props3.rowRenderer,\n        rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n      var _this$props4 = this.props,\n        children = _this$props4.children,\n        disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n        scrollHeight = _ref7.scrollHeight,\n        scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n        rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n        rowStartIndex = _ref8.rowStartIndex,\n        rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n  return Table;\n}(React.PureComponent);\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n  /** Optional CSS class name */\n  className: PropTypes.string,\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n  /** Optional id */\n  id: PropTypes.string,\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n  /** Optional inline style */\n  style: PropTypes.object,\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","map":{"version":3,"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","clsx","Column","PropTypes","React","findDOMNode","Grid","accessibilityOverscanIndicesGetter","defaultRowRenderer","defaultHeaderRowRenderer","SortDirection","Table","_React$PureComponent","props","_this","call","state","scrollbarWidth","_createColumn","bind","_createRow","_onScroll","_onSectionRendered","_setRef","value","forceUpdateGrid","forceUpdate","getOffsetForRow","_ref","alignment","index","_this$Grid$getOffsetF","getOffsetForCell","rowIndex","scrollTop","invalidateCellSizeAfterRender","_ref2","columnIndex","measureAllRows","measureAllCells","recomputeGridSize","_ref3","undefined","_ref3$columnIndex","_ref3$rowIndex","recomputeRowHeights","scrollToPosition","scrollToRow","scrollToCell","getScrollbarWidth","_Grid","clientWidth","offsetWidth","componentDidMount","_setScrollbarWidth","componentDidUpdate","render","_this2","_this$props","children","className","disableHeader","gridClassName","gridStyle","headerHeight","headerRowRenderer","height","id","noRowsRenderer","rowClassName","rowStyle","scrollToIndex","style","width","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","Children","toArray","column","flexStyles","_getFlexStyleForColumn","overflow","createElement","rowCount","role","columns","_getHeaderColumns","paddingRight","autoContainerWidth","cellRenderer","columnWidth","columnCount","noContentRenderer","onScroll","onSectionRendered","ref","overflowX","_ref4","isScrolling","parent","rowData","onColumnClick","_column$props","cellDataGetter","columnData","dataKey","cellData","renderedCell","onClick","event","title","_createHeader","_ref5","_this$props2","headerClassName","headerStyle","onHeaderClick","sort","sortBy","sortDirection","_column$props2","defaultSortDirection","disableSort","headerRenderer","label","sortEnabled","classNames","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","isFirstTimeSort","newSortDirection","DESC","ASC","onKeyDown","tabIndex","_ref6","_this3","_this$props3","onRowClick","onRowDoubleClick","onRowRightClick","onRowMouseOver","onRowMouseOut","rowGetter","rowRenderer","map","flattenedStyle","_getRowHeight","customStyle","flexValue","concat","flexGrow","flexShrink","flex","msFlex","WebkitFlex","maxWidth","minWidth","_this4","_this$props4","items","rowHeight","_ref7","clientHeight","scrollHeight","_ref8","rowOverscanStartIndex","rowOverscanStopIndex","rowStartIndex","rowStopIndex","onRowsRendered","overscanStartIndex","overscanStopIndex","startIndex","stopIndex","setState","PureComponent","estimatedRowSize","overscanIndicesGetter","overscanRowCount","scrollToAlignment","default","propTypes","process","env","NODE_ENV","string","autoHeight","bool","childType","type","prototype","Error","number","isRequired","func","oneOfType","oneOf","bpfrpt_proptype_CellPosition"],"sources":["/Users/zhabib/Documents/GitHub/box-elements-samples/demo-box-metadata-views/node_modules/react-virtualized/dist/es/Table/Table.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";"],"mappings":"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"},"metadata":{},"sourceType":"module"}