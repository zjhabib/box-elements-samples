{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport AsyncError from './AsyncError';\nimport { retryNumOfTimes } from '../../../utils/function';\nvar DEFAULT_NUM_TIMES = 3;\nvar DEFAULT_INITIAL_DELAY = 500;\nvar DEFAULT_BACKOFF_FACTOR = 2;\nvar AsyncLoad = function AsyncLoad() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    errorComponent = _ref.errorComponent,\n    fallback = _ref.fallback,\n    loader = _ref.loader;\n  var lazyRetry = function lazyRetry() {\n    return retryNumOfTimes(function (successCallback, errorCallback) {\n      return loader().then(successCallback).catch(errorCallback);\n    }, DEFAULT_NUM_TIMES, DEFAULT_INITIAL_DELAY, DEFAULT_BACKOFF_FACTOR);\n  };\n  var LazyComponent = React.lazy(function () {\n    return loader().catch(lazyRetry);\n  });\n  return React.forwardRef(function (props, ref) {\n    return React.createElement(AsyncError, {\n      component: errorComponent\n    }, React.createElement(React.Suspense, {\n      fallback: fallback || null\n    }, React.createElement(LazyComponent, _extends({\n      ref: ref\n    }, props))));\n  });\n};\nexport default AsyncLoad;","map":{"version":3,"sources":["../../../../src/elements/common/async-load/AsyncLoad.js"],"names":["React","AsyncError","retryNumOfTimes","DEFAULT_NUM_TIMES","DEFAULT_INITIAL_DELAY","DEFAULT_BACKOFF_FACTOR","AsyncLoad","errorComponent","fallback","loader","lazyRetry","successCallback","errorCallback","then","catch","LazyComponent","lazy","forwardRef","props","ref"],"mappings":";;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAQA,IAAMC,iBAAiB,GAAG,CAA1B;AACA,IAAMC,qBAAqB,GAAG,GAA9B;AACA,IAAMC,sBAAsB,GAAG,CAA/B;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAA,EAAsD;EAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,CAAA,CAAO;IAAnDC,cAAmD,GAAA,IAAA,CAAnDA,cAAmD;IAAnCC,QAAmC,GAAA,IAAA,CAAnCA,QAAmC;IAAzBC,MAAyB,GAAA,IAAA,CAAzBA,MAAyB;EACpE,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAA,EAAA;IAAA,OACdR,eAAe,CACX,UAACS,eAAD,EAAkBC,aAAlB,EAAA;MAAA,OACIH,MAAM,CAAA,CAAA,CACDI,IADLJ,CACUE,eADVF,CAAAA,CAEKK,KAFLL,CAEWG,aAFXH,CADJ;IAAA,CADW,EAKXN,iBALW,EAMXC,qBANW,EAOXC,sBAPW,CADD;EAAA,CAAlB;EAUA,IAAMU,aAAa,GAAG,KAAK,CAACC,IAAN,CAAW,YAAA;IAAA,OAAMP,MAAM,CAAA,CAAA,CAAGK,KAATL,CAAeC,SAAfD,CAAN;EAAA,CAAX,CAAtB;EAEA,OAAO,KAAK,CAACQ,UAAN,CAAyC,UAACC,KAAD,EAAgBC,GAAhB,EAAA;IAAA,OAC5C,KAAA,CAAA,aAAA,CAAC,UAAD,EAAA;MAAY,SAAS,EAAEZ;IAAvB,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,KAAD,CAAO,QAAP,EAAA;MAAgB,QAAQ,EAAEC,QAAQ,IAAI;IAAtC,CAAA,EACI,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA,QAAA,CAAA;MAAe,GAAG,EAAEW;IAApB,CAAA,EAA6BD,KAA7B,CAAA,CADJ,CADJ,CAD4C;EAAA,CAAzC,CAAP;AAOH,CApBD;AAsBA,eAAeZ,SAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport AsyncError from './AsyncError';\nimport { retryNumOfTimes } from '../../../utils/function';\n\ntype Props = {\n    errorComponent?: React.ComponentType<any>,\n    fallback?: React.Element<any>,\n    loader: () => Promise<any>,\n};\n\nconst DEFAULT_NUM_TIMES = 3;\nconst DEFAULT_INITIAL_DELAY = 500;\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\nconst AsyncLoad = ({ errorComponent, fallback, loader }: Props = {}) => {\n    const lazyRetry = () =>\n        retryNumOfTimes(\n            (successCallback, errorCallback) =>\n                loader()\n                    .then(successCallback)\n                    .catch(errorCallback),\n            DEFAULT_NUM_TIMES,\n            DEFAULT_INITIAL_DELAY,\n            DEFAULT_BACKOFF_FACTOR,\n        );\n    const LazyComponent = React.lazy(() => loader().catch(lazyRetry));\n\n    return React.forwardRef<Object, React.Ref<any>>((props: Object, ref: React.Ref<any>) => (\n        <AsyncError component={errorComponent}>\n            <React.Suspense fallback={fallback || null}>\n                <LazyComponent ref={ref} {...props} />\n            </React.Suspense>\n        </AsyncError>\n    ));\n};\n\nexport default AsyncLoad;\n"]},"metadata":{},"sourceType":"module"}