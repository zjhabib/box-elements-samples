{"ast":null,"code":"/**\n * \n * @file Content Explorer Delete Confirmation Dialog\n * @author Box\n */\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../messages';\nimport { ACCESS_NONE, ACCESS_OPEN, ACCESS_COLLAB, ACCESS_COMPANY } from '../../../constants';\nimport './ShareAccessSelect.scss';\nvar ShareAccessSelect = function ShareAccessSelect(_ref) {\n  var className = _ref.className,\n    canSetShareAccess = _ref.canSetShareAccess,\n    onChange = _ref.onChange,\n    item = _ref.item,\n    intl = _ref.intl;\n  var allowedSharedAccessLevels = item.allowed_shared_link_access_levels,\n    permissions = item.permissions,\n    sharedLink = item.shared_link;\n  if (!allowedSharedAccessLevels) {\n    return React.createElement(\"span\", null);\n  }\n  var _ref2 = sharedLink || {},\n    _ref2$access = _ref2.access,\n    access = _ref2$access === void 0 ? ACCESS_NONE : _ref2$access;\n  var _ref3 = permissions || {},\n    allowShareAccessChange = _ref3.can_set_share_access;\n  var changeHandler = function changeHandler(_ref4) {\n    var target = _ref4.target;\n    return onChange(target.value, item);\n  };\n  var allowOpen = allowedSharedAccessLevels.indexOf(ACCESS_OPEN) > -1;\n  var allowCollab = allowedSharedAccessLevels.indexOf(ACCESS_COLLAB) > -1;\n  var allowCompany = allowedSharedAccessLevels.indexOf(ACCESS_COMPANY) > -1;\n  var allowed = canSetShareAccess && allowShareAccessChange && (allowOpen || allowCompany || allowCollab);\n  if (!allowed) {\n    return React.createElement(\"span\", null);\n  }\n  /* eslint-disable jsx-a11y/no-onchange */\n\n  return React.createElement(\"select\", {\n    className: \"be-share-access-select \".concat(className),\n    onChange: changeHandler,\n    value: access\n  }, allowOpen ? React.createElement(\"option\", {\n    value: ACCESS_OPEN\n  }, intl.formatMessage(messages.shareAccessOpen)) : null, allowCollab ? React.createElement(\"option\", {\n    value: ACCESS_COLLAB\n  }, intl.formatMessage(messages.shareAccessCollab)) : null, allowCompany ? React.createElement(\"option\", {\n    value: ACCESS_COMPANY\n  }, intl.formatMessage(messages.shareAccessCompany)) : null, React.createElement(\"option\", {\n    value: ACCESS_NONE\n  }, access === ACCESS_NONE ? intl.formatMessage(messages.shareAccessNone) : intl.formatMessage(messages.shareAccessRemove)));\n};\nexport default injectIntl(ShareAccessSelect);","map":{"version":3,"sources":["../../../../src/elements/common/share-access-select/ShareAccessSelect.js"],"names":["React","injectIntl","messages","ACCESS_NONE","ACCESS_OPEN","ACCESS_COLLAB","ACCESS_COMPANY","ShareAccessSelect","className","canSetShareAccess","onChange","item","intl","allowed_shared_link_access_levels","allowedSharedAccessLevels","permissions","shared_link","sharedLink","access","can_set_share_access","allowShareAccessChange","changeHandler","target","value","allowOpen","indexOf","allowCollab","allowCompany","allowed","formatMessage","shareAccessOpen","shareAccessCollab","shareAccessCompany","shareAccessNone","shareAccessRemove"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Explorer Delete Confirmation Dialog\n * @author Box\n */\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport messages from '../messages';\nimport { ACCESS_NONE, ACCESS_OPEN, ACCESS_COLLAB, ACCESS_COMPANY } from '../../../constants';\nimport type { BoxItem } from '../../../common/types/core';\nimport './ShareAccessSelect.scss';\n\ntype Props = {\n    canSetShareAccess: boolean,\n    className: string,\n    item: BoxItem,\n    onChange: Function,\n} & InjectIntlProvidedProps;\n\nconst ShareAccessSelect = ({ className, canSetShareAccess, onChange, item, intl }: Props) => {\n    const { allowed_shared_link_access_levels: allowedSharedAccessLevels, permissions, shared_link: sharedLink } = item;\n\n    if (!allowedSharedAccessLevels) {\n        return <span />;\n    }\n\n    const { access = ACCESS_NONE } = sharedLink || {};\n    const { can_set_share_access: allowShareAccessChange } = permissions || {};\n\n    const changeHandler = ({ target }) => onChange(target.value, item);\n    const allowOpen = allowedSharedAccessLevels.indexOf(ACCESS_OPEN) > -1;\n    const allowCollab = allowedSharedAccessLevels.indexOf(ACCESS_COLLAB) > -1;\n    const allowCompany = allowedSharedAccessLevels.indexOf(ACCESS_COMPANY) > -1;\n    const allowed = canSetShareAccess && allowShareAccessChange && (allowOpen || allowCompany || allowCollab);\n\n    if (!allowed) {\n        return <span />;\n    }\n\n    /* eslint-disable jsx-a11y/no-onchange */\n    return (\n        <select className={`be-share-access-select ${className}`} onChange={changeHandler} value={access}>\n            {allowOpen ? <option value={ACCESS_OPEN}>{intl.formatMessage(messages.shareAccessOpen)}</option> : null}\n            {allowCollab ? (\n                <option value={ACCESS_COLLAB}>{intl.formatMessage(messages.shareAccessCollab)}</option>\n            ) : null}\n            {allowCompany ? (\n                <option value={ACCESS_COMPANY}>{intl.formatMessage(messages.shareAccessCompany)}</option>\n            ) : null}\n            <option value={ACCESS_NONE}>\n                {access === ACCESS_NONE\n                    ? intl.formatMessage(messages.shareAccessNone)\n                    : intl.formatMessage(messages.shareAccessRemove)}\n            </option>\n        </select>\n    );\n};\n\nexport default injectIntl(ShareAccessSelect);\n"]},"metadata":{},"sourceType":"module"}